<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/AWSDynamoDBGetItemInput.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/AWSDynamoDBGetItemInput</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Represents the input of a &lt;code&gt;GetItem&lt;/code&gt; operation.&lt;/p&gt;
Required parameters: [TableName, Key]</Abstract>
			<DeclaredIn>AWSDynamoDBModel.h</DeclaredIn>
            
			
			<NodeRef refid="610"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSDynamoDBGetItemInput/setAttributesToGet:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;This is a legacy parameter. Use &lt;code&gt;ProjectionExpression&lt;/code&gt; instead. For more information, see AttributesToGet in the &lt;i&gt;Amazon DynamoDB Developer Guide&lt;/i&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSDynamoDBModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSArray&lt;NSString*&gt; *attributesToGet</Declaration>
			
			
			<Anchor>//api/name/attributesToGet</Anchor>
            <NodeRef refid="610"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSDynamoDBGetItemInput/attributesToGet</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;This is a legacy parameter. Use &lt;code&gt;ProjectionExpression&lt;/code&gt; instead. For more information, see AttributesToGet in the &lt;i&gt;Amazon DynamoDB Developer Guide&lt;/i&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSDynamoDBModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSArray&lt;NSString*&gt; *attributesToGet</Declaration>
			
			
			<Anchor>//api/name/attributesToGet</Anchor>
            <NodeRef refid="610"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSDynamoDBGetItemInput/attributesToGet</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;This is a legacy parameter. Use &lt;code&gt;ProjectionExpression&lt;/code&gt; instead. For more information, see AttributesToGet in the &lt;i&gt;Amazon DynamoDB Developer Guide&lt;/i&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSDynamoDBModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSArray&lt;NSString*&gt; *attributesToGet</Declaration>
			
			
			<Anchor>//api/name/attributesToGet</Anchor>
            <NodeRef refid="610"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSDynamoDBGetItemInput/setConsistentRead:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Determines the read consistency model: If set to &lt;code&gt;true&lt;/code&gt;, then the operation uses strongly consistent reads; otherwise, the operation uses eventually consistent reads.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSDynamoDBModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSNumber *consistentRead</Declaration>
			
			
			<Anchor>//api/name/consistentRead</Anchor>
            <NodeRef refid="610"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSDynamoDBGetItemInput/consistentRead</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Determines the read consistency model: If set to &lt;code&gt;true&lt;/code&gt;, then the operation uses strongly consistent reads; otherwise, the operation uses eventually consistent reads.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSDynamoDBModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSNumber *consistentRead</Declaration>
			
			
			<Anchor>//api/name/consistentRead</Anchor>
            <NodeRef refid="610"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSDynamoDBGetItemInput/consistentRead</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Determines the read consistency model: If set to &lt;code&gt;true&lt;/code&gt;, then the operation uses strongly consistent reads; otherwise, the operation uses eventually consistent reads.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSDynamoDBModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSNumber *consistentRead</Declaration>
			
			
			<Anchor>//api/name/consistentRead</Anchor>
            <NodeRef refid="610"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSDynamoDBGetItemInput/setExpressionAttributeNames:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;One or more substitution tokens for attribute names in an expression. The following are some use cases for using &lt;code&gt;ExpressionAttributeNames&lt;/code&gt;:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;To access an attribute whose name conflicts with a DynamoDB reserved word.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;To create a placeholder for repeating occurrences of an attribute name in an expression.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;To prevent special characters in an attribute name from being misinterpreted in an expression.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Use the &lt;b&gt;#&lt;/b&gt; character in an expression to dereference an attribute name. For example, consider the following attribute name:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;Percentile&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;The name of this attribute conflicts with a reserved word, so it cannot be used directly in an expression. (For the complete list of reserved words, see Accessing Item Attributes in the &lt;i&gt;Amazon DynamoDB Developer Guide&lt;/i&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSDynamoDBModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSDictionary&lt;NSString*NSString*&gt; *expressionAttributeNames</Declaration>
			
			
			<Anchor>//api/name/expressionAttributeNames</Anchor>
            <NodeRef refid="610"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSDynamoDBGetItemInput/expressionAttributeNames</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;One or more substitution tokens for attribute names in an expression. The following are some use cases for using &lt;code&gt;ExpressionAttributeNames&lt;/code&gt;:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;To access an attribute whose name conflicts with a DynamoDB reserved word.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;To create a placeholder for repeating occurrences of an attribute name in an expression.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;To prevent special characters in an attribute name from being misinterpreted in an expression.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Use the &lt;b&gt;#&lt;/b&gt; character in an expression to dereference an attribute name. For example, consider the following attribute name:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;Percentile&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;The name of this attribute conflicts with a reserved word, so it cannot be used directly in an expression. (For the complete list of reserved words, see Accessing Item Attributes in the &lt;i&gt;Amazon DynamoDB Developer Guide&lt;/i&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSDynamoDBModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSDictionary&lt;NSString*NSString*&gt; *expressionAttributeNames</Declaration>
			
			
			<Anchor>//api/name/expressionAttributeNames</Anchor>
            <NodeRef refid="610"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSDynamoDBGetItemInput/expressionAttributeNames</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;One or more substitution tokens for attribute names in an expression. The following are some use cases for using &lt;code&gt;ExpressionAttributeNames&lt;/code&gt;:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;To access an attribute whose name conflicts with a DynamoDB reserved word.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;To create a placeholder for repeating occurrences of an attribute name in an expression.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;To prevent special characters in an attribute name from being misinterpreted in an expression.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Use the &lt;b&gt;#&lt;/b&gt; character in an expression to dereference an attribute name. For example, consider the following attribute name:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;Percentile&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;The name of this attribute conflicts with a reserved word, so it cannot be used directly in an expression. (For the complete list of reserved words, see Accessing Item Attributes in the &lt;i&gt;Amazon DynamoDB Developer Guide&lt;/i&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSDynamoDBModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSDictionary&lt;NSString*NSString*&gt; *expressionAttributeNames</Declaration>
			
			
			<Anchor>//api/name/expressionAttributeNames</Anchor>
            <NodeRef refid="610"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSDynamoDBGetItemInput/setKey:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;A map of attribute names to &lt;code&gt;AttributeValue&lt;/code&gt; objects, representing the primary key of the item to retrieve.&lt;/p&gt;&lt;p&gt;For the primary key, you must provide all of the attributes. For example, with a simple primary key, you only need to provide a value for the partition key. For a composite primary key, you must provide values for both the partition key and the sort key.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSDynamoDBModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSDictionary&lt;NSString*AWSDynamoDBAttributeValue*&gt; *key</Declaration>
			
			
			<Anchor>//api/name/key</Anchor>
            <NodeRef refid="610"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSDynamoDBGetItemInput/key</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;A map of attribute names to &lt;code&gt;AttributeValue&lt;/code&gt; objects, representing the primary key of the item to retrieve.&lt;/p&gt;&lt;p&gt;For the primary key, you must provide all of the attributes. For example, with a simple primary key, you only need to provide a value for the partition key. For a composite primary key, you must provide values for both the partition key and the sort key.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSDynamoDBModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSDictionary&lt;NSString*AWSDynamoDBAttributeValue*&gt; *key</Declaration>
			
			
			<Anchor>//api/name/key</Anchor>
            <NodeRef refid="610"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSDynamoDBGetItemInput/key</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;A map of attribute names to &lt;code&gt;AttributeValue&lt;/code&gt; objects, representing the primary key of the item to retrieve.&lt;/p&gt;&lt;p&gt;For the primary key, you must provide all of the attributes. For example, with a simple primary key, you only need to provide a value for the partition key. For a composite primary key, you must provide values for both the partition key and the sort key.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSDynamoDBModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSDictionary&lt;NSString*AWSDynamoDBAttributeValue*&gt; *key</Declaration>
			
			
			<Anchor>//api/name/key</Anchor>
            <NodeRef refid="610"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSDynamoDBGetItemInput/setProjectionExpression:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;A string that identifies one or more attributes to retrieve from the table. These attributes can include scalars, sets, or elements of a JSON document. The attributes in the expression must be separated by commas.&lt;/p&gt;&lt;p&gt;If no attribute names are specified, then all attributes will be returned. If any of the requested attributes are not found, they will not appear in the result.&lt;/p&gt;&lt;p&gt;For more information, see Accessing Item Attributes in the &lt;i&gt;Amazon DynamoDB Developer Guide&lt;/i&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSDynamoDBModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *projectionExpression</Declaration>
			
			
			<Anchor>//api/name/projectionExpression</Anchor>
            <NodeRef refid="610"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSDynamoDBGetItemInput/projectionExpression</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;A string that identifies one or more attributes to retrieve from the table. These attributes can include scalars, sets, or elements of a JSON document. The attributes in the expression must be separated by commas.&lt;/p&gt;&lt;p&gt;If no attribute names are specified, then all attributes will be returned. If any of the requested attributes are not found, they will not appear in the result.&lt;/p&gt;&lt;p&gt;For more information, see Accessing Item Attributes in the &lt;i&gt;Amazon DynamoDB Developer Guide&lt;/i&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSDynamoDBModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *projectionExpression</Declaration>
			
			
			<Anchor>//api/name/projectionExpression</Anchor>
            <NodeRef refid="610"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSDynamoDBGetItemInput/projectionExpression</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;A string that identifies one or more attributes to retrieve from the table. These attributes can include scalars, sets, or elements of a JSON document. The attributes in the expression must be separated by commas.&lt;/p&gt;&lt;p&gt;If no attribute names are specified, then all attributes will be returned. If any of the requested attributes are not found, they will not appear in the result.&lt;/p&gt;&lt;p&gt;For more information, see Accessing Item Attributes in the &lt;i&gt;Amazon DynamoDB Developer Guide&lt;/i&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSDynamoDBModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *projectionExpression</Declaration>
			
			
			<Anchor>//api/name/projectionExpression</Anchor>
            <NodeRef refid="610"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSDynamoDBGetItemInput/setReturnConsumedCapacity:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Determines the level of detail about provisioned throughput consumption that is returned in the response:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;INDEXES&lt;/code&gt; - The response includes the aggregate &lt;code&gt;ConsumedCapacity&lt;/code&gt; for the operation, together with &lt;code&gt;ConsumedCapacity&lt;/code&gt; for each table and secondary index that was accessed.&lt;/p&gt;&lt;p&gt;Note that some operations, such as &lt;code&gt;GetItem&lt;/code&gt; and &lt;code&gt;BatchGetItem&lt;/code&gt;, do not access any indexes at all. In these cases, specifying &lt;code&gt;INDEXES&lt;/code&gt; will only return &lt;code&gt;ConsumedCapacity&lt;/code&gt; information for table(s).&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;TOTAL&lt;/code&gt; - The response includes only the aggregate &lt;code&gt;ConsumedCapacity&lt;/code&gt; for the operation.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;NONE&lt;/code&gt; - No &lt;code&gt;ConsumedCapacity&lt;/code&gt; details are included in the response.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;</Abstract>
			<DeclaredIn>AWSDynamoDBModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) AWSDynamoDBReturnConsumedCapacity returnConsumedCapacity</Declaration>
			
			
			<Anchor>//api/name/returnConsumedCapacity</Anchor>
            <NodeRef refid="610"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSDynamoDBGetItemInput/returnConsumedCapacity</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Determines the level of detail about provisioned throughput consumption that is returned in the response:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;INDEXES&lt;/code&gt; - The response includes the aggregate &lt;code&gt;ConsumedCapacity&lt;/code&gt; for the operation, together with &lt;code&gt;ConsumedCapacity&lt;/code&gt; for each table and secondary index that was accessed.&lt;/p&gt;&lt;p&gt;Note that some operations, such as &lt;code&gt;GetItem&lt;/code&gt; and &lt;code&gt;BatchGetItem&lt;/code&gt;, do not access any indexes at all. In these cases, specifying &lt;code&gt;INDEXES&lt;/code&gt; will only return &lt;code&gt;ConsumedCapacity&lt;/code&gt; information for table(s).&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;TOTAL&lt;/code&gt; - The response includes only the aggregate &lt;code&gt;ConsumedCapacity&lt;/code&gt; for the operation.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;NONE&lt;/code&gt; - No &lt;code&gt;ConsumedCapacity&lt;/code&gt; details are included in the response.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;</Abstract>
			<DeclaredIn>AWSDynamoDBModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) AWSDynamoDBReturnConsumedCapacity returnConsumedCapacity</Declaration>
			
			
			<Anchor>//api/name/returnConsumedCapacity</Anchor>
            <NodeRef refid="610"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSDynamoDBGetItemInput/returnConsumedCapacity</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Determines the level of detail about provisioned throughput consumption that is returned in the response:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;INDEXES&lt;/code&gt; - The response includes the aggregate &lt;code&gt;ConsumedCapacity&lt;/code&gt; for the operation, together with &lt;code&gt;ConsumedCapacity&lt;/code&gt; for each table and secondary index that was accessed.&lt;/p&gt;&lt;p&gt;Note that some operations, such as &lt;code&gt;GetItem&lt;/code&gt; and &lt;code&gt;BatchGetItem&lt;/code&gt;, do not access any indexes at all. In these cases, specifying &lt;code&gt;INDEXES&lt;/code&gt; will only return &lt;code&gt;ConsumedCapacity&lt;/code&gt; information for table(s).&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;TOTAL&lt;/code&gt; - The response includes only the aggregate &lt;code&gt;ConsumedCapacity&lt;/code&gt; for the operation.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;NONE&lt;/code&gt; - No &lt;code&gt;ConsumedCapacity&lt;/code&gt; details are included in the response.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;</Abstract>
			<DeclaredIn>AWSDynamoDBModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) AWSDynamoDBReturnConsumedCapacity returnConsumedCapacity</Declaration>
			
			
			<Anchor>//api/name/returnConsumedCapacity</Anchor>
            <NodeRef refid="610"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSDynamoDBGetItemInput/setTableName:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The name of the table containing the requested item.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSDynamoDBModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *tableName</Declaration>
			
			
			<Anchor>//api/name/tableName</Anchor>
            <NodeRef refid="610"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSDynamoDBGetItemInput/tableName</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The name of the table containing the requested item.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSDynamoDBModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *tableName</Declaration>
			
			
			<Anchor>//api/name/tableName</Anchor>
            <NodeRef refid="610"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSDynamoDBGetItemInput/tableName</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The name of the table containing the requested item.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSDynamoDBModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *tableName</Declaration>
			
			
			<Anchor>//api/name/tableName</Anchor>
            <NodeRef refid="610"/>
		</Token>
		
        
        
	</File>
</Tokens>