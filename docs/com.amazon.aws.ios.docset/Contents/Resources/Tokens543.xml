<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/AWSComprehendInputDataConfig.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/AWSComprehendInputDataConfig</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The input properties for a topic detection job.&lt;/p&gt;
Required parameters: [S3Uri]</Abstract>
			<DeclaredIn>AWSComprehendModel.h</DeclaredIn>
            
			
			<NodeRef refid="543"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSComprehendInputDataConfig/setInputFormat:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Specifies how the text in an input file should be processed:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;ONEDOCPERFILE&lt;/code&gt; - Each file is considered a separate document. Use this option when you are processing large documents, such as newspaper articles or scientific papers.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;ONEDOCPERLINE&lt;/code&gt; - Each line in a file is considered a separate document. Use this option when you are processing many short documents, such as text messages.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;</Abstract>
			<DeclaredIn>AWSComprehendModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) AWSComprehendInputFormat inputFormat</Declaration>
			
			
			<Anchor>//api/name/inputFormat</Anchor>
            <NodeRef refid="543"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSComprehendInputDataConfig/inputFormat</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Specifies how the text in an input file should be processed:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;ONEDOCPERFILE&lt;/code&gt; - Each file is considered a separate document. Use this option when you are processing large documents, such as newspaper articles or scientific papers.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;ONEDOCPERLINE&lt;/code&gt; - Each line in a file is considered a separate document. Use this option when you are processing many short documents, such as text messages.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;</Abstract>
			<DeclaredIn>AWSComprehendModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) AWSComprehendInputFormat inputFormat</Declaration>
			
			
			<Anchor>//api/name/inputFormat</Anchor>
            <NodeRef refid="543"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSComprehendInputDataConfig/inputFormat</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Specifies how the text in an input file should be processed:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;ONEDOCPERFILE&lt;/code&gt; - Each file is considered a separate document. Use this option when you are processing large documents, such as newspaper articles or scientific papers.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;ONEDOCPERLINE&lt;/code&gt; - Each line in a file is considered a separate document. Use this option when you are processing many short documents, such as text messages.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;</Abstract>
			<DeclaredIn>AWSComprehendModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) AWSComprehendInputFormat inputFormat</Declaration>
			
			
			<Anchor>//api/name/inputFormat</Anchor>
            <NodeRef refid="543"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSComprehendInputDataConfig/setS3Uri:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The Amazon S3 URI for the input data. The URI must be in same region as the API endpoint that you are calling. The URI can point to a single input file or it can provide the prefix for a collection of data files. &lt;/p&gt;&lt;p&gt;For example, if you use the URI &lt;code&gt;S3://bucketName/prefix&lt;/code&gt;, if the prefix is a single file, Amazon Comprehend uses that file as input. If more than one file begins with the prefix, Amazon Comprehend uses all of them as input.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSComprehendModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *s3Uri</Declaration>
			
			
			<Anchor>//api/name/s3Uri</Anchor>
            <NodeRef refid="543"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSComprehendInputDataConfig/s3Uri</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The Amazon S3 URI for the input data. The URI must be in same region as the API endpoint that you are calling. The URI can point to a single input file or it can provide the prefix for a collection of data files. &lt;/p&gt;&lt;p&gt;For example, if you use the URI &lt;code&gt;S3://bucketName/prefix&lt;/code&gt;, if the prefix is a single file, Amazon Comprehend uses that file as input. If more than one file begins with the prefix, Amazon Comprehend uses all of them as input.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSComprehendModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *s3Uri</Declaration>
			
			
			<Anchor>//api/name/s3Uri</Anchor>
            <NodeRef refid="543"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSComprehendInputDataConfig/s3Uri</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The Amazon S3 URI for the input data. The URI must be in same region as the API endpoint that you are calling. The URI can point to a single input file or it can provide the prefix for a collection of data files. &lt;/p&gt;&lt;p&gt;For example, if you use the URI &lt;code&gt;S3://bucketName/prefix&lt;/code&gt;, if the prefix is a single file, Amazon Comprehend uses that file as input. If more than one file begins with the prefix, Amazon Comprehend uses all of them as input.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSComprehendModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *s3Uri</Declaration>
			
			
			<Anchor>//api/name/s3Uri</Anchor>
            <NodeRef refid="543"/>
		</Token>
		
        
        
	</File>
</Tokens>