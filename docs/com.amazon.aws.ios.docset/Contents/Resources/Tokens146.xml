<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/AWSCloudWatchGetMetricStatisticsInput.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/AWSCloudWatchGetMetricStatisticsInput</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>AWSCloudWatchModel.h</DeclaredIn>
            
			
			<NodeRef refid="146"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCloudWatchGetMetricStatisticsInput/setDimensions:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The dimensions. If the metric contains multiple dimensions, you must include a value for each dimension. CloudWatch treats each unique combination of dimensions as a separate metric. If a specific combination of dimensions was not published, you can&apos;t retrieve statistics for it. You must specify the same dimensions that were used when the metrics were created. For an example, see Publishing Metrics in the &lt;i&gt;Amazon CloudWatch User Guide&lt;/i&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCloudWatchModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSArray&lt;AWSCloudWatchDimension*&gt; *dimensions</Declaration>
			
			
			<Anchor>//api/name/dimensions</Anchor>
            <NodeRef refid="146"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCloudWatchGetMetricStatisticsInput/dimensions</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The dimensions. If the metric contains multiple dimensions, you must include a value for each dimension. CloudWatch treats each unique combination of dimensions as a separate metric. If a specific combination of dimensions was not published, you can&apos;t retrieve statistics for it. You must specify the same dimensions that were used when the metrics were created. For an example, see Publishing Metrics in the &lt;i&gt;Amazon CloudWatch User Guide&lt;/i&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCloudWatchModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSArray&lt;AWSCloudWatchDimension*&gt; *dimensions</Declaration>
			
			
			<Anchor>//api/name/dimensions</Anchor>
            <NodeRef refid="146"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSCloudWatchGetMetricStatisticsInput/dimensions</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The dimensions. If the metric contains multiple dimensions, you must include a value for each dimension. CloudWatch treats each unique combination of dimensions as a separate metric. If a specific combination of dimensions was not published, you can&apos;t retrieve statistics for it. You must specify the same dimensions that were used when the metrics were created. For an example, see Publishing Metrics in the &lt;i&gt;Amazon CloudWatch User Guide&lt;/i&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCloudWatchModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSArray&lt;AWSCloudWatchDimension*&gt; *dimensions</Declaration>
			
			
			<Anchor>//api/name/dimensions</Anchor>
            <NodeRef refid="146"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCloudWatchGetMetricStatisticsInput/setEndTime:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The time stamp that determines the last data point to return.&lt;/p&gt;&lt;p&gt;The value specified is exclusive; results include data points up to the specified time stamp. The time stamp must be in ISO 8601 UTC format (for example, 2016-10-10T23:00:00Z).&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCloudWatchModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSDate *endTime</Declaration>
			
			
			<Anchor>//api/name/endTime</Anchor>
            <NodeRef refid="146"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCloudWatchGetMetricStatisticsInput/endTime</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The time stamp that determines the last data point to return.&lt;/p&gt;&lt;p&gt;The value specified is exclusive; results include data points up to the specified time stamp. The time stamp must be in ISO 8601 UTC format (for example, 2016-10-10T23:00:00Z).&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCloudWatchModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSDate *endTime</Declaration>
			
			
			<Anchor>//api/name/endTime</Anchor>
            <NodeRef refid="146"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSCloudWatchGetMetricStatisticsInput/endTime</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The time stamp that determines the last data point to return.&lt;/p&gt;&lt;p&gt;The value specified is exclusive; results include data points up to the specified time stamp. The time stamp must be in ISO 8601 UTC format (for example, 2016-10-10T23:00:00Z).&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCloudWatchModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSDate *endTime</Declaration>
			
			
			<Anchor>//api/name/endTime</Anchor>
            <NodeRef refid="146"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCloudWatchGetMetricStatisticsInput/setExtendedStatistics:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The percentile statistics. Specify values between p0.0 and p100. When calling &lt;code&gt;GetMetricStatistics&lt;/code&gt;, you must specify either &lt;code&gt;Statistics&lt;/code&gt; or &lt;code&gt;ExtendedStatistics&lt;/code&gt;, but not both. Percentile statistics are not available for metrics when any of the metric values are negative numbers.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCloudWatchModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSArray&lt;NSString*&gt; *extendedStatistics</Declaration>
			
			
			<Anchor>//api/name/extendedStatistics</Anchor>
            <NodeRef refid="146"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCloudWatchGetMetricStatisticsInput/extendedStatistics</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The percentile statistics. Specify values between p0.0 and p100. When calling &lt;code&gt;GetMetricStatistics&lt;/code&gt;, you must specify either &lt;code&gt;Statistics&lt;/code&gt; or &lt;code&gt;ExtendedStatistics&lt;/code&gt;, but not both. Percentile statistics are not available for metrics when any of the metric values are negative numbers.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCloudWatchModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSArray&lt;NSString*&gt; *extendedStatistics</Declaration>
			
			
			<Anchor>//api/name/extendedStatistics</Anchor>
            <NodeRef refid="146"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSCloudWatchGetMetricStatisticsInput/extendedStatistics</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The percentile statistics. Specify values between p0.0 and p100. When calling &lt;code&gt;GetMetricStatistics&lt;/code&gt;, you must specify either &lt;code&gt;Statistics&lt;/code&gt; or &lt;code&gt;ExtendedStatistics&lt;/code&gt;, but not both. Percentile statistics are not available for metrics when any of the metric values are negative numbers.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCloudWatchModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSArray&lt;NSString*&gt; *extendedStatistics</Declaration>
			
			
			<Anchor>//api/name/extendedStatistics</Anchor>
            <NodeRef refid="146"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCloudWatchGetMetricStatisticsInput/setMetricName:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The name of the metric, with or without spaces.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCloudWatchModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *metricName</Declaration>
			
			
			<Anchor>//api/name/metricName</Anchor>
            <NodeRef refid="146"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCloudWatchGetMetricStatisticsInput/metricName</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The name of the metric, with or without spaces.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCloudWatchModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *metricName</Declaration>
			
			
			<Anchor>//api/name/metricName</Anchor>
            <NodeRef refid="146"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSCloudWatchGetMetricStatisticsInput/metricName</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The name of the metric, with or without spaces.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCloudWatchModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *metricName</Declaration>
			
			
			<Anchor>//api/name/metricName</Anchor>
            <NodeRef refid="146"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCloudWatchGetMetricStatisticsInput/setNamespace:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The namespace of the metric, with or without spaces.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCloudWatchModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *namespace</Declaration>
			
			
			<Anchor>//api/name/namespace</Anchor>
            <NodeRef refid="146"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCloudWatchGetMetricStatisticsInput/namespace</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The namespace of the metric, with or without spaces.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCloudWatchModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *namespace</Declaration>
			
			
			<Anchor>//api/name/namespace</Anchor>
            <NodeRef refid="146"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSCloudWatchGetMetricStatisticsInput/namespace</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The namespace of the metric, with or without spaces.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCloudWatchModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *namespace</Declaration>
			
			
			<Anchor>//api/name/namespace</Anchor>
            <NodeRef refid="146"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCloudWatchGetMetricStatisticsInput/setPeriod:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The granularity, in seconds, of the returned data points. For metrics with regular resolution, a period can be as short as one minute (60 seconds) and must be a multiple of 60. For high-resolution metrics that are collected at intervals of less than one minute, the period can be 1, 5, 10, 30, 60, or any multiple of 60. High-resolution metrics are those metrics stored by a &lt;code&gt;PutMetricData&lt;/code&gt; call that includes a &lt;code&gt;StorageResolution&lt;/code&gt; of 1 second.&lt;/p&gt;&lt;p&gt;If the &lt;code&gt;StartTime&lt;/code&gt; parameter specifies a time stamp that is greater than 3 hours ago, you must specify the period as follows or no data points in that time range is returned:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;Start time between 3 hours and 15 days ago - Use a multiple of 60 seconds (1 minute).&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Start time between 15 and 63 days ago - Use a multiple of 300 seconds (5 minutes).&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Start time greater than 63 days ago - Use a multiple of 3600 seconds (1 hour).&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;</Abstract>
			<DeclaredIn>AWSCloudWatchModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSNumber *period</Declaration>
			
			
			<Anchor>//api/name/period</Anchor>
            <NodeRef refid="146"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCloudWatchGetMetricStatisticsInput/period</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The granularity, in seconds, of the returned data points. For metrics with regular resolution, a period can be as short as one minute (60 seconds) and must be a multiple of 60. For high-resolution metrics that are collected at intervals of less than one minute, the period can be 1, 5, 10, 30, 60, or any multiple of 60. High-resolution metrics are those metrics stored by a &lt;code&gt;PutMetricData&lt;/code&gt; call that includes a &lt;code&gt;StorageResolution&lt;/code&gt; of 1 second.&lt;/p&gt;&lt;p&gt;If the &lt;code&gt;StartTime&lt;/code&gt; parameter specifies a time stamp that is greater than 3 hours ago, you must specify the period as follows or no data points in that time range is returned:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;Start time between 3 hours and 15 days ago - Use a multiple of 60 seconds (1 minute).&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Start time between 15 and 63 days ago - Use a multiple of 300 seconds (5 minutes).&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Start time greater than 63 days ago - Use a multiple of 3600 seconds (1 hour).&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;</Abstract>
			<DeclaredIn>AWSCloudWatchModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSNumber *period</Declaration>
			
			
			<Anchor>//api/name/period</Anchor>
            <NodeRef refid="146"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSCloudWatchGetMetricStatisticsInput/period</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The granularity, in seconds, of the returned data points. For metrics with regular resolution, a period can be as short as one minute (60 seconds) and must be a multiple of 60. For high-resolution metrics that are collected at intervals of less than one minute, the period can be 1, 5, 10, 30, 60, or any multiple of 60. High-resolution metrics are those metrics stored by a &lt;code&gt;PutMetricData&lt;/code&gt; call that includes a &lt;code&gt;StorageResolution&lt;/code&gt; of 1 second.&lt;/p&gt;&lt;p&gt;If the &lt;code&gt;StartTime&lt;/code&gt; parameter specifies a time stamp that is greater than 3 hours ago, you must specify the period as follows or no data points in that time range is returned:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;Start time between 3 hours and 15 days ago - Use a multiple of 60 seconds (1 minute).&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Start time between 15 and 63 days ago - Use a multiple of 300 seconds (5 minutes).&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Start time greater than 63 days ago - Use a multiple of 3600 seconds (1 hour).&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;</Abstract>
			<DeclaredIn>AWSCloudWatchModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSNumber *period</Declaration>
			
			
			<Anchor>//api/name/period</Anchor>
            <NodeRef refid="146"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCloudWatchGetMetricStatisticsInput/setStartTime:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The time stamp that determines the first data point to return. Start times are evaluated relative to the time that CloudWatch receives the request.&lt;/p&gt;&lt;p&gt;The value specified is inclusive; results include data points with the specified time stamp. The time stamp must be in ISO 8601 UTC format (for example, 2016-10-03T23:00:00Z).&lt;/p&gt;&lt;p&gt;CloudWatch rounds the specified time stamp as follows:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;Start time less than 15 days ago - Round down to the nearest whole minute. For example, 12:32:34 is rounded down to 12:32:00.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Start time between 15 and 63 days ago - Round down to the nearest 5-minute clock interval. For example, 12:32:34 is rounded down to 12:30:00.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Start time greater than 63 days ago - Round down to the nearest 1-hour clock interval. For example, 12:32:34 is rounded down to 12:00:00.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;If you set &lt;code&gt;Period&lt;/code&gt; to 5, 10, or 30, the start time of your request is rounded down to the nearest time that corresponds to even 5-, 10-, or 30-second divisions of a minute. For example, if you make a query at (HH:mm:ss) 01:05:23 for the previous 10-second period, the start time of your request is rounded down and you receive data from 01:05:10 to 01:05:20. If you make a query at 15:07:17 for the previous 5 minutes of data, using a period of 5 seconds, you receive data timestamped between 15:02:15 and 15:07:15. &lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCloudWatchModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSDate *startTime</Declaration>
			
			
			<Anchor>//api/name/startTime</Anchor>
            <NodeRef refid="146"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCloudWatchGetMetricStatisticsInput/startTime</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The time stamp that determines the first data point to return. Start times are evaluated relative to the time that CloudWatch receives the request.&lt;/p&gt;&lt;p&gt;The value specified is inclusive; results include data points with the specified time stamp. The time stamp must be in ISO 8601 UTC format (for example, 2016-10-03T23:00:00Z).&lt;/p&gt;&lt;p&gt;CloudWatch rounds the specified time stamp as follows:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;Start time less than 15 days ago - Round down to the nearest whole minute. For example, 12:32:34 is rounded down to 12:32:00.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Start time between 15 and 63 days ago - Round down to the nearest 5-minute clock interval. For example, 12:32:34 is rounded down to 12:30:00.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Start time greater than 63 days ago - Round down to the nearest 1-hour clock interval. For example, 12:32:34 is rounded down to 12:00:00.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;If you set &lt;code&gt;Period&lt;/code&gt; to 5, 10, or 30, the start time of your request is rounded down to the nearest time that corresponds to even 5-, 10-, or 30-second divisions of a minute. For example, if you make a query at (HH:mm:ss) 01:05:23 for the previous 10-second period, the start time of your request is rounded down and you receive data from 01:05:10 to 01:05:20. If you make a query at 15:07:17 for the previous 5 minutes of data, using a period of 5 seconds, you receive data timestamped between 15:02:15 and 15:07:15. &lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCloudWatchModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSDate *startTime</Declaration>
			
			
			<Anchor>//api/name/startTime</Anchor>
            <NodeRef refid="146"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSCloudWatchGetMetricStatisticsInput/startTime</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The time stamp that determines the first data point to return. Start times are evaluated relative to the time that CloudWatch receives the request.&lt;/p&gt;&lt;p&gt;The value specified is inclusive; results include data points with the specified time stamp. The time stamp must be in ISO 8601 UTC format (for example, 2016-10-03T23:00:00Z).&lt;/p&gt;&lt;p&gt;CloudWatch rounds the specified time stamp as follows:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;Start time less than 15 days ago - Round down to the nearest whole minute. For example, 12:32:34 is rounded down to 12:32:00.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Start time between 15 and 63 days ago - Round down to the nearest 5-minute clock interval. For example, 12:32:34 is rounded down to 12:30:00.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Start time greater than 63 days ago - Round down to the nearest 1-hour clock interval. For example, 12:32:34 is rounded down to 12:00:00.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;If you set &lt;code&gt;Period&lt;/code&gt; to 5, 10, or 30, the start time of your request is rounded down to the nearest time that corresponds to even 5-, 10-, or 30-second divisions of a minute. For example, if you make a query at (HH:mm:ss) 01:05:23 for the previous 10-second period, the start time of your request is rounded down and you receive data from 01:05:10 to 01:05:20. If you make a query at 15:07:17 for the previous 5 minutes of data, using a period of 5 seconds, you receive data timestamped between 15:02:15 and 15:07:15. &lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCloudWatchModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSDate *startTime</Declaration>
			
			
			<Anchor>//api/name/startTime</Anchor>
            <NodeRef refid="146"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCloudWatchGetMetricStatisticsInput/setStatistics:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The metric statistics, other than percentile. For percentile statistics, use &lt;code&gt;ExtendedStatistics&lt;/code&gt;. When calling &lt;code&gt;GetMetricStatistics&lt;/code&gt;, you must specify either &lt;code&gt;Statistics&lt;/code&gt; or &lt;code&gt;ExtendedStatistics&lt;/code&gt;, but not both.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCloudWatchModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSArray&lt;NSString*&gt; *statistics</Declaration>
			
			
			<Anchor>//api/name/statistics</Anchor>
            <NodeRef refid="146"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCloudWatchGetMetricStatisticsInput/statistics</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The metric statistics, other than percentile. For percentile statistics, use &lt;code&gt;ExtendedStatistics&lt;/code&gt;. When calling &lt;code&gt;GetMetricStatistics&lt;/code&gt;, you must specify either &lt;code&gt;Statistics&lt;/code&gt; or &lt;code&gt;ExtendedStatistics&lt;/code&gt;, but not both.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCloudWatchModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSArray&lt;NSString*&gt; *statistics</Declaration>
			
			
			<Anchor>//api/name/statistics</Anchor>
            <NodeRef refid="146"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSCloudWatchGetMetricStatisticsInput/statistics</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The metric statistics, other than percentile. For percentile statistics, use &lt;code&gt;ExtendedStatistics&lt;/code&gt;. When calling &lt;code&gt;GetMetricStatistics&lt;/code&gt;, you must specify either &lt;code&gt;Statistics&lt;/code&gt; or &lt;code&gt;ExtendedStatistics&lt;/code&gt;, but not both.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCloudWatchModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSArray&lt;NSString*&gt; *statistics</Declaration>
			
			
			<Anchor>//api/name/statistics</Anchor>
            <NodeRef refid="146"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCloudWatchGetMetricStatisticsInput/setUnit:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The unit for a given metric. Metrics may be reported in multiple units. Not supplying a unit results in all units being returned. If you specify only a unit that the metric does not report, the results of the call are null.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCloudWatchModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) AWSCloudWatchStandardUnit unit</Declaration>
			
			
			<Anchor>//api/name/unit</Anchor>
            <NodeRef refid="146"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCloudWatchGetMetricStatisticsInput/unit</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The unit for a given metric. Metrics may be reported in multiple units. Not supplying a unit results in all units being returned. If you specify only a unit that the metric does not report, the results of the call are null.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCloudWatchModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) AWSCloudWatchStandardUnit unit</Declaration>
			
			
			<Anchor>//api/name/unit</Anchor>
            <NodeRef refid="146"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSCloudWatchGetMetricStatisticsInput/unit</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The unit for a given metric. Metrics may be reported in multiple units. Not supplying a unit results in all units being returned. If you specify only a unit that the metric does not report, the results of the call are null.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCloudWatchModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) AWSCloudWatchStandardUnit unit</Declaration>
			
			
			<Anchor>//api/name/unit</Anchor>
            <NodeRef refid="146"/>
		</Token>
		
        
        
	</File>
</Tokens>