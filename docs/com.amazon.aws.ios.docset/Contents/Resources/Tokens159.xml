<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/AWSCloudWatchMetricDatum.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/AWSCloudWatchMetricDatum</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Encapsulates the information sent to either create a metric or add new values to be aggregated into an existing metric.&lt;/p&gt;
Required parameters: [MetricName]</Abstract>
			<DeclaredIn>AWSCloudWatchModel.h</DeclaredIn>
            
			
			<NodeRef refid="159"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCloudWatchMetricDatum/setCounts:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Array of numbers that is used along with the &lt;code&gt;Values&lt;/code&gt; array. Each number in the &lt;code&gt;Count&lt;/code&gt; array is the number of times the corresponding value in the &lt;code&gt;Values&lt;/code&gt; array occurred during the period. &lt;/p&gt;&lt;p&gt;If you omit the &lt;code&gt;Counts&lt;/code&gt; array, the default of 1 is used as the value for each count. If you include a &lt;code&gt;Counts&lt;/code&gt; array, it must include the same amount of values as the &lt;code&gt;Values&lt;/code&gt; array.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCloudWatchModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSArray&lt;NSNumber*&gt; *counts</Declaration>
			
			
			<Anchor>//api/name/counts</Anchor>
            <NodeRef refid="159"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCloudWatchMetricDatum/counts</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Array of numbers that is used along with the &lt;code&gt;Values&lt;/code&gt; array. Each number in the &lt;code&gt;Count&lt;/code&gt; array is the number of times the corresponding value in the &lt;code&gt;Values&lt;/code&gt; array occurred during the period. &lt;/p&gt;&lt;p&gt;If you omit the &lt;code&gt;Counts&lt;/code&gt; array, the default of 1 is used as the value for each count. If you include a &lt;code&gt;Counts&lt;/code&gt; array, it must include the same amount of values as the &lt;code&gt;Values&lt;/code&gt; array.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCloudWatchModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSArray&lt;NSNumber*&gt; *counts</Declaration>
			
			
			<Anchor>//api/name/counts</Anchor>
            <NodeRef refid="159"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSCloudWatchMetricDatum/counts</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Array of numbers that is used along with the &lt;code&gt;Values&lt;/code&gt; array. Each number in the &lt;code&gt;Count&lt;/code&gt; array is the number of times the corresponding value in the &lt;code&gt;Values&lt;/code&gt; array occurred during the period. &lt;/p&gt;&lt;p&gt;If you omit the &lt;code&gt;Counts&lt;/code&gt; array, the default of 1 is used as the value for each count. If you include a &lt;code&gt;Counts&lt;/code&gt; array, it must include the same amount of values as the &lt;code&gt;Values&lt;/code&gt; array.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCloudWatchModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSArray&lt;NSNumber*&gt; *counts</Declaration>
			
			
			<Anchor>//api/name/counts</Anchor>
            <NodeRef refid="159"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCloudWatchMetricDatum/setDimensions:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The dimensions associated with the metric.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCloudWatchModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSArray&lt;AWSCloudWatchDimension*&gt; *dimensions</Declaration>
			
			
			<Anchor>//api/name/dimensions</Anchor>
            <NodeRef refid="159"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCloudWatchMetricDatum/dimensions</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The dimensions associated with the metric.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCloudWatchModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSArray&lt;AWSCloudWatchDimension*&gt; *dimensions</Declaration>
			
			
			<Anchor>//api/name/dimensions</Anchor>
            <NodeRef refid="159"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSCloudWatchMetricDatum/dimensions</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The dimensions associated with the metric.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCloudWatchModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSArray&lt;AWSCloudWatchDimension*&gt; *dimensions</Declaration>
			
			
			<Anchor>//api/name/dimensions</Anchor>
            <NodeRef refid="159"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCloudWatchMetricDatum/setMetricName:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The name of the metric.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCloudWatchModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *metricName</Declaration>
			
			
			<Anchor>//api/name/metricName</Anchor>
            <NodeRef refid="159"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCloudWatchMetricDatum/metricName</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The name of the metric.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCloudWatchModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *metricName</Declaration>
			
			
			<Anchor>//api/name/metricName</Anchor>
            <NodeRef refid="159"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSCloudWatchMetricDatum/metricName</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The name of the metric.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCloudWatchModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *metricName</Declaration>
			
			
			<Anchor>//api/name/metricName</Anchor>
            <NodeRef refid="159"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCloudWatchMetricDatum/setStatisticValues:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The statistical values for the metric.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCloudWatchModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) AWSCloudWatchStatisticSet *statisticValues</Declaration>
			
			
			<Anchor>//api/name/statisticValues</Anchor>
            <NodeRef refid="159"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCloudWatchMetricDatum/statisticValues</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The statistical values for the metric.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCloudWatchModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) AWSCloudWatchStatisticSet *statisticValues</Declaration>
			
			
			<Anchor>//api/name/statisticValues</Anchor>
            <NodeRef refid="159"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSCloudWatchMetricDatum/statisticValues</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The statistical values for the metric.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCloudWatchModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) AWSCloudWatchStatisticSet *statisticValues</Declaration>
			
			
			<Anchor>//api/name/statisticValues</Anchor>
            <NodeRef refid="159"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCloudWatchMetricDatum/setStorageResolution:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Valid values are 1 and 60. Setting this to 1 specifies this metric as a high-resolution metric, so that CloudWatch stores the metric with sub-minute resolution down to one second. Setting this to 60 specifies this metric as a regular-resolution metric, which CloudWatch stores at 1-minute resolution. Currently, high resolution is available only for custom metrics. For more information about high-resolution metrics, see High-Resolution Metrics in the &lt;i&gt;Amazon CloudWatch User Guide&lt;/i&gt;. &lt;/p&gt;&lt;p&gt;This field is optional, if you do not specify it the default of 60 is used.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCloudWatchModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSNumber *storageResolution</Declaration>
			
			
			<Anchor>//api/name/storageResolution</Anchor>
            <NodeRef refid="159"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCloudWatchMetricDatum/storageResolution</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Valid values are 1 and 60. Setting this to 1 specifies this metric as a high-resolution metric, so that CloudWatch stores the metric with sub-minute resolution down to one second. Setting this to 60 specifies this metric as a regular-resolution metric, which CloudWatch stores at 1-minute resolution. Currently, high resolution is available only for custom metrics. For more information about high-resolution metrics, see High-Resolution Metrics in the &lt;i&gt;Amazon CloudWatch User Guide&lt;/i&gt;. &lt;/p&gt;&lt;p&gt;This field is optional, if you do not specify it the default of 60 is used.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCloudWatchModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSNumber *storageResolution</Declaration>
			
			
			<Anchor>//api/name/storageResolution</Anchor>
            <NodeRef refid="159"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSCloudWatchMetricDatum/storageResolution</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Valid values are 1 and 60. Setting this to 1 specifies this metric as a high-resolution metric, so that CloudWatch stores the metric with sub-minute resolution down to one second. Setting this to 60 specifies this metric as a regular-resolution metric, which CloudWatch stores at 1-minute resolution. Currently, high resolution is available only for custom metrics. For more information about high-resolution metrics, see High-Resolution Metrics in the &lt;i&gt;Amazon CloudWatch User Guide&lt;/i&gt;. &lt;/p&gt;&lt;p&gt;This field is optional, if you do not specify it the default of 60 is used.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCloudWatchModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSNumber *storageResolution</Declaration>
			
			
			<Anchor>//api/name/storageResolution</Anchor>
            <NodeRef refid="159"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCloudWatchMetricDatum/setTimestamp:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The time the metric data was received, expressed as the number of milliseconds since Jan 1, 1970 00:00:00 UTC.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCloudWatchModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSDate *timestamp</Declaration>
			
			
			<Anchor>//api/name/timestamp</Anchor>
            <NodeRef refid="159"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCloudWatchMetricDatum/timestamp</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The time the metric data was received, expressed as the number of milliseconds since Jan 1, 1970 00:00:00 UTC.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCloudWatchModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSDate *timestamp</Declaration>
			
			
			<Anchor>//api/name/timestamp</Anchor>
            <NodeRef refid="159"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSCloudWatchMetricDatum/timestamp</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The time the metric data was received, expressed as the number of milliseconds since Jan 1, 1970 00:00:00 UTC.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCloudWatchModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSDate *timestamp</Declaration>
			
			
			<Anchor>//api/name/timestamp</Anchor>
            <NodeRef refid="159"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCloudWatchMetricDatum/setUnit:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The unit of the metric.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCloudWatchModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) AWSCloudWatchStandardUnit unit</Declaration>
			
			
			<Anchor>//api/name/unit</Anchor>
            <NodeRef refid="159"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCloudWatchMetricDatum/unit</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The unit of the metric.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCloudWatchModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) AWSCloudWatchStandardUnit unit</Declaration>
			
			
			<Anchor>//api/name/unit</Anchor>
            <NodeRef refid="159"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSCloudWatchMetricDatum/unit</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The unit of the metric.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCloudWatchModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) AWSCloudWatchStandardUnit unit</Declaration>
			
			
			<Anchor>//api/name/unit</Anchor>
            <NodeRef refid="159"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCloudWatchMetricDatum/setValue:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The value for the metric.&lt;/p&gt;&lt;p&gt;Although the parameter accepts numbers of type Double, CloudWatch rejects values that are either too small or too large. Values must be in the range of 8.515920e-109 to 1.174271e+108 (Base 10) or 2e-360 to 2e360 (Base 2). In addition, special values (for example, NaN, +Infinity, -Infinity) are not supported.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCloudWatchModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSNumber *value</Declaration>
			
			
			<Anchor>//api/name/value</Anchor>
            <NodeRef refid="159"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCloudWatchMetricDatum/value</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The value for the metric.&lt;/p&gt;&lt;p&gt;Although the parameter accepts numbers of type Double, CloudWatch rejects values that are either too small or too large. Values must be in the range of 8.515920e-109 to 1.174271e+108 (Base 10) or 2e-360 to 2e360 (Base 2). In addition, special values (for example, NaN, +Infinity, -Infinity) are not supported.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCloudWatchModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSNumber *value</Declaration>
			
			
			<Anchor>//api/name/value</Anchor>
            <NodeRef refid="159"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSCloudWatchMetricDatum/value</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The value for the metric.&lt;/p&gt;&lt;p&gt;Although the parameter accepts numbers of type Double, CloudWatch rejects values that are either too small or too large. Values must be in the range of 8.515920e-109 to 1.174271e+108 (Base 10) or 2e-360 to 2e360 (Base 2). In addition, special values (for example, NaN, +Infinity, -Infinity) are not supported.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCloudWatchModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSNumber *value</Declaration>
			
			
			<Anchor>//api/name/value</Anchor>
            <NodeRef refid="159"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCloudWatchMetricDatum/setValues:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Array of numbers representing the values for the metric during the period. Each unique value is listed just once in this array, and the corresponding number in the &lt;code&gt;Counts&lt;/code&gt; array specifies the number of times that value occurred during the period. You can include up to 150 unique values in each &lt;code&gt;PutMetricData&lt;/code&gt; action that specifies a &lt;code&gt;Values&lt;/code&gt; array.&lt;/p&gt;&lt;p&gt;Although the &lt;code&gt;Values&lt;/code&gt; array accepts numbers of type &lt;code&gt;Double&lt;/code&gt;, CloudWatch rejects values that are either too small or too large. Values must be in the range of 8.515920e-109 to 1.174271e+108 (Base 10) or 2e-360 to 2e360 (Base 2). In addition, special values (for example, NaN, +Infinity, -Infinity) are not supported.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCloudWatchModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSArray&lt;NSNumber*&gt; *values</Declaration>
			
			
			<Anchor>//api/name/values</Anchor>
            <NodeRef refid="159"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCloudWatchMetricDatum/values</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Array of numbers representing the values for the metric during the period. Each unique value is listed just once in this array, and the corresponding number in the &lt;code&gt;Counts&lt;/code&gt; array specifies the number of times that value occurred during the period. You can include up to 150 unique values in each &lt;code&gt;PutMetricData&lt;/code&gt; action that specifies a &lt;code&gt;Values&lt;/code&gt; array.&lt;/p&gt;&lt;p&gt;Although the &lt;code&gt;Values&lt;/code&gt; array accepts numbers of type &lt;code&gt;Double&lt;/code&gt;, CloudWatch rejects values that are either too small or too large. Values must be in the range of 8.515920e-109 to 1.174271e+108 (Base 10) or 2e-360 to 2e360 (Base 2). In addition, special values (for example, NaN, +Infinity, -Infinity) are not supported.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCloudWatchModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSArray&lt;NSNumber*&gt; *values</Declaration>
			
			
			<Anchor>//api/name/values</Anchor>
            <NodeRef refid="159"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSCloudWatchMetricDatum/values</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Array of numbers representing the values for the metric during the period. Each unique value is listed just once in this array, and the corresponding number in the &lt;code&gt;Counts&lt;/code&gt; array specifies the number of times that value occurred during the period. You can include up to 150 unique values in each &lt;code&gt;PutMetricData&lt;/code&gt; action that specifies a &lt;code&gt;Values&lt;/code&gt; array.&lt;/p&gt;&lt;p&gt;Although the &lt;code&gt;Values&lt;/code&gt; array accepts numbers of type &lt;code&gt;Double&lt;/code&gt;, CloudWatch rejects values that are either too small or too large. Values must be in the range of 8.515920e-109 to 1.174271e+108 (Base 10) or 2e-360 to 2e360 (Base 2). In addition, special values (for example, NaN, +Infinity, -Infinity) are not supported.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCloudWatchModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSArray&lt;NSNumber*&gt; *values</Declaration>
			
			
			<Anchor>//api/name/values</Anchor>
            <NodeRef refid="159"/>
		</Token>
		
        
        
	</File>
</Tokens>