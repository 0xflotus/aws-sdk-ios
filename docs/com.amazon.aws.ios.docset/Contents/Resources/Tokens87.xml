<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/AWSAutoScalingLifecycleHookSpecification.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/AWSAutoScalingLifecycleHookSpecification</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Describes a lifecycle hook, which tells Amazon EC2 Auto Scaling that you want to perform an action whenever it launches instances or whenever it terminates instances.&lt;/p&gt;&lt;p&gt;For more information, see Lifecycle Hooks in the &lt;i&gt;Amazon EC2 Auto Scaling User Guide&lt;/i&gt;.&lt;/p&gt;
Required parameters: [LifecycleHookName, LifecycleTransition]</Abstract>
			<DeclaredIn>AWSAutoScalingModel.h</DeclaredIn>
            
			
			<NodeRef refid="87"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSAutoScalingLifecycleHookSpecification/setDefaultResult:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Defines the action the Auto Scaling group should take when the lifecycle hook timeout elapses or if an unexpected failure occurs. The valid values are &lt;code&gt;CONTINUE&lt;/code&gt; and &lt;code&gt;ABANDON&lt;/code&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *defaultResult</Declaration>
			
			
			<Anchor>//api/name/defaultResult</Anchor>
            <NodeRef refid="87"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSAutoScalingLifecycleHookSpecification/defaultResult</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Defines the action the Auto Scaling group should take when the lifecycle hook timeout elapses or if an unexpected failure occurs. The valid values are &lt;code&gt;CONTINUE&lt;/code&gt; and &lt;code&gt;ABANDON&lt;/code&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *defaultResult</Declaration>
			
			
			<Anchor>//api/name/defaultResult</Anchor>
            <NodeRef refid="87"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSAutoScalingLifecycleHookSpecification/defaultResult</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Defines the action the Auto Scaling group should take when the lifecycle hook timeout elapses or if an unexpected failure occurs. The valid values are &lt;code&gt;CONTINUE&lt;/code&gt; and &lt;code&gt;ABANDON&lt;/code&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *defaultResult</Declaration>
			
			
			<Anchor>//api/name/defaultResult</Anchor>
            <NodeRef refid="87"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSAutoScalingLifecycleHookSpecification/setHeartbeatTimeout:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The maximum time, in seconds, that can elapse before the lifecycle hook times out. If the lifecycle hook times out, Amazon EC2 Auto Scaling performs the default action. You can prevent the lifecycle hook from timing out by calling &lt;a&gt;RecordLifecycleActionHeartbeat&lt;/a&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSNumber *heartbeatTimeout</Declaration>
			
			
			<Anchor>//api/name/heartbeatTimeout</Anchor>
            <NodeRef refid="87"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSAutoScalingLifecycleHookSpecification/heartbeatTimeout</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The maximum time, in seconds, that can elapse before the lifecycle hook times out. If the lifecycle hook times out, Amazon EC2 Auto Scaling performs the default action. You can prevent the lifecycle hook from timing out by calling &lt;a&gt;RecordLifecycleActionHeartbeat&lt;/a&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSNumber *heartbeatTimeout</Declaration>
			
			
			<Anchor>//api/name/heartbeatTimeout</Anchor>
            <NodeRef refid="87"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSAutoScalingLifecycleHookSpecification/heartbeatTimeout</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The maximum time, in seconds, that can elapse before the lifecycle hook times out. If the lifecycle hook times out, Amazon EC2 Auto Scaling performs the default action. You can prevent the lifecycle hook from timing out by calling &lt;a&gt;RecordLifecycleActionHeartbeat&lt;/a&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSNumber *heartbeatTimeout</Declaration>
			
			
			<Anchor>//api/name/heartbeatTimeout</Anchor>
            <NodeRef refid="87"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSAutoScalingLifecycleHookSpecification/setLifecycleHookName:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The name of the lifecycle hook.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *lifecycleHookName</Declaration>
			
			
			<Anchor>//api/name/lifecycleHookName</Anchor>
            <NodeRef refid="87"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSAutoScalingLifecycleHookSpecification/lifecycleHookName</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The name of the lifecycle hook.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *lifecycleHookName</Declaration>
			
			
			<Anchor>//api/name/lifecycleHookName</Anchor>
            <NodeRef refid="87"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSAutoScalingLifecycleHookSpecification/lifecycleHookName</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The name of the lifecycle hook.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *lifecycleHookName</Declaration>
			
			
			<Anchor>//api/name/lifecycleHookName</Anchor>
            <NodeRef refid="87"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSAutoScalingLifecycleHookSpecification/setLifecycleTransition:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The state of the EC2 instance to which you want to attach the lifecycle hook. The possible values are:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;autoscaling:EC2INSTANCELAUNCHING&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;autoscaling:EC2INSTANCETERMINATING&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *lifecycleTransition</Declaration>
			
			
			<Anchor>//api/name/lifecycleTransition</Anchor>
            <NodeRef refid="87"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSAutoScalingLifecycleHookSpecification/lifecycleTransition</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The state of the EC2 instance to which you want to attach the lifecycle hook. The possible values are:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;autoscaling:EC2INSTANCELAUNCHING&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;autoscaling:EC2INSTANCETERMINATING&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *lifecycleTransition</Declaration>
			
			
			<Anchor>//api/name/lifecycleTransition</Anchor>
            <NodeRef refid="87"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSAutoScalingLifecycleHookSpecification/lifecycleTransition</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The state of the EC2 instance to which you want to attach the lifecycle hook. The possible values are:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;autoscaling:EC2INSTANCELAUNCHING&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;autoscaling:EC2INSTANCETERMINATING&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *lifecycleTransition</Declaration>
			
			
			<Anchor>//api/name/lifecycleTransition</Anchor>
            <NodeRef refid="87"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSAutoScalingLifecycleHookSpecification/setNotificationMetadata:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Additional information that you want to include any time Amazon EC2 Auto Scaling sends a message to the notification target.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *notificationMetadata</Declaration>
			
			
			<Anchor>//api/name/notificationMetadata</Anchor>
            <NodeRef refid="87"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSAutoScalingLifecycleHookSpecification/notificationMetadata</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Additional information that you want to include any time Amazon EC2 Auto Scaling sends a message to the notification target.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *notificationMetadata</Declaration>
			
			
			<Anchor>//api/name/notificationMetadata</Anchor>
            <NodeRef refid="87"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSAutoScalingLifecycleHookSpecification/notificationMetadata</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Additional information that you want to include any time Amazon EC2 Auto Scaling sends a message to the notification target.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *notificationMetadata</Declaration>
			
			
			<Anchor>//api/name/notificationMetadata</Anchor>
            <NodeRef refid="87"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSAutoScalingLifecycleHookSpecification/setNotificationTargetARN:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The ARN of the target that Amazon EC2 Auto Scaling sends notifications to when an instance is in the transition state for the lifecycle hook. The notification target can be either an SQS queue or an SNS topic.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *notificationTargetARN</Declaration>
			
			
			<Anchor>//api/name/notificationTargetARN</Anchor>
            <NodeRef refid="87"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSAutoScalingLifecycleHookSpecification/notificationTargetARN</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The ARN of the target that Amazon EC2 Auto Scaling sends notifications to when an instance is in the transition state for the lifecycle hook. The notification target can be either an SQS queue or an SNS topic.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *notificationTargetARN</Declaration>
			
			
			<Anchor>//api/name/notificationTargetARN</Anchor>
            <NodeRef refid="87"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSAutoScalingLifecycleHookSpecification/notificationTargetARN</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The ARN of the target that Amazon EC2 Auto Scaling sends notifications to when an instance is in the transition state for the lifecycle hook. The notification target can be either an SQS queue or an SNS topic.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *notificationTargetARN</Declaration>
			
			
			<Anchor>//api/name/notificationTargetARN</Anchor>
            <NodeRef refid="87"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSAutoScalingLifecycleHookSpecification/setRoleARN:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The ARN of the IAM role that allows the Auto Scaling group to publish to the specified notification target.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *roleARN</Declaration>
			
			
			<Anchor>//api/name/roleARN</Anchor>
            <NodeRef refid="87"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSAutoScalingLifecycleHookSpecification/roleARN</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The ARN of the IAM role that allows the Auto Scaling group to publish to the specified notification target.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *roleARN</Declaration>
			
			
			<Anchor>//api/name/roleARN</Anchor>
            <NodeRef refid="87"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSAutoScalingLifecycleHookSpecification/roleARN</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The ARN of the IAM role that allows the Auto Scaling group to publish to the specified notification target.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *roleARN</Declaration>
			
			
			<Anchor>//api/name/roleARN</Anchor>
            <NodeRef refid="87"/>
		</Token>
		
        
        
	</File>
</Tokens>