<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/AWSIoT.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/AWSIoT</TokenIdentifier>
			<Abstract type="html">&lt;fullname&gt;AWS IoT&lt;/fullname&gt;&lt;p&gt;AWS IoT provides secure, bi-directional communication between Internet-connected devices (such as sensors, actuators, embedded devices, or smart appliances) and the AWS cloud. You can discover your custom IoT-Data endpoint to communicate with, configure rules for data processing and integration with other services, organize resources associated with each device (Registry), configure logging, and create and manage policies and credentials to authenticate devices.&lt;/p&gt;&lt;p&gt;For more information about how AWS IoT works, see the Developer Guide.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
            
			
			<NodeRef refid="846"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/setConfiguration:</TokenIdentifier>
			<Abstract type="html">The service configuration used to instantiate this service client.</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong, readonly) AWSServiceConfiguration *configuration</Declaration>
			
			
			<Anchor>//api/name/configuration</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/configuration</TokenIdentifier>
			<Abstract type="html">The service configuration used to instantiate this service client.</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong, readonly) AWSServiceConfiguration *configuration</Declaration>
			
			
			<Anchor>//api/name/configuration</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSIoT/configuration</TokenIdentifier>
			<Abstract type="html">The service configuration used to instantiate this service client.</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong, readonly) AWSServiceConfiguration *configuration</Declaration>
			
			
			<Anchor>//api/name/configuration</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/AWSIoT/defaultIoT</TokenIdentifier>
			<Abstract type="html">Returns the singleton service client. If the singleton object does not exist, the SDK instantiates the default service client with defaultServiceConfiguration from [AWSServiceManager defaultServiceManager]. The reference to this object is maintained by the SDK, and you do not need to retain it manually.</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
			<Declaration>+ (instancetype)defaultIoT</Declaration>
			
			<ReturnValue><Abstract type="html">The default service client.</Abstract></ReturnValue>
			<Anchor>//api/name/defaultIoT</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/AWSIoT/registerIoTWithConfiguration:forKey:</TokenIdentifier>
			<Abstract type="html">Creates a service client with the given service configuration and registers it for the key.</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
			<Declaration>+ (void)registerIoTWithConfiguration:(AWSServiceConfiguration *)configuration forKey:(NSString *)key</Declaration>
			<Parameters>
				<Parameter>
					<Name>configuration</Name>
					<Abstract type="html">A service configuration object.</Abstract>
				</Parameter><Parameter>
					<Name>key</Name>
					<Abstract type="html">A string to identify the service client.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/registerIoTWithConfiguration:forKey:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/AWSIoT/IoTForKey:</TokenIdentifier>
			<Abstract type="html">Retrieves the service client associated with the key. You need to call + registerIoTWithConfiguration:forKey: before invoking this method.</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
			<Declaration>+ (instancetype)IoTForKey:(NSString *)key</Declaration>
			<Parameters>
				<Parameter>
					<Name>key</Name>
					<Abstract type="html">A string to identify the service client.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of the service client.</Abstract></ReturnValue>
			<Anchor>//api/name/IoTForKey:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/AWSIoT/removeIoTForKey:</TokenIdentifier>
			<Abstract type="html">Removes the service client associated with the key and release it.</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
			<Declaration>+ (void)removeIoTForKey:(NSString *)key</Declaration>
			<Parameters>
				<Parameter>
					<Name>key</Name>
					<Abstract type="html">A string to identify the service client.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/removeIoTForKey:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/acceptCertificateTransfer:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Accepts a pending certificate transfer. The default state of the certificate is INACTIVE.&lt;/p&gt;&lt;p&gt;To check for pending certificate transfers, call &lt;a&gt;ListCertificates&lt;/a&gt; to enumerate your certificates.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTAcceptCertificateTransferRequest</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask *)acceptCertificateTransfer:(AWSIoTAcceptCertificateTransferRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the AcceptCertificateTransfer service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will be nil. On failed execution, task.error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorResourceNotFound, AWSIoTErrorTransferAlreadyCompleted, AWSIoTErrorInvalidRequest, AWSIoTErrorThrottling, AWSIoTErrorUnauthorized, AWSIoTErrorServiceUnavailable, AWSIoTErrorInternalFailure.</Abstract></ReturnValue>
			<Anchor>//api/name/acceptCertificateTransfer:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/acceptCertificateTransfer:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Accepts a pending certificate transfer. The default state of the certificate is INACTIVE.&lt;/p&gt;&lt;p&gt;To check for pending certificate transfers, call &lt;a&gt;ListCertificates&lt;/a&gt; to enumerate your certificates.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTAcceptCertificateTransferRequest</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)acceptCertificateTransfer:(AWSIoTAcceptCertificateTransferRequest *)request completionHandler:(void ( ^ _Nullable ) ( NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the AcceptCertificateTransfer service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorResourceNotFound, AWSIoTErrorTransferAlreadyCompleted, AWSIoTErrorInvalidRequest, AWSIoTErrorThrottling, AWSIoTErrorUnauthorized, AWSIoTErrorServiceUnavailable, AWSIoTErrorInternalFailure.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/acceptCertificateTransfer:completionHandler:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/addThingToThingGroup:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Adds a thing to a thing group.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTAddThingToThingGroupRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTAddThingToThingGroupResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSIoTAddThingToThingGroupResponse*&gt; *)addThingToThingGroup:(AWSIoTAddThingToThingGroupRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the AddThingToThingGroup service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSIoTAddThingToThingGroupResponse. On failed execution, task.error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorInvalidRequest, AWSIoTErrorThrottling, AWSIoTErrorInternalFailure, AWSIoTErrorResourceNotFound.</Abstract></ReturnValue>
			<Anchor>//api/name/addThingToThingGroup:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/addThingToThingGroup:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Adds a thing to a thing group.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTAddThingToThingGroupRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTAddThingToThingGroupResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)addThingToThingGroup:(AWSIoTAddThingToThingGroupRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSIoTAddThingToThingGroupResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the AddThingToThingGroup service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorInvalidRequest, AWSIoTErrorThrottling, AWSIoTErrorInternalFailure, AWSIoTErrorResourceNotFound.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/addThingToThingGroup:completionHandler:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/associateTargetsWithJob:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Associates a group with a continuous job. The following criteria must be met: &lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;The job must have been created with the &lt;code&gt;targetSelection&lt;/code&gt; field set to &quot;CONTINUOUS&quot;.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;The job status must currently be &quot;IN_PROGRESS&quot;.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;The total number of targets associated with a job must not exceed 100.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTAssociateTargetsWithJobRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTAssociateTargetsWithJobResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSIoTAssociateTargetsWithJobResponse*&gt; *)associateTargetsWithJob:(AWSIoTAssociateTargetsWithJobRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the AssociateTargetsWithJob service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSIoTAssociateTargetsWithJobResponse. On failed execution, task.error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorInvalidRequest, AWSIoTErrorResourceNotFound, AWSIoTErrorLimitExceeded, AWSIoTErrorThrottling, AWSIoTErrorServiceUnavailable.</Abstract></ReturnValue>
			<Anchor>//api/name/associateTargetsWithJob:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/associateTargetsWithJob:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Associates a group with a continuous job. The following criteria must be met: &lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;The job must have been created with the &lt;code&gt;targetSelection&lt;/code&gt; field set to &quot;CONTINUOUS&quot;.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;The job status must currently be &quot;IN_PROGRESS&quot;.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;The total number of targets associated with a job must not exceed 100.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTAssociateTargetsWithJobRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTAssociateTargetsWithJobResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)associateTargetsWithJob:(AWSIoTAssociateTargetsWithJobRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSIoTAssociateTargetsWithJobResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the AssociateTargetsWithJob service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorInvalidRequest, AWSIoTErrorResourceNotFound, AWSIoTErrorLimitExceeded, AWSIoTErrorThrottling, AWSIoTErrorServiceUnavailable.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/associateTargetsWithJob:completionHandler:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/attachPolicy:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Attaches a policy to the specified target.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTAttachPolicyRequest</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask *)attachPolicy:(AWSIoTAttachPolicyRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the AttachPolicy service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will be nil. On failed execution, task.error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorResourceNotFound, AWSIoTErrorInvalidRequest, AWSIoTErrorThrottling, AWSIoTErrorUnauthorized, AWSIoTErrorServiceUnavailable, AWSIoTErrorInternalFailure, AWSIoTErrorLimitExceeded.</Abstract></ReturnValue>
			<Anchor>//api/name/attachPolicy:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/attachPolicy:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Attaches a policy to the specified target.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTAttachPolicyRequest</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)attachPolicy:(AWSIoTAttachPolicyRequest *)request completionHandler:(void ( ^ _Nullable ) ( NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the AttachPolicy service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorResourceNotFound, AWSIoTErrorInvalidRequest, AWSIoTErrorThrottling, AWSIoTErrorUnauthorized, AWSIoTErrorServiceUnavailable, AWSIoTErrorInternalFailure, AWSIoTErrorLimitExceeded.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/attachPolicy:completionHandler:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/attachPrincipalPolicy:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Attaches the specified policy to the specified principal (certificate or other credential).&lt;/p&gt;&lt;p&gt;&lt;b&gt;Note:&lt;/b&gt; This API is deprecated. Please use &lt;a&gt;AttachPolicy&lt;/a&gt; instead.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTAttachPrincipalPolicyRequest</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask *)attachPrincipalPolicy:(AWSIoTAttachPrincipalPolicyRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the AttachPrincipalPolicy service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will be nil. On failed execution, task.error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorResourceNotFound, AWSIoTErrorInvalidRequest, AWSIoTErrorThrottling, AWSIoTErrorUnauthorized, AWSIoTErrorServiceUnavailable, AWSIoTErrorInternalFailure, AWSIoTErrorLimitExceeded.</Abstract></ReturnValue>
			<Anchor>//api/name/attachPrincipalPolicy:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/attachPrincipalPolicy:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Attaches the specified policy to the specified principal (certificate or other credential).&lt;/p&gt;&lt;p&gt;&lt;b&gt;Note:&lt;/b&gt; This API is deprecated. Please use &lt;a&gt;AttachPolicy&lt;/a&gt; instead.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTAttachPrincipalPolicyRequest</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)attachPrincipalPolicy:(AWSIoTAttachPrincipalPolicyRequest *)request completionHandler:(void ( ^ _Nullable ) ( NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the AttachPrincipalPolicy service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorResourceNotFound, AWSIoTErrorInvalidRequest, AWSIoTErrorThrottling, AWSIoTErrorUnauthorized, AWSIoTErrorServiceUnavailable, AWSIoTErrorInternalFailure, AWSIoTErrorLimitExceeded.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/attachPrincipalPolicy:completionHandler:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/attachThingPrincipal:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Attaches the specified principal to the specified thing.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTAttachThingPrincipalRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTAttachThingPrincipalResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSIoTAttachThingPrincipalResponse*&gt; *)attachThingPrincipal:(AWSIoTAttachThingPrincipalRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the AttachThingPrincipal service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSIoTAttachThingPrincipalResponse. On failed execution, task.error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorResourceNotFound, AWSIoTErrorInvalidRequest, AWSIoTErrorThrottling, AWSIoTErrorUnauthorized, AWSIoTErrorServiceUnavailable, AWSIoTErrorInternalFailure.</Abstract></ReturnValue>
			<Anchor>//api/name/attachThingPrincipal:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/attachThingPrincipal:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Attaches the specified principal to the specified thing.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTAttachThingPrincipalRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTAttachThingPrincipalResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)attachThingPrincipal:(AWSIoTAttachThingPrincipalRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSIoTAttachThingPrincipalResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the AttachThingPrincipal service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorResourceNotFound, AWSIoTErrorInvalidRequest, AWSIoTErrorThrottling, AWSIoTErrorUnauthorized, AWSIoTErrorServiceUnavailable, AWSIoTErrorInternalFailure.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/attachThingPrincipal:completionHandler:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/cancelCertificateTransfer:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Cancels a pending transfer for the specified certificate.&lt;/p&gt;&lt;p&gt;&lt;b&gt;Note&lt;/b&gt; Only the transfer source account can use this operation to cancel a transfer. (Transfer destinations can use &lt;a&gt;RejectCertificateTransfer&lt;/a&gt; instead.) After transfer, AWS IoT returns the certificate to the source account in the INACTIVE state. After the destination account has accepted the transfer, the transfer cannot be cancelled.&lt;/p&gt;&lt;p&gt;After a certificate transfer is cancelled, the status of the certificate changes from PENDING_TRANSFER to INACTIVE.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTCancelCertificateTransferRequest</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask *)cancelCertificateTransfer:(AWSIoTCancelCertificateTransferRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the CancelCertificateTransfer service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will be nil. On failed execution, task.error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorResourceNotFound, AWSIoTErrorTransferAlreadyCompleted, AWSIoTErrorInvalidRequest, AWSIoTErrorThrottling, AWSIoTErrorUnauthorized, AWSIoTErrorServiceUnavailable, AWSIoTErrorInternalFailure.</Abstract></ReturnValue>
			<Anchor>//api/name/cancelCertificateTransfer:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/cancelCertificateTransfer:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Cancels a pending transfer for the specified certificate.&lt;/p&gt;&lt;p&gt;&lt;b&gt;Note&lt;/b&gt; Only the transfer source account can use this operation to cancel a transfer. (Transfer destinations can use &lt;a&gt;RejectCertificateTransfer&lt;/a&gt; instead.) After transfer, AWS IoT returns the certificate to the source account in the INACTIVE state. After the destination account has accepted the transfer, the transfer cannot be cancelled.&lt;/p&gt;&lt;p&gt;After a certificate transfer is cancelled, the status of the certificate changes from PENDING_TRANSFER to INACTIVE.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTCancelCertificateTransferRequest</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)cancelCertificateTransfer:(AWSIoTCancelCertificateTransferRequest *)request completionHandler:(void ( ^ _Nullable ) ( NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the CancelCertificateTransfer service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorResourceNotFound, AWSIoTErrorTransferAlreadyCompleted, AWSIoTErrorInvalidRequest, AWSIoTErrorThrottling, AWSIoTErrorUnauthorized, AWSIoTErrorServiceUnavailable, AWSIoTErrorInternalFailure.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/cancelCertificateTransfer:completionHandler:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/cancelJob:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Cancels a job.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTCancelJobRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTCancelJobResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSIoTCancelJobResponse*&gt; *)cancelJob:(AWSIoTCancelJobRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the CancelJob service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSIoTCancelJobResponse. On failed execution, task.error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorInvalidRequest, AWSIoTErrorResourceNotFound, AWSIoTErrorThrottling, AWSIoTErrorServiceUnavailable.</Abstract></ReturnValue>
			<Anchor>//api/name/cancelJob:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/cancelJob:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Cancels a job.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTCancelJobRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTCancelJobResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)cancelJob:(AWSIoTCancelJobRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSIoTCancelJobResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the CancelJob service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorInvalidRequest, AWSIoTErrorResourceNotFound, AWSIoTErrorThrottling, AWSIoTErrorServiceUnavailable.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/cancelJob:completionHandler:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/cancelJobExecution:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Cancels the execution of a job for a given thing.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTCancelJobExecutionRequest</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask *)cancelJobExecution:(AWSIoTCancelJobExecutionRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the CancelJobExecution service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will be nil. On failed execution, task.error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorInvalidRequest, AWSIoTErrorInvalidStateTransition, AWSIoTErrorResourceNotFound, AWSIoTErrorThrottling, AWSIoTErrorServiceUnavailable, AWSIoTErrorVersionConflict.</Abstract></ReturnValue>
			<Anchor>//api/name/cancelJobExecution:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/cancelJobExecution:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Cancels the execution of a job for a given thing.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTCancelJobExecutionRequest</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)cancelJobExecution:(AWSIoTCancelJobExecutionRequest *)request completionHandler:(void ( ^ _Nullable ) ( NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the CancelJobExecution service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorInvalidRequest, AWSIoTErrorInvalidStateTransition, AWSIoTErrorResourceNotFound, AWSIoTErrorThrottling, AWSIoTErrorServiceUnavailable, AWSIoTErrorVersionConflict.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/cancelJobExecution:completionHandler:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/clearDefaultAuthorizer:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Clears the default authorizer.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTClearDefaultAuthorizerRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTClearDefaultAuthorizerResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSIoTClearDefaultAuthorizerResponse*&gt; *)clearDefaultAuthorizer:(AWSIoTClearDefaultAuthorizerRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the ClearDefaultAuthorizer service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSIoTClearDefaultAuthorizerResponse. On failed execution, task.error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorResourceNotFound, AWSIoTErrorInvalidRequest, AWSIoTErrorThrottling, AWSIoTErrorUnauthorized, AWSIoTErrorServiceUnavailable, AWSIoTErrorInternalFailure.</Abstract></ReturnValue>
			<Anchor>//api/name/clearDefaultAuthorizer:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/clearDefaultAuthorizer:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Clears the default authorizer.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTClearDefaultAuthorizerRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTClearDefaultAuthorizerResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)clearDefaultAuthorizer:(AWSIoTClearDefaultAuthorizerRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSIoTClearDefaultAuthorizerResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the ClearDefaultAuthorizer service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorResourceNotFound, AWSIoTErrorInvalidRequest, AWSIoTErrorThrottling, AWSIoTErrorUnauthorized, AWSIoTErrorServiceUnavailable, AWSIoTErrorInternalFailure.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/clearDefaultAuthorizer:completionHandler:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/createAuthorizer:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Creates an authorizer.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTCreateAuthorizerRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTCreateAuthorizerResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSIoTCreateAuthorizerResponse*&gt; *)createAuthorizer:(AWSIoTCreateAuthorizerRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the CreateAuthorizer service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSIoTCreateAuthorizerResponse. On failed execution, task.error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorResourceAlreadyExists, AWSIoTErrorInvalidRequest, AWSIoTErrorLimitExceeded, AWSIoTErrorThrottling, AWSIoTErrorUnauthorized, AWSIoTErrorServiceUnavailable, AWSIoTErrorInternalFailure.</Abstract></ReturnValue>
			<Anchor>//api/name/createAuthorizer:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/createAuthorizer:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Creates an authorizer.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTCreateAuthorizerRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTCreateAuthorizerResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)createAuthorizer:(AWSIoTCreateAuthorizerRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSIoTCreateAuthorizerResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the CreateAuthorizer service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorResourceAlreadyExists, AWSIoTErrorInvalidRequest, AWSIoTErrorLimitExceeded, AWSIoTErrorThrottling, AWSIoTErrorUnauthorized, AWSIoTErrorServiceUnavailable, AWSIoTErrorInternalFailure.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/createAuthorizer:completionHandler:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/createCertificateFromCsr:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Creates an X.509 certificate using the specified certificate signing request.&lt;/p&gt;&lt;p&gt;&lt;b&gt;Note:&lt;/b&gt; The CSR must include a public key that is either an RSA key with a length of at least 2048 bits or an ECC key from NIST P-256 or NIST P-384 curves. &lt;/p&gt;&lt;p&gt;&lt;b&gt;Note:&lt;/b&gt; Reusing the same certificate signing request (CSR) results in a distinct certificate.&lt;/p&gt;&lt;p&gt;You can create multiple certificates in a batch by creating a directory, copying multiple .csr files into that directory, and then specifying that directory on the command line. The following commands show how to create a batch of certificates given a batch of CSRs.&lt;/p&gt;&lt;p&gt;Assuming a set of CSRs are located inside of the directory my-csr-directory:&lt;/p&gt;&lt;p&gt;On Linux and OS X, the command is:&lt;/p&gt;&lt;p&gt;$ ls my-csr-directory/ | xargs -I {} aws iot create-certificate-from-csr --certificate-signing-request file://my-csr-directory/{}&lt;/p&gt;&lt;p&gt;This command lists all of the CSRs in my-csr-directory and pipes each CSR file name to the aws iot create-certificate-from-csr AWS CLI command to create a certificate for the corresponding CSR.&lt;/p&gt;&lt;p&gt;The aws iot create-certificate-from-csr part of the command can also be run in parallel to speed up the certificate creation process:&lt;/p&gt;&lt;p&gt;$ ls my-csr-directory/ | xargs -P 10 -I {} aws iot create-certificate-from-csr --certificate-signing-request file://my-csr-directory/{}&lt;/p&gt;&lt;p&gt;On Windows PowerShell, the command to create certificates for all CSRs in my-csr-directory is:&lt;/p&gt;&lt;p&gt;&amp;amp;gt; ls -Name my-csr-directory | %{aws iot create-certificate-from-csr --certificate-signing-request file://my-csr-directory/$_}&lt;/p&gt;&lt;p&gt;On a Windows command prompt, the command to create certificates for all CSRs in my-csr-directory is:&lt;/p&gt;&lt;p&gt;&amp;amp;gt; forfiles /p my-csr-directory /c &quot;cmd /c aws iot create-certificate-from-csr --certificate-signing-request file://@path&quot;&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTCreateCertificateFromCsrRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTCreateCertificateFromCsrResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSIoTCreateCertificateFromCsrResponse*&gt; *)createCertificateFromCsr:(AWSIoTCreateCertificateFromCsrRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the CreateCertificateFromCsr service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSIoTCreateCertificateFromCsrResponse. On failed execution, task.error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorInvalidRequest, AWSIoTErrorThrottling, AWSIoTErrorUnauthorized, AWSIoTErrorServiceUnavailable, AWSIoTErrorInternalFailure.</Abstract></ReturnValue>
			<Anchor>//api/name/createCertificateFromCsr:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/createCertificateFromCsr:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Creates an X.509 certificate using the specified certificate signing request.&lt;/p&gt;&lt;p&gt;&lt;b&gt;Note:&lt;/b&gt; The CSR must include a public key that is either an RSA key with a length of at least 2048 bits or an ECC key from NIST P-256 or NIST P-384 curves. &lt;/p&gt;&lt;p&gt;&lt;b&gt;Note:&lt;/b&gt; Reusing the same certificate signing request (CSR) results in a distinct certificate.&lt;/p&gt;&lt;p&gt;You can create multiple certificates in a batch by creating a directory, copying multiple .csr files into that directory, and then specifying that directory on the command line. The following commands show how to create a batch of certificates given a batch of CSRs.&lt;/p&gt;&lt;p&gt;Assuming a set of CSRs are located inside of the directory my-csr-directory:&lt;/p&gt;&lt;p&gt;On Linux and OS X, the command is:&lt;/p&gt;&lt;p&gt;$ ls my-csr-directory/ | xargs -I {} aws iot create-certificate-from-csr --certificate-signing-request file://my-csr-directory/{}&lt;/p&gt;&lt;p&gt;This command lists all of the CSRs in my-csr-directory and pipes each CSR file name to the aws iot create-certificate-from-csr AWS CLI command to create a certificate for the corresponding CSR.&lt;/p&gt;&lt;p&gt;The aws iot create-certificate-from-csr part of the command can also be run in parallel to speed up the certificate creation process:&lt;/p&gt;&lt;p&gt;$ ls my-csr-directory/ | xargs -P 10 -I {} aws iot create-certificate-from-csr --certificate-signing-request file://my-csr-directory/{}&lt;/p&gt;&lt;p&gt;On Windows PowerShell, the command to create certificates for all CSRs in my-csr-directory is:&lt;/p&gt;&lt;p&gt;&amp;amp;gt; ls -Name my-csr-directory | %{aws iot create-certificate-from-csr --certificate-signing-request file://my-csr-directory/$_}&lt;/p&gt;&lt;p&gt;On a Windows command prompt, the command to create certificates for all CSRs in my-csr-directory is:&lt;/p&gt;&lt;p&gt;&amp;amp;gt; forfiles /p my-csr-directory /c &quot;cmd /c aws iot create-certificate-from-csr --certificate-signing-request file://@path&quot;&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTCreateCertificateFromCsrRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTCreateCertificateFromCsrResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)createCertificateFromCsr:(AWSIoTCreateCertificateFromCsrRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSIoTCreateCertificateFromCsrResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the CreateCertificateFromCsr service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorInvalidRequest, AWSIoTErrorThrottling, AWSIoTErrorUnauthorized, AWSIoTErrorServiceUnavailable, AWSIoTErrorInternalFailure.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/createCertificateFromCsr:completionHandler:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/createJob:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Creates a job.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTCreateJobRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTCreateJobResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSIoTCreateJobResponse*&gt; *)createJob:(AWSIoTCreateJobRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the CreateJob service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSIoTCreateJobResponse. On failed execution, task.error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorInvalidRequest, AWSIoTErrorResourceNotFound, AWSIoTErrorResourceAlreadyExists, AWSIoTErrorLimitExceeded, AWSIoTErrorThrottling, AWSIoTErrorServiceUnavailable.</Abstract></ReturnValue>
			<Anchor>//api/name/createJob:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/createJob:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Creates a job.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTCreateJobRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTCreateJobResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)createJob:(AWSIoTCreateJobRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSIoTCreateJobResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the CreateJob service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorInvalidRequest, AWSIoTErrorResourceNotFound, AWSIoTErrorResourceAlreadyExists, AWSIoTErrorLimitExceeded, AWSIoTErrorThrottling, AWSIoTErrorServiceUnavailable.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/createJob:completionHandler:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/createKeysAndCertificate:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Creates a 2048-bit RSA key pair and issues an X.509 certificate using the issued public key.&lt;/p&gt;&lt;p&gt;&lt;b&gt;Note&lt;/b&gt; This is the only time AWS IoT issues the private key for this certificate, so it is important to keep it in a secure location.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTCreateKeysAndCertificateRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTCreateKeysAndCertificateResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSIoTCreateKeysAndCertificateResponse*&gt; *)createKeysAndCertificate:(AWSIoTCreateKeysAndCertificateRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the CreateKeysAndCertificate service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSIoTCreateKeysAndCertificateResponse. On failed execution, task.error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorInvalidRequest, AWSIoTErrorThrottling, AWSIoTErrorUnauthorized, AWSIoTErrorServiceUnavailable, AWSIoTErrorInternalFailure.</Abstract></ReturnValue>
			<Anchor>//api/name/createKeysAndCertificate:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/createKeysAndCertificate:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Creates a 2048-bit RSA key pair and issues an X.509 certificate using the issued public key.&lt;/p&gt;&lt;p&gt;&lt;b&gt;Note&lt;/b&gt; This is the only time AWS IoT issues the private key for this certificate, so it is important to keep it in a secure location.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTCreateKeysAndCertificateRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTCreateKeysAndCertificateResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)createKeysAndCertificate:(AWSIoTCreateKeysAndCertificateRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSIoTCreateKeysAndCertificateResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the CreateKeysAndCertificate service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorInvalidRequest, AWSIoTErrorThrottling, AWSIoTErrorUnauthorized, AWSIoTErrorServiceUnavailable, AWSIoTErrorInternalFailure.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/createKeysAndCertificate:completionHandler:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/createOTAUpdate:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Creates an AWS IoT OTAUpdate on a target group of things or groups.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTCreateOTAUpdateRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTCreateOTAUpdateResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSIoTCreateOTAUpdateResponse*&gt; *)createOTAUpdate:(AWSIoTCreateOTAUpdateRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the CreateOTAUpdate service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSIoTCreateOTAUpdateResponse. On failed execution, task.error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorInvalidRequest, AWSIoTErrorResourceNotFound, AWSIoTErrorResourceAlreadyExists, AWSIoTErrorThrottling, AWSIoTErrorUnauthorized, AWSIoTErrorInternalFailure, AWSIoTErrorServiceUnavailable.</Abstract></ReturnValue>
			<Anchor>//api/name/createOTAUpdate:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/createOTAUpdate:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Creates an AWS IoT OTAUpdate on a target group of things or groups.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTCreateOTAUpdateRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTCreateOTAUpdateResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)createOTAUpdate:(AWSIoTCreateOTAUpdateRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSIoTCreateOTAUpdateResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the CreateOTAUpdate service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorInvalidRequest, AWSIoTErrorResourceNotFound, AWSIoTErrorResourceAlreadyExists, AWSIoTErrorThrottling, AWSIoTErrorUnauthorized, AWSIoTErrorInternalFailure, AWSIoTErrorServiceUnavailable.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/createOTAUpdate:completionHandler:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/createPolicy:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Creates an AWS IoT policy.&lt;/p&gt;&lt;p&gt;The created policy is the default version for the policy. This operation creates a policy version with a version identifier of &lt;b&gt;1&lt;/b&gt; and sets &lt;b&gt;1&lt;/b&gt; as the policy&apos;s default version.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTCreatePolicyRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTCreatePolicyResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSIoTCreatePolicyResponse*&gt; *)createPolicy:(AWSIoTCreatePolicyRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the CreatePolicy service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSIoTCreatePolicyResponse. On failed execution, task.error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorResourceAlreadyExists, AWSIoTErrorMalformedPolicy, AWSIoTErrorInvalidRequest, AWSIoTErrorThrottling, AWSIoTErrorUnauthorized, AWSIoTErrorServiceUnavailable, AWSIoTErrorInternalFailure.</Abstract></ReturnValue>
			<Anchor>//api/name/createPolicy:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/createPolicy:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Creates an AWS IoT policy.&lt;/p&gt;&lt;p&gt;The created policy is the default version for the policy. This operation creates a policy version with a version identifier of &lt;b&gt;1&lt;/b&gt; and sets &lt;b&gt;1&lt;/b&gt; as the policy&apos;s default version.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTCreatePolicyRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTCreatePolicyResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)createPolicy:(AWSIoTCreatePolicyRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSIoTCreatePolicyResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the CreatePolicy service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorResourceAlreadyExists, AWSIoTErrorMalformedPolicy, AWSIoTErrorInvalidRequest, AWSIoTErrorThrottling, AWSIoTErrorUnauthorized, AWSIoTErrorServiceUnavailable, AWSIoTErrorInternalFailure.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/createPolicy:completionHandler:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/createPolicyVersion:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Creates a new version of the specified AWS IoT policy. To update a policy, create a new policy version. A managed policy can have up to five versions. If the policy has five versions, you must use &lt;a&gt;DeletePolicyVersion&lt;/a&gt; to delete an existing version before you create a new one.&lt;/p&gt;&lt;p&gt;Optionally, you can set the new version as the policy&apos;s default version. The default version is the operative version (that is, the version that is in effect for the certificates to which the policy is attached).&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTCreatePolicyVersionRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTCreatePolicyVersionResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSIoTCreatePolicyVersionResponse*&gt; *)createPolicyVersion:(AWSIoTCreatePolicyVersionRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the CreatePolicyVersion service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSIoTCreatePolicyVersionResponse. On failed execution, task.error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorResourceNotFound, AWSIoTErrorMalformedPolicy, AWSIoTErrorVersionsLimitExceeded, AWSIoTErrorInvalidRequest, AWSIoTErrorThrottling, AWSIoTErrorUnauthorized, AWSIoTErrorServiceUnavailable, AWSIoTErrorInternalFailure.</Abstract></ReturnValue>
			<Anchor>//api/name/createPolicyVersion:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/createPolicyVersion:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Creates a new version of the specified AWS IoT policy. To update a policy, create a new policy version. A managed policy can have up to five versions. If the policy has five versions, you must use &lt;a&gt;DeletePolicyVersion&lt;/a&gt; to delete an existing version before you create a new one.&lt;/p&gt;&lt;p&gt;Optionally, you can set the new version as the policy&apos;s default version. The default version is the operative version (that is, the version that is in effect for the certificates to which the policy is attached).&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTCreatePolicyVersionRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTCreatePolicyVersionResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)createPolicyVersion:(AWSIoTCreatePolicyVersionRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSIoTCreatePolicyVersionResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the CreatePolicyVersion service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorResourceNotFound, AWSIoTErrorMalformedPolicy, AWSIoTErrorVersionsLimitExceeded, AWSIoTErrorInvalidRequest, AWSIoTErrorThrottling, AWSIoTErrorUnauthorized, AWSIoTErrorServiceUnavailable, AWSIoTErrorInternalFailure.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/createPolicyVersion:completionHandler:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/createRoleAlias:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Creates a role alias.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTCreateRoleAliasRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTCreateRoleAliasResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSIoTCreateRoleAliasResponse*&gt; *)createRoleAlias:(AWSIoTCreateRoleAliasRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the CreateRoleAlias service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSIoTCreateRoleAliasResponse. On failed execution, task.error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorResourceAlreadyExists, AWSIoTErrorInvalidRequest, AWSIoTErrorLimitExceeded, AWSIoTErrorThrottling, AWSIoTErrorUnauthorized, AWSIoTErrorServiceUnavailable, AWSIoTErrorInternalFailure.</Abstract></ReturnValue>
			<Anchor>//api/name/createRoleAlias:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/createRoleAlias:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Creates a role alias.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTCreateRoleAliasRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTCreateRoleAliasResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)createRoleAlias:(AWSIoTCreateRoleAliasRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSIoTCreateRoleAliasResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the CreateRoleAlias service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorResourceAlreadyExists, AWSIoTErrorInvalidRequest, AWSIoTErrorLimitExceeded, AWSIoTErrorThrottling, AWSIoTErrorUnauthorized, AWSIoTErrorServiceUnavailable, AWSIoTErrorInternalFailure.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/createRoleAlias:completionHandler:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/createStream:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Creates a stream for delivering one or more large files in chunks over MQTT. A stream transports data bytes in chunks or blocks packaged as MQTT messages from a source like S3. You can have one or more files associated with a stream. The total size of a file associated with the stream cannot exceed more than 2 MB. The stream will be created with version 0. If a stream is created with the same streamID as a stream that existed and was deleted within last 90 days, we will resurrect that old stream by incrementing the version by 1.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTCreateStreamRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTCreateStreamResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSIoTCreateStreamResponse*&gt; *)createStream:(AWSIoTCreateStreamRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the CreateStream service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSIoTCreateStreamResponse. On failed execution, task.error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorInvalidRequest, AWSIoTErrorResourceNotFound, AWSIoTErrorResourceAlreadyExists, AWSIoTErrorThrottling, AWSIoTErrorUnauthorized, AWSIoTErrorServiceUnavailable, AWSIoTErrorInternalFailure.</Abstract></ReturnValue>
			<Anchor>//api/name/createStream:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/createStream:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Creates a stream for delivering one or more large files in chunks over MQTT. A stream transports data bytes in chunks or blocks packaged as MQTT messages from a source like S3. You can have one or more files associated with a stream. The total size of a file associated with the stream cannot exceed more than 2 MB. The stream will be created with version 0. If a stream is created with the same streamID as a stream that existed and was deleted within last 90 days, we will resurrect that old stream by incrementing the version by 1.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTCreateStreamRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTCreateStreamResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)createStream:(AWSIoTCreateStreamRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSIoTCreateStreamResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the CreateStream service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorInvalidRequest, AWSIoTErrorResourceNotFound, AWSIoTErrorResourceAlreadyExists, AWSIoTErrorThrottling, AWSIoTErrorUnauthorized, AWSIoTErrorServiceUnavailable, AWSIoTErrorInternalFailure.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/createStream:completionHandler:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/createThing:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Creates a thing record in the registry.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTCreateThingRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTCreateThingResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSIoTCreateThingResponse*&gt; *)createThing:(AWSIoTCreateThingRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the CreateThing service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSIoTCreateThingResponse. On failed execution, task.error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorInvalidRequest, AWSIoTErrorThrottling, AWSIoTErrorUnauthorized, AWSIoTErrorServiceUnavailable, AWSIoTErrorInternalFailure, AWSIoTErrorResourceAlreadyExists, AWSIoTErrorResourceNotFound.</Abstract></ReturnValue>
			<Anchor>//api/name/createThing:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/createThing:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Creates a thing record in the registry.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTCreateThingRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTCreateThingResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)createThing:(AWSIoTCreateThingRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSIoTCreateThingResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the CreateThing service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorInvalidRequest, AWSIoTErrorThrottling, AWSIoTErrorUnauthorized, AWSIoTErrorServiceUnavailable, AWSIoTErrorInternalFailure, AWSIoTErrorResourceAlreadyExists, AWSIoTErrorResourceNotFound.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/createThing:completionHandler:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/createThingGroup:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Create a thing group.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTCreateThingGroupRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTCreateThingGroupResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSIoTCreateThingGroupResponse*&gt; *)createThingGroup:(AWSIoTCreateThingGroupRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the CreateThingGroup service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSIoTCreateThingGroupResponse. On failed execution, task.error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorInvalidRequest, AWSIoTErrorResourceAlreadyExists, AWSIoTErrorThrottling, AWSIoTErrorInternalFailure.</Abstract></ReturnValue>
			<Anchor>//api/name/createThingGroup:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/createThingGroup:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Create a thing group.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTCreateThingGroupRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTCreateThingGroupResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)createThingGroup:(AWSIoTCreateThingGroupRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSIoTCreateThingGroupResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the CreateThingGroup service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorInvalidRequest, AWSIoTErrorResourceAlreadyExists, AWSIoTErrorThrottling, AWSIoTErrorInternalFailure.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/createThingGroup:completionHandler:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/createThingType:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Creates a new thing type.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTCreateThingTypeRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTCreateThingTypeResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSIoTCreateThingTypeResponse*&gt; *)createThingType:(AWSIoTCreateThingTypeRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the CreateThingType service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSIoTCreateThingTypeResponse. On failed execution, task.error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorInvalidRequest, AWSIoTErrorThrottling, AWSIoTErrorUnauthorized, AWSIoTErrorServiceUnavailable, AWSIoTErrorInternalFailure, AWSIoTErrorResourceAlreadyExists.</Abstract></ReturnValue>
			<Anchor>//api/name/createThingType:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/createThingType:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Creates a new thing type.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTCreateThingTypeRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTCreateThingTypeResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)createThingType:(AWSIoTCreateThingTypeRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSIoTCreateThingTypeResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the CreateThingType service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorInvalidRequest, AWSIoTErrorThrottling, AWSIoTErrorUnauthorized, AWSIoTErrorServiceUnavailable, AWSIoTErrorInternalFailure, AWSIoTErrorResourceAlreadyExists.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/createThingType:completionHandler:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/createTopicRule:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Creates a rule. Creating rules is an administrator-level action. Any user who has permission to create rules will be able to access data processed by the rule.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTCreateTopicRuleRequest</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask *)createTopicRule:(AWSIoTCreateTopicRuleRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the CreateTopicRule service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will be nil. On failed execution, task.error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorSqlParse, AWSIoTErrorInternal, AWSIoTErrorInvalidRequest, AWSIoTErrorResourceAlreadyExists, AWSIoTErrorServiceUnavailable.</Abstract></ReturnValue>
			<Anchor>//api/name/createTopicRule:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/createTopicRule:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Creates a rule. Creating rules is an administrator-level action. Any user who has permission to create rules will be able to access data processed by the rule.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTCreateTopicRuleRequest</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)createTopicRule:(AWSIoTCreateTopicRuleRequest *)request completionHandler:(void ( ^ _Nullable ) ( NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the CreateTopicRule service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorSqlParse, AWSIoTErrorInternal, AWSIoTErrorInvalidRequest, AWSIoTErrorResourceAlreadyExists, AWSIoTErrorServiceUnavailable.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/createTopicRule:completionHandler:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/deleteAuthorizer:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Deletes an authorizer.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTDeleteAuthorizerRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTDeleteAuthorizerResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSIoTDeleteAuthorizerResponse*&gt; *)deleteAuthorizer:(AWSIoTDeleteAuthorizerRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DeleteAuthorizer service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSIoTDeleteAuthorizerResponse. On failed execution, task.error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorDeleteConflict, AWSIoTErrorResourceNotFound, AWSIoTErrorInvalidRequest, AWSIoTErrorThrottling, AWSIoTErrorUnauthorized, AWSIoTErrorServiceUnavailable, AWSIoTErrorInternalFailure.</Abstract></ReturnValue>
			<Anchor>//api/name/deleteAuthorizer:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/deleteAuthorizer:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Deletes an authorizer.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTDeleteAuthorizerRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTDeleteAuthorizerResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)deleteAuthorizer:(AWSIoTDeleteAuthorizerRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSIoTDeleteAuthorizerResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DeleteAuthorizer service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorDeleteConflict, AWSIoTErrorResourceNotFound, AWSIoTErrorInvalidRequest, AWSIoTErrorThrottling, AWSIoTErrorUnauthorized, AWSIoTErrorServiceUnavailable, AWSIoTErrorInternalFailure.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/deleteAuthorizer:completionHandler:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/deleteCACertificate:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Deletes a registered CA certificate.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTDeleteCACertificateRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTDeleteCACertificateResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSIoTDeleteCACertificateResponse*&gt; *)deleteCACertificate:(AWSIoTDeleteCACertificateRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DeleteCACertificate service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSIoTDeleteCACertificateResponse. On failed execution, task.error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorInvalidRequest, AWSIoTErrorCertificateState, AWSIoTErrorThrottling, AWSIoTErrorUnauthorized, AWSIoTErrorServiceUnavailable, AWSIoTErrorInternalFailure, AWSIoTErrorResourceNotFound.</Abstract></ReturnValue>
			<Anchor>//api/name/deleteCACertificate:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/deleteCACertificate:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Deletes a registered CA certificate.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTDeleteCACertificateRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTDeleteCACertificateResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)deleteCACertificate:(AWSIoTDeleteCACertificateRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSIoTDeleteCACertificateResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DeleteCACertificate service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorInvalidRequest, AWSIoTErrorCertificateState, AWSIoTErrorThrottling, AWSIoTErrorUnauthorized, AWSIoTErrorServiceUnavailable, AWSIoTErrorInternalFailure, AWSIoTErrorResourceNotFound.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/deleteCACertificate:completionHandler:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/deleteCertificate:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Deletes the specified certificate.&lt;/p&gt;&lt;p&gt;A certificate cannot be deleted if it has a policy attached to it or if its status is set to ACTIVE. To delete a certificate, first use the &lt;a&gt;DetachPrincipalPolicy&lt;/a&gt; API to detach all policies. Next, use the &lt;a&gt;UpdateCertificate&lt;/a&gt; API to set the certificate to the INACTIVE status.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTDeleteCertificateRequest</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask *)deleteCertificate:(AWSIoTDeleteCertificateRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DeleteCertificate service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will be nil. On failed execution, task.error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorCertificateState, AWSIoTErrorDeleteConflict, AWSIoTErrorInvalidRequest, AWSIoTErrorThrottling, AWSIoTErrorUnauthorized, AWSIoTErrorServiceUnavailable, AWSIoTErrorInternalFailure, AWSIoTErrorResourceNotFound.</Abstract></ReturnValue>
			<Anchor>//api/name/deleteCertificate:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/deleteCertificate:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Deletes the specified certificate.&lt;/p&gt;&lt;p&gt;A certificate cannot be deleted if it has a policy attached to it or if its status is set to ACTIVE. To delete a certificate, first use the &lt;a&gt;DetachPrincipalPolicy&lt;/a&gt; API to detach all policies. Next, use the &lt;a&gt;UpdateCertificate&lt;/a&gt; API to set the certificate to the INACTIVE status.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTDeleteCertificateRequest</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)deleteCertificate:(AWSIoTDeleteCertificateRequest *)request completionHandler:(void ( ^ _Nullable ) ( NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DeleteCertificate service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorCertificateState, AWSIoTErrorDeleteConflict, AWSIoTErrorInvalidRequest, AWSIoTErrorThrottling, AWSIoTErrorUnauthorized, AWSIoTErrorServiceUnavailable, AWSIoTErrorInternalFailure, AWSIoTErrorResourceNotFound.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/deleteCertificate:completionHandler:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/deleteJob:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Deletes a job and its related job executions.&lt;/p&gt;&lt;p&gt;Deleting a job may take time, depending on the number of job executions created for the job and various other factors. While the job is being deleted, the status of the job will be shown as &quot;DELETIONINPROGRESS&quot;. Attempting to delete or cancel a job whose status is already &quot;DELETIONINPROGRESS&quot; will result in an error.&lt;/p&gt;&lt;p&gt;Only 10 jobs may have status &quot;DELETIONINPROGRESS&quot; at the same time, or a LimitExceededException will occur.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTDeleteJobRequest</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask *)deleteJob:(AWSIoTDeleteJobRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DeleteJob service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will be nil. On failed execution, task.error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorInvalidRequest, AWSIoTErrorInvalidStateTransition, AWSIoTErrorResourceNotFound, AWSIoTErrorLimitExceeded, AWSIoTErrorThrottling, AWSIoTErrorServiceUnavailable.</Abstract></ReturnValue>
			<Anchor>//api/name/deleteJob:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/deleteJob:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Deletes a job and its related job executions.&lt;/p&gt;&lt;p&gt;Deleting a job may take time, depending on the number of job executions created for the job and various other factors. While the job is being deleted, the status of the job will be shown as &quot;DELETIONINPROGRESS&quot;. Attempting to delete or cancel a job whose status is already &quot;DELETIONINPROGRESS&quot; will result in an error.&lt;/p&gt;&lt;p&gt;Only 10 jobs may have status &quot;DELETIONINPROGRESS&quot; at the same time, or a LimitExceededException will occur.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTDeleteJobRequest</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)deleteJob:(AWSIoTDeleteJobRequest *)request completionHandler:(void ( ^ _Nullable ) ( NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DeleteJob service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorInvalidRequest, AWSIoTErrorInvalidStateTransition, AWSIoTErrorResourceNotFound, AWSIoTErrorLimitExceeded, AWSIoTErrorThrottling, AWSIoTErrorServiceUnavailable.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/deleteJob:completionHandler:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/deleteJobExecution:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Deletes a job execution.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTDeleteJobExecutionRequest</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask *)deleteJobExecution:(AWSIoTDeleteJobExecutionRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DeleteJobExecution service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will be nil. On failed execution, task.error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorInvalidRequest, AWSIoTErrorInvalidStateTransition, AWSIoTErrorResourceNotFound, AWSIoTErrorThrottling, AWSIoTErrorServiceUnavailable.</Abstract></ReturnValue>
			<Anchor>//api/name/deleteJobExecution:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/deleteJobExecution:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Deletes a job execution.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTDeleteJobExecutionRequest</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)deleteJobExecution:(AWSIoTDeleteJobExecutionRequest *)request completionHandler:(void ( ^ _Nullable ) ( NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DeleteJobExecution service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorInvalidRequest, AWSIoTErrorInvalidStateTransition, AWSIoTErrorResourceNotFound, AWSIoTErrorThrottling, AWSIoTErrorServiceUnavailable.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/deleteJobExecution:completionHandler:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/deleteOTAUpdate:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Delete an OTA update.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTDeleteOTAUpdateRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTDeleteOTAUpdateResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSIoTDeleteOTAUpdateResponse*&gt; *)deleteOTAUpdate:(AWSIoTDeleteOTAUpdateRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DeleteOTAUpdate service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSIoTDeleteOTAUpdateResponse. On failed execution, task.error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorInvalidRequest, AWSIoTErrorResourceNotFound, AWSIoTErrorThrottling, AWSIoTErrorUnauthorized, AWSIoTErrorInternalFailure, AWSIoTErrorServiceUnavailable.</Abstract></ReturnValue>
			<Anchor>//api/name/deleteOTAUpdate:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/deleteOTAUpdate:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Delete an OTA update.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTDeleteOTAUpdateRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTDeleteOTAUpdateResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)deleteOTAUpdate:(AWSIoTDeleteOTAUpdateRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSIoTDeleteOTAUpdateResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DeleteOTAUpdate service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorInvalidRequest, AWSIoTErrorResourceNotFound, AWSIoTErrorThrottling, AWSIoTErrorUnauthorized, AWSIoTErrorInternalFailure, AWSIoTErrorServiceUnavailable.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/deleteOTAUpdate:completionHandler:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/deletePolicy:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Deletes the specified policy.&lt;/p&gt;&lt;p&gt;A policy cannot be deleted if it has non-default versions or it is attached to any certificate.&lt;/p&gt;&lt;p&gt;To delete a policy, use the DeletePolicyVersion API to delete all non-default versions of the policy; use the DetachPrincipalPolicy API to detach the policy from any certificate; and then use the DeletePolicy API to delete the policy.&lt;/p&gt;&lt;p&gt;When a policy is deleted using DeletePolicy, its default version is deleted with it.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTDeletePolicyRequest</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask *)deletePolicy:(AWSIoTDeletePolicyRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DeletePolicy service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will be nil. On failed execution, task.error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorDeleteConflict, AWSIoTErrorResourceNotFound, AWSIoTErrorInvalidRequest, AWSIoTErrorThrottling, AWSIoTErrorUnauthorized, AWSIoTErrorServiceUnavailable, AWSIoTErrorInternalFailure.</Abstract></ReturnValue>
			<Anchor>//api/name/deletePolicy:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/deletePolicy:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Deletes the specified policy.&lt;/p&gt;&lt;p&gt;A policy cannot be deleted if it has non-default versions or it is attached to any certificate.&lt;/p&gt;&lt;p&gt;To delete a policy, use the DeletePolicyVersion API to delete all non-default versions of the policy; use the DetachPrincipalPolicy API to detach the policy from any certificate; and then use the DeletePolicy API to delete the policy.&lt;/p&gt;&lt;p&gt;When a policy is deleted using DeletePolicy, its default version is deleted with it.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTDeletePolicyRequest</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)deletePolicy:(AWSIoTDeletePolicyRequest *)request completionHandler:(void ( ^ _Nullable ) ( NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DeletePolicy service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorDeleteConflict, AWSIoTErrorResourceNotFound, AWSIoTErrorInvalidRequest, AWSIoTErrorThrottling, AWSIoTErrorUnauthorized, AWSIoTErrorServiceUnavailable, AWSIoTErrorInternalFailure.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/deletePolicy:completionHandler:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/deletePolicyVersion:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Deletes the specified version of the specified policy. You cannot delete the default version of a policy using this API. To delete the default version of a policy, use &lt;a&gt;DeletePolicy&lt;/a&gt;. To find out which version of a policy is marked as the default version, use ListPolicyVersions.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTDeletePolicyVersionRequest</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask *)deletePolicyVersion:(AWSIoTDeletePolicyVersionRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DeletePolicyVersion service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will be nil. On failed execution, task.error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorDeleteConflict, AWSIoTErrorResourceNotFound, AWSIoTErrorInvalidRequest, AWSIoTErrorThrottling, AWSIoTErrorUnauthorized, AWSIoTErrorServiceUnavailable, AWSIoTErrorInternalFailure.</Abstract></ReturnValue>
			<Anchor>//api/name/deletePolicyVersion:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/deletePolicyVersion:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Deletes the specified version of the specified policy. You cannot delete the default version of a policy using this API. To delete the default version of a policy, use &lt;a&gt;DeletePolicy&lt;/a&gt;. To find out which version of a policy is marked as the default version, use ListPolicyVersions.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTDeletePolicyVersionRequest</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)deletePolicyVersion:(AWSIoTDeletePolicyVersionRequest *)request completionHandler:(void ( ^ _Nullable ) ( NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DeletePolicyVersion service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorDeleteConflict, AWSIoTErrorResourceNotFound, AWSIoTErrorInvalidRequest, AWSIoTErrorThrottling, AWSIoTErrorUnauthorized, AWSIoTErrorServiceUnavailable, AWSIoTErrorInternalFailure.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/deletePolicyVersion:completionHandler:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/deleteRegistrationCode:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Deletes a CA certificate registration code.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTDeleteRegistrationCodeRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTDeleteRegistrationCodeResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSIoTDeleteRegistrationCodeResponse*&gt; *)deleteRegistrationCode:(AWSIoTDeleteRegistrationCodeRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DeleteRegistrationCode service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSIoTDeleteRegistrationCodeResponse. On failed execution, task.error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorThrottling, AWSIoTErrorResourceNotFound, AWSIoTErrorUnauthorized, AWSIoTErrorServiceUnavailable, AWSIoTErrorInternalFailure.</Abstract></ReturnValue>
			<Anchor>//api/name/deleteRegistrationCode:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/deleteRegistrationCode:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Deletes a CA certificate registration code.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTDeleteRegistrationCodeRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTDeleteRegistrationCodeResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)deleteRegistrationCode:(AWSIoTDeleteRegistrationCodeRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSIoTDeleteRegistrationCodeResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DeleteRegistrationCode service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorThrottling, AWSIoTErrorResourceNotFound, AWSIoTErrorUnauthorized, AWSIoTErrorServiceUnavailable, AWSIoTErrorInternalFailure.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/deleteRegistrationCode:completionHandler:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/deleteRoleAlias:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Deletes a role alias&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTDeleteRoleAliasRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTDeleteRoleAliasResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSIoTDeleteRoleAliasResponse*&gt; *)deleteRoleAlias:(AWSIoTDeleteRoleAliasRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DeleteRoleAlias service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSIoTDeleteRoleAliasResponse. On failed execution, task.error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorDeleteConflict, AWSIoTErrorInvalidRequest, AWSIoTErrorThrottling, AWSIoTErrorUnauthorized, AWSIoTErrorServiceUnavailable, AWSIoTErrorInternalFailure, AWSIoTErrorResourceNotFound.</Abstract></ReturnValue>
			<Anchor>//api/name/deleteRoleAlias:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/deleteRoleAlias:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Deletes a role alias&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTDeleteRoleAliasRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTDeleteRoleAliasResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)deleteRoleAlias:(AWSIoTDeleteRoleAliasRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSIoTDeleteRoleAliasResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DeleteRoleAlias service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorDeleteConflict, AWSIoTErrorInvalidRequest, AWSIoTErrorThrottling, AWSIoTErrorUnauthorized, AWSIoTErrorServiceUnavailable, AWSIoTErrorInternalFailure, AWSIoTErrorResourceNotFound.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/deleteRoleAlias:completionHandler:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/deleteStream:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Deletes a stream.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTDeleteStreamRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTDeleteStreamResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSIoTDeleteStreamResponse*&gt; *)deleteStream:(AWSIoTDeleteStreamRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DeleteStream service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSIoTDeleteStreamResponse. On failed execution, task.error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorResourceNotFound, AWSIoTErrorDeleteConflict, AWSIoTErrorInvalidRequest, AWSIoTErrorThrottling, AWSIoTErrorUnauthorized, AWSIoTErrorServiceUnavailable, AWSIoTErrorInternalFailure.</Abstract></ReturnValue>
			<Anchor>//api/name/deleteStream:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/deleteStream:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Deletes a stream.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTDeleteStreamRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTDeleteStreamResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)deleteStream:(AWSIoTDeleteStreamRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSIoTDeleteStreamResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DeleteStream service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorResourceNotFound, AWSIoTErrorDeleteConflict, AWSIoTErrorInvalidRequest, AWSIoTErrorThrottling, AWSIoTErrorUnauthorized, AWSIoTErrorServiceUnavailable, AWSIoTErrorInternalFailure.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/deleteStream:completionHandler:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/deleteThing:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Deletes the specified thing.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTDeleteThingRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTDeleteThingResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSIoTDeleteThingResponse*&gt; *)deleteThing:(AWSIoTDeleteThingRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DeleteThing service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSIoTDeleteThingResponse. On failed execution, task.error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorResourceNotFound, AWSIoTErrorVersionConflict, AWSIoTErrorInvalidRequest, AWSIoTErrorThrottling, AWSIoTErrorUnauthorized, AWSIoTErrorServiceUnavailable, AWSIoTErrorInternalFailure.</Abstract></ReturnValue>
			<Anchor>//api/name/deleteThing:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/deleteThing:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Deletes the specified thing.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTDeleteThingRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTDeleteThingResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)deleteThing:(AWSIoTDeleteThingRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSIoTDeleteThingResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DeleteThing service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorResourceNotFound, AWSIoTErrorVersionConflict, AWSIoTErrorInvalidRequest, AWSIoTErrorThrottling, AWSIoTErrorUnauthorized, AWSIoTErrorServiceUnavailable, AWSIoTErrorInternalFailure.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/deleteThing:completionHandler:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/deleteThingGroup:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Deletes a thing group.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTDeleteThingGroupRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTDeleteThingGroupResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSIoTDeleteThingGroupResponse*&gt; *)deleteThingGroup:(AWSIoTDeleteThingGroupRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DeleteThingGroup service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSIoTDeleteThingGroupResponse. On failed execution, task.error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorInvalidRequest, AWSIoTErrorVersionConflict, AWSIoTErrorThrottling, AWSIoTErrorInternalFailure.</Abstract></ReturnValue>
			<Anchor>//api/name/deleteThingGroup:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/deleteThingGroup:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Deletes a thing group.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTDeleteThingGroupRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTDeleteThingGroupResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)deleteThingGroup:(AWSIoTDeleteThingGroupRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSIoTDeleteThingGroupResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DeleteThingGroup service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorInvalidRequest, AWSIoTErrorVersionConflict, AWSIoTErrorThrottling, AWSIoTErrorInternalFailure.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/deleteThingGroup:completionHandler:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/deleteThingType:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Deletes the specified thing type . You cannot delete a thing type if it has things associated with it. To delete a thing type, first mark it as deprecated by calling &lt;a&gt;DeprecateThingType&lt;/a&gt;, then remove any associated things by calling &lt;a&gt;UpdateThing&lt;/a&gt; to change the thing type on any associated thing, and finally use &lt;a&gt;DeleteThingType&lt;/a&gt; to delete the thing type.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTDeleteThingTypeRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTDeleteThingTypeResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSIoTDeleteThingTypeResponse*&gt; *)deleteThingType:(AWSIoTDeleteThingTypeRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DeleteThingType service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSIoTDeleteThingTypeResponse. On failed execution, task.error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorResourceNotFound, AWSIoTErrorInvalidRequest, AWSIoTErrorThrottling, AWSIoTErrorUnauthorized, AWSIoTErrorServiceUnavailable, AWSIoTErrorInternalFailure.</Abstract></ReturnValue>
			<Anchor>//api/name/deleteThingType:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/deleteThingType:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Deletes the specified thing type . You cannot delete a thing type if it has things associated with it. To delete a thing type, first mark it as deprecated by calling &lt;a&gt;DeprecateThingType&lt;/a&gt;, then remove any associated things by calling &lt;a&gt;UpdateThing&lt;/a&gt; to change the thing type on any associated thing, and finally use &lt;a&gt;DeleteThingType&lt;/a&gt; to delete the thing type.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTDeleteThingTypeRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTDeleteThingTypeResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)deleteThingType:(AWSIoTDeleteThingTypeRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSIoTDeleteThingTypeResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DeleteThingType service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorResourceNotFound, AWSIoTErrorInvalidRequest, AWSIoTErrorThrottling, AWSIoTErrorUnauthorized, AWSIoTErrorServiceUnavailable, AWSIoTErrorInternalFailure.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/deleteThingType:completionHandler:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/deleteTopicRule:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Deletes the rule.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTDeleteTopicRuleRequest</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask *)deleteTopicRule:(AWSIoTDeleteTopicRuleRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DeleteTopicRule service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will be nil. On failed execution, task.error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorInternal, AWSIoTErrorInvalidRequest, AWSIoTErrorServiceUnavailable, AWSIoTErrorUnauthorized.</Abstract></ReturnValue>
			<Anchor>//api/name/deleteTopicRule:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/deleteTopicRule:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Deletes the rule.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTDeleteTopicRuleRequest</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)deleteTopicRule:(AWSIoTDeleteTopicRuleRequest *)request completionHandler:(void ( ^ _Nullable ) ( NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DeleteTopicRule service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorInternal, AWSIoTErrorInvalidRequest, AWSIoTErrorServiceUnavailable, AWSIoTErrorUnauthorized.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/deleteTopicRule:completionHandler:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/deleteV2LoggingLevel:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Deletes a logging level.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTDeleteV2LoggingLevelRequest</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask *)deleteV2LoggingLevel:(AWSIoTDeleteV2LoggingLevelRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DeleteV2LoggingLevel service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will be nil. On failed execution, task.error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorInternal, AWSIoTErrorInvalidRequest, AWSIoTErrorServiceUnavailable.</Abstract></ReturnValue>
			<Anchor>//api/name/deleteV2LoggingLevel:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/deleteV2LoggingLevel:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Deletes a logging level.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTDeleteV2LoggingLevelRequest</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)deleteV2LoggingLevel:(AWSIoTDeleteV2LoggingLevelRequest *)request completionHandler:(void ( ^ _Nullable ) ( NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DeleteV2LoggingLevel service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorInternal, AWSIoTErrorInvalidRequest, AWSIoTErrorServiceUnavailable.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/deleteV2LoggingLevel:completionHandler:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/deprecateThingType:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Deprecates a thing type. You can not associate new things with deprecated thing type.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTDeprecateThingTypeRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTDeprecateThingTypeResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSIoTDeprecateThingTypeResponse*&gt; *)deprecateThingType:(AWSIoTDeprecateThingTypeRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DeprecateThingType service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSIoTDeprecateThingTypeResponse. On failed execution, task.error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorResourceNotFound, AWSIoTErrorInvalidRequest, AWSIoTErrorThrottling, AWSIoTErrorUnauthorized, AWSIoTErrorServiceUnavailable, AWSIoTErrorInternalFailure.</Abstract></ReturnValue>
			<Anchor>//api/name/deprecateThingType:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/deprecateThingType:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Deprecates a thing type. You can not associate new things with deprecated thing type.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTDeprecateThingTypeRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTDeprecateThingTypeResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)deprecateThingType:(AWSIoTDeprecateThingTypeRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSIoTDeprecateThingTypeResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DeprecateThingType service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorResourceNotFound, AWSIoTErrorInvalidRequest, AWSIoTErrorThrottling, AWSIoTErrorUnauthorized, AWSIoTErrorServiceUnavailable, AWSIoTErrorInternalFailure.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/deprecateThingType:completionHandler:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/describeAuthorizer:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Describes an authorizer.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTDescribeAuthorizerRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTDescribeAuthorizerResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSIoTDescribeAuthorizerResponse*&gt; *)describeAuthorizer:(AWSIoTDescribeAuthorizerRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DescribeAuthorizer service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSIoTDescribeAuthorizerResponse. On failed execution, task.error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorResourceNotFound, AWSIoTErrorInvalidRequest, AWSIoTErrorThrottling, AWSIoTErrorUnauthorized, AWSIoTErrorServiceUnavailable, AWSIoTErrorInternalFailure.</Abstract></ReturnValue>
			<Anchor>//api/name/describeAuthorizer:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/describeAuthorizer:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Describes an authorizer.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTDescribeAuthorizerRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTDescribeAuthorizerResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)describeAuthorizer:(AWSIoTDescribeAuthorizerRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSIoTDescribeAuthorizerResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DescribeAuthorizer service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorResourceNotFound, AWSIoTErrorInvalidRequest, AWSIoTErrorThrottling, AWSIoTErrorUnauthorized, AWSIoTErrorServiceUnavailable, AWSIoTErrorInternalFailure.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/describeAuthorizer:completionHandler:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/describeCACertificate:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Describes a registered CA certificate.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTDescribeCACertificateRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTDescribeCACertificateResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSIoTDescribeCACertificateResponse*&gt; *)describeCACertificate:(AWSIoTDescribeCACertificateRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DescribeCACertificate service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSIoTDescribeCACertificateResponse. On failed execution, task.error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorInvalidRequest, AWSIoTErrorThrottling, AWSIoTErrorUnauthorized, AWSIoTErrorServiceUnavailable, AWSIoTErrorInternalFailure, AWSIoTErrorResourceNotFound.</Abstract></ReturnValue>
			<Anchor>//api/name/describeCACertificate:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/describeCACertificate:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Describes a registered CA certificate.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTDescribeCACertificateRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTDescribeCACertificateResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)describeCACertificate:(AWSIoTDescribeCACertificateRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSIoTDescribeCACertificateResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DescribeCACertificate service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorInvalidRequest, AWSIoTErrorThrottling, AWSIoTErrorUnauthorized, AWSIoTErrorServiceUnavailable, AWSIoTErrorInternalFailure, AWSIoTErrorResourceNotFound.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/describeCACertificate:completionHandler:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/describeCertificate:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Gets information about the specified certificate.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTDescribeCertificateRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTDescribeCertificateResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSIoTDescribeCertificateResponse*&gt; *)describeCertificate:(AWSIoTDescribeCertificateRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DescribeCertificate service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSIoTDescribeCertificateResponse. On failed execution, task.error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorInvalidRequest, AWSIoTErrorThrottling, AWSIoTErrorUnauthorized, AWSIoTErrorServiceUnavailable, AWSIoTErrorInternalFailure, AWSIoTErrorResourceNotFound.</Abstract></ReturnValue>
			<Anchor>//api/name/describeCertificate:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/describeCertificate:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Gets information about the specified certificate.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTDescribeCertificateRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTDescribeCertificateResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)describeCertificate:(AWSIoTDescribeCertificateRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSIoTDescribeCertificateResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DescribeCertificate service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorInvalidRequest, AWSIoTErrorThrottling, AWSIoTErrorUnauthorized, AWSIoTErrorServiceUnavailable, AWSIoTErrorInternalFailure, AWSIoTErrorResourceNotFound.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/describeCertificate:completionHandler:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/describeDefaultAuthorizer:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Describes the default authorizer.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTDescribeDefaultAuthorizerRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTDescribeDefaultAuthorizerResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSIoTDescribeDefaultAuthorizerResponse*&gt; *)describeDefaultAuthorizer:(AWSIoTDescribeDefaultAuthorizerRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DescribeDefaultAuthorizer service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSIoTDescribeDefaultAuthorizerResponse. On failed execution, task.error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorResourceNotFound, AWSIoTErrorInvalidRequest, AWSIoTErrorThrottling, AWSIoTErrorUnauthorized, AWSIoTErrorServiceUnavailable, AWSIoTErrorInternalFailure.</Abstract></ReturnValue>
			<Anchor>//api/name/describeDefaultAuthorizer:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/describeDefaultAuthorizer:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Describes the default authorizer.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTDescribeDefaultAuthorizerRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTDescribeDefaultAuthorizerResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)describeDefaultAuthorizer:(AWSIoTDescribeDefaultAuthorizerRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSIoTDescribeDefaultAuthorizerResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DescribeDefaultAuthorizer service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorResourceNotFound, AWSIoTErrorInvalidRequest, AWSIoTErrorThrottling, AWSIoTErrorUnauthorized, AWSIoTErrorServiceUnavailable, AWSIoTErrorInternalFailure.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/describeDefaultAuthorizer:completionHandler:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/describeEndpoint:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Returns a unique endpoint specific to the AWS account making the call.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTDescribeEndpointRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTDescribeEndpointResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSIoTDescribeEndpointResponse*&gt; *)describeEndpoint:(AWSIoTDescribeEndpointRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DescribeEndpoint service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSIoTDescribeEndpointResponse. On failed execution, task.error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorInternalFailure, AWSIoTErrorInvalidRequest, AWSIoTErrorUnauthorized, AWSIoTErrorThrottling.</Abstract></ReturnValue>
			<Anchor>//api/name/describeEndpoint:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/describeEndpoint:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Returns a unique endpoint specific to the AWS account making the call.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTDescribeEndpointRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTDescribeEndpointResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)describeEndpoint:(AWSIoTDescribeEndpointRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSIoTDescribeEndpointResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DescribeEndpoint service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorInternalFailure, AWSIoTErrorInvalidRequest, AWSIoTErrorUnauthorized, AWSIoTErrorThrottling.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/describeEndpoint:completionHandler:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/describeEventConfigurations:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Describes event configurations.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTDescribeEventConfigurationsRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTDescribeEventConfigurationsResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSIoTDescribeEventConfigurationsResponse*&gt; *)describeEventConfigurations:(AWSIoTDescribeEventConfigurationsRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DescribeEventConfigurations service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSIoTDescribeEventConfigurationsResponse. On failed execution, task.error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorInternalFailure, AWSIoTErrorThrottling.</Abstract></ReturnValue>
			<Anchor>//api/name/describeEventConfigurations:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/describeEventConfigurations:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Describes event configurations.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTDescribeEventConfigurationsRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTDescribeEventConfigurationsResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)describeEventConfigurations:(AWSIoTDescribeEventConfigurationsRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSIoTDescribeEventConfigurationsResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DescribeEventConfigurations service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorInternalFailure, AWSIoTErrorThrottling.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/describeEventConfigurations:completionHandler:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/describeIndex:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Describes a search index.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTDescribeIndexRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTDescribeIndexResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSIoTDescribeIndexResponse*&gt; *)describeIndex:(AWSIoTDescribeIndexRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DescribeIndex service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSIoTDescribeIndexResponse. On failed execution, task.error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorInvalidRequest, AWSIoTErrorThrottling, AWSIoTErrorUnauthorized, AWSIoTErrorServiceUnavailable, AWSIoTErrorInternalFailure, AWSIoTErrorResourceNotFound.</Abstract></ReturnValue>
			<Anchor>//api/name/describeIndex:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/describeIndex:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Describes a search index.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTDescribeIndexRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTDescribeIndexResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)describeIndex:(AWSIoTDescribeIndexRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSIoTDescribeIndexResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DescribeIndex service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorInvalidRequest, AWSIoTErrorThrottling, AWSIoTErrorUnauthorized, AWSIoTErrorServiceUnavailable, AWSIoTErrorInternalFailure, AWSIoTErrorResourceNotFound.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/describeIndex:completionHandler:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/describeJob:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Describes a job.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTDescribeJobRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTDescribeJobResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSIoTDescribeJobResponse*&gt; *)describeJob:(AWSIoTDescribeJobRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DescribeJob service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSIoTDescribeJobResponse. On failed execution, task.error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorInvalidRequest, AWSIoTErrorResourceNotFound, AWSIoTErrorThrottling, AWSIoTErrorServiceUnavailable.</Abstract></ReturnValue>
			<Anchor>//api/name/describeJob:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/describeJob:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Describes a job.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTDescribeJobRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTDescribeJobResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)describeJob:(AWSIoTDescribeJobRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSIoTDescribeJobResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DescribeJob service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorInvalidRequest, AWSIoTErrorResourceNotFound, AWSIoTErrorThrottling, AWSIoTErrorServiceUnavailable.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/describeJob:completionHandler:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/describeJobExecution:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Describes a job execution.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTDescribeJobExecutionRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTDescribeJobExecutionResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSIoTDescribeJobExecutionResponse*&gt; *)describeJobExecution:(AWSIoTDescribeJobExecutionRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DescribeJobExecution service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSIoTDescribeJobExecutionResponse. On failed execution, task.error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorInvalidRequest, AWSIoTErrorResourceNotFound, AWSIoTErrorThrottling, AWSIoTErrorServiceUnavailable.</Abstract></ReturnValue>
			<Anchor>//api/name/describeJobExecution:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/describeJobExecution:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Describes a job execution.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTDescribeJobExecutionRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTDescribeJobExecutionResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)describeJobExecution:(AWSIoTDescribeJobExecutionRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSIoTDescribeJobExecutionResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DescribeJobExecution service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorInvalidRequest, AWSIoTErrorResourceNotFound, AWSIoTErrorThrottling, AWSIoTErrorServiceUnavailable.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/describeJobExecution:completionHandler:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/describeRoleAlias:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Describes a role alias.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTDescribeRoleAliasRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTDescribeRoleAliasResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSIoTDescribeRoleAliasResponse*&gt; *)describeRoleAlias:(AWSIoTDescribeRoleAliasRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DescribeRoleAlias service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSIoTDescribeRoleAliasResponse. On failed execution, task.error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorInvalidRequest, AWSIoTErrorThrottling, AWSIoTErrorUnauthorized, AWSIoTErrorServiceUnavailable, AWSIoTErrorInternalFailure, AWSIoTErrorResourceNotFound.</Abstract></ReturnValue>
			<Anchor>//api/name/describeRoleAlias:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/describeRoleAlias:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Describes a role alias.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTDescribeRoleAliasRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTDescribeRoleAliasResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)describeRoleAlias:(AWSIoTDescribeRoleAliasRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSIoTDescribeRoleAliasResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DescribeRoleAlias service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorInvalidRequest, AWSIoTErrorThrottling, AWSIoTErrorUnauthorized, AWSIoTErrorServiceUnavailable, AWSIoTErrorInternalFailure, AWSIoTErrorResourceNotFound.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/describeRoleAlias:completionHandler:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/describeStream:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Gets information about a stream.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTDescribeStreamRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTDescribeStreamResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSIoTDescribeStreamResponse*&gt; *)describeStream:(AWSIoTDescribeStreamRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DescribeStream service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSIoTDescribeStreamResponse. On failed execution, task.error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorInvalidRequest, AWSIoTErrorResourceNotFound, AWSIoTErrorThrottling, AWSIoTErrorUnauthorized, AWSIoTErrorServiceUnavailable, AWSIoTErrorInternalFailure.</Abstract></ReturnValue>
			<Anchor>//api/name/describeStream:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/describeStream:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Gets information about a stream.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTDescribeStreamRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTDescribeStreamResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)describeStream:(AWSIoTDescribeStreamRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSIoTDescribeStreamResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DescribeStream service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorInvalidRequest, AWSIoTErrorResourceNotFound, AWSIoTErrorThrottling, AWSIoTErrorUnauthorized, AWSIoTErrorServiceUnavailable, AWSIoTErrorInternalFailure.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/describeStream:completionHandler:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/describeThing:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Gets information about the specified thing.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTDescribeThingRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTDescribeThingResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSIoTDescribeThingResponse*&gt; *)describeThing:(AWSIoTDescribeThingRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DescribeThing service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSIoTDescribeThingResponse. On failed execution, task.error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorResourceNotFound, AWSIoTErrorInvalidRequest, AWSIoTErrorThrottling, AWSIoTErrorUnauthorized, AWSIoTErrorServiceUnavailable, AWSIoTErrorInternalFailure.</Abstract></ReturnValue>
			<Anchor>//api/name/describeThing:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/describeThing:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Gets information about the specified thing.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTDescribeThingRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTDescribeThingResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)describeThing:(AWSIoTDescribeThingRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSIoTDescribeThingResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DescribeThing service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorResourceNotFound, AWSIoTErrorInvalidRequest, AWSIoTErrorThrottling, AWSIoTErrorUnauthorized, AWSIoTErrorServiceUnavailable, AWSIoTErrorInternalFailure.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/describeThing:completionHandler:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/describeThingGroup:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Describe a thing group.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTDescribeThingGroupRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTDescribeThingGroupResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSIoTDescribeThingGroupResponse*&gt; *)describeThingGroup:(AWSIoTDescribeThingGroupRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DescribeThingGroup service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSIoTDescribeThingGroupResponse. On failed execution, task.error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorInvalidRequest, AWSIoTErrorThrottling, AWSIoTErrorInternalFailure, AWSIoTErrorResourceNotFound.</Abstract></ReturnValue>
			<Anchor>//api/name/describeThingGroup:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/describeThingGroup:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Describe a thing group.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTDescribeThingGroupRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTDescribeThingGroupResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)describeThingGroup:(AWSIoTDescribeThingGroupRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSIoTDescribeThingGroupResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DescribeThingGroup service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorInvalidRequest, AWSIoTErrorThrottling, AWSIoTErrorInternalFailure, AWSIoTErrorResourceNotFound.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/describeThingGroup:completionHandler:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/describeThingRegistrationTask:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Describes a bulk thing provisioning task.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTDescribeThingRegistrationTaskRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTDescribeThingRegistrationTaskResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSIoTDescribeThingRegistrationTaskResponse*&gt; *)describeThingRegistrationTask:(AWSIoTDescribeThingRegistrationTaskRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DescribeThingRegistrationTask service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSIoTDescribeThingRegistrationTaskResponse. On failed execution, task.error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorInvalidRequest, AWSIoTErrorThrottling, AWSIoTErrorUnauthorized, AWSIoTErrorInternalFailure, AWSIoTErrorResourceNotFound.</Abstract></ReturnValue>
			<Anchor>//api/name/describeThingRegistrationTask:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/describeThingRegistrationTask:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Describes a bulk thing provisioning task.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTDescribeThingRegistrationTaskRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTDescribeThingRegistrationTaskResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)describeThingRegistrationTask:(AWSIoTDescribeThingRegistrationTaskRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSIoTDescribeThingRegistrationTaskResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DescribeThingRegistrationTask service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorInvalidRequest, AWSIoTErrorThrottling, AWSIoTErrorUnauthorized, AWSIoTErrorInternalFailure, AWSIoTErrorResourceNotFound.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/describeThingRegistrationTask:completionHandler:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/describeThingType:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Gets information about the specified thing type.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTDescribeThingTypeRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTDescribeThingTypeResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSIoTDescribeThingTypeResponse*&gt; *)describeThingType:(AWSIoTDescribeThingTypeRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DescribeThingType service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSIoTDescribeThingTypeResponse. On failed execution, task.error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorResourceNotFound, AWSIoTErrorInvalidRequest, AWSIoTErrorThrottling, AWSIoTErrorUnauthorized, AWSIoTErrorServiceUnavailable, AWSIoTErrorInternalFailure.</Abstract></ReturnValue>
			<Anchor>//api/name/describeThingType:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/describeThingType:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Gets information about the specified thing type.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTDescribeThingTypeRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTDescribeThingTypeResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)describeThingType:(AWSIoTDescribeThingTypeRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSIoTDescribeThingTypeResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DescribeThingType service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorResourceNotFound, AWSIoTErrorInvalidRequest, AWSIoTErrorThrottling, AWSIoTErrorUnauthorized, AWSIoTErrorServiceUnavailable, AWSIoTErrorInternalFailure.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/describeThingType:completionHandler:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/detachPolicy:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Detaches a policy from the specified target.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTDetachPolicyRequest</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask *)detachPolicy:(AWSIoTDetachPolicyRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DetachPolicy service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will be nil. On failed execution, task.error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorInvalidRequest, AWSIoTErrorThrottling, AWSIoTErrorUnauthorized, AWSIoTErrorServiceUnavailable, AWSIoTErrorInternalFailure, AWSIoTErrorLimitExceeded.</Abstract></ReturnValue>
			<Anchor>//api/name/detachPolicy:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/detachPolicy:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Detaches a policy from the specified target.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTDetachPolicyRequest</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)detachPolicy:(AWSIoTDetachPolicyRequest *)request completionHandler:(void ( ^ _Nullable ) ( NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DetachPolicy service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorInvalidRequest, AWSIoTErrorThrottling, AWSIoTErrorUnauthorized, AWSIoTErrorServiceUnavailable, AWSIoTErrorInternalFailure, AWSIoTErrorLimitExceeded.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/detachPolicy:completionHandler:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/detachPrincipalPolicy:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Removes the specified policy from the specified certificate.&lt;/p&gt;&lt;p&gt;&lt;b&gt;Note:&lt;/b&gt; This API is deprecated. Please use &lt;a&gt;DetachPolicy&lt;/a&gt; instead.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTDetachPrincipalPolicyRequest</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask *)detachPrincipalPolicy:(AWSIoTDetachPrincipalPolicyRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DetachPrincipalPolicy service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will be nil. On failed execution, task.error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorResourceNotFound, AWSIoTErrorInvalidRequest, AWSIoTErrorThrottling, AWSIoTErrorUnauthorized, AWSIoTErrorServiceUnavailable, AWSIoTErrorInternalFailure.</Abstract></ReturnValue>
			<Anchor>//api/name/detachPrincipalPolicy:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/detachPrincipalPolicy:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Removes the specified policy from the specified certificate.&lt;/p&gt;&lt;p&gt;&lt;b&gt;Note:&lt;/b&gt; This API is deprecated. Please use &lt;a&gt;DetachPolicy&lt;/a&gt; instead.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTDetachPrincipalPolicyRequest</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)detachPrincipalPolicy:(AWSIoTDetachPrincipalPolicyRequest *)request completionHandler:(void ( ^ _Nullable ) ( NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DetachPrincipalPolicy service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorResourceNotFound, AWSIoTErrorInvalidRequest, AWSIoTErrorThrottling, AWSIoTErrorUnauthorized, AWSIoTErrorServiceUnavailable, AWSIoTErrorInternalFailure.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/detachPrincipalPolicy:completionHandler:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/detachThingPrincipal:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Detaches the specified principal from the specified thing.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTDetachThingPrincipalRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTDetachThingPrincipalResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSIoTDetachThingPrincipalResponse*&gt; *)detachThingPrincipal:(AWSIoTDetachThingPrincipalRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DetachThingPrincipal service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSIoTDetachThingPrincipalResponse. On failed execution, task.error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorResourceNotFound, AWSIoTErrorInvalidRequest, AWSIoTErrorThrottling, AWSIoTErrorUnauthorized, AWSIoTErrorServiceUnavailable, AWSIoTErrorInternalFailure.</Abstract></ReturnValue>
			<Anchor>//api/name/detachThingPrincipal:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/detachThingPrincipal:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Detaches the specified principal from the specified thing.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTDetachThingPrincipalRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTDetachThingPrincipalResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)detachThingPrincipal:(AWSIoTDetachThingPrincipalRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSIoTDetachThingPrincipalResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DetachThingPrincipal service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorResourceNotFound, AWSIoTErrorInvalidRequest, AWSIoTErrorThrottling, AWSIoTErrorUnauthorized, AWSIoTErrorServiceUnavailable, AWSIoTErrorInternalFailure.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/detachThingPrincipal:completionHandler:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/disableTopicRule:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Disables the rule.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTDisableTopicRuleRequest</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask *)disableTopicRule:(AWSIoTDisableTopicRuleRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DisableTopicRule service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will be nil. On failed execution, task.error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorInternal, AWSIoTErrorInvalidRequest, AWSIoTErrorServiceUnavailable, AWSIoTErrorUnauthorized.</Abstract></ReturnValue>
			<Anchor>//api/name/disableTopicRule:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/disableTopicRule:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Disables the rule.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTDisableTopicRuleRequest</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)disableTopicRule:(AWSIoTDisableTopicRuleRequest *)request completionHandler:(void ( ^ _Nullable ) ( NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DisableTopicRule service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorInternal, AWSIoTErrorInvalidRequest, AWSIoTErrorServiceUnavailable, AWSIoTErrorUnauthorized.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/disableTopicRule:completionHandler:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/enableTopicRule:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Enables the rule.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTEnableTopicRuleRequest</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask *)enableTopicRule:(AWSIoTEnableTopicRuleRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the EnableTopicRule service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will be nil. On failed execution, task.error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorInternal, AWSIoTErrorInvalidRequest, AWSIoTErrorServiceUnavailable, AWSIoTErrorUnauthorized.</Abstract></ReturnValue>
			<Anchor>//api/name/enableTopicRule:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/enableTopicRule:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Enables the rule.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTEnableTopicRuleRequest</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)enableTopicRule:(AWSIoTEnableTopicRuleRequest *)request completionHandler:(void ( ^ _Nullable ) ( NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the EnableTopicRule service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorInternal, AWSIoTErrorInvalidRequest, AWSIoTErrorServiceUnavailable, AWSIoTErrorUnauthorized.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/enableTopicRule:completionHandler:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/getEffectivePolicies:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Gets a list of the policies that have an effect on the authorization behavior of the specified device when it connects to the AWS IoT device gateway.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTGetEffectivePoliciesRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTGetEffectivePoliciesResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSIoTGetEffectivePoliciesResponse*&gt; *)getEffectivePolicies:(AWSIoTGetEffectivePoliciesRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the GetEffectivePolicies service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSIoTGetEffectivePoliciesResponse. On failed execution, task.error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorResourceNotFound, AWSIoTErrorInvalidRequest, AWSIoTErrorThrottling, AWSIoTErrorUnauthorized, AWSIoTErrorServiceUnavailable, AWSIoTErrorInternalFailure, AWSIoTErrorLimitExceeded.</Abstract></ReturnValue>
			<Anchor>//api/name/getEffectivePolicies:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/getEffectivePolicies:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Gets a list of the policies that have an effect on the authorization behavior of the specified device when it connects to the AWS IoT device gateway.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTGetEffectivePoliciesRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTGetEffectivePoliciesResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)getEffectivePolicies:(AWSIoTGetEffectivePoliciesRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSIoTGetEffectivePoliciesResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the GetEffectivePolicies service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorResourceNotFound, AWSIoTErrorInvalidRequest, AWSIoTErrorThrottling, AWSIoTErrorUnauthorized, AWSIoTErrorServiceUnavailable, AWSIoTErrorInternalFailure, AWSIoTErrorLimitExceeded.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/getEffectivePolicies:completionHandler:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/getIndexingConfiguration:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Gets the search configuration.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTGetIndexingConfigurationRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTGetIndexingConfigurationResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSIoTGetIndexingConfigurationResponse*&gt; *)getIndexingConfiguration:(AWSIoTGetIndexingConfigurationRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the GetIndexingConfiguration service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSIoTGetIndexingConfigurationResponse. On failed execution, task.error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorInvalidRequest, AWSIoTErrorThrottling, AWSIoTErrorUnauthorized, AWSIoTErrorServiceUnavailable, AWSIoTErrorInternalFailure.</Abstract></ReturnValue>
			<Anchor>//api/name/getIndexingConfiguration:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/getIndexingConfiguration:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Gets the search configuration.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTGetIndexingConfigurationRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTGetIndexingConfigurationResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)getIndexingConfiguration:(AWSIoTGetIndexingConfigurationRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSIoTGetIndexingConfigurationResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the GetIndexingConfiguration service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorInvalidRequest, AWSIoTErrorThrottling, AWSIoTErrorUnauthorized, AWSIoTErrorServiceUnavailable, AWSIoTErrorInternalFailure.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/getIndexingConfiguration:completionHandler:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/getJobDocument:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Gets a job document.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTGetJobDocumentRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTGetJobDocumentResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSIoTGetJobDocumentResponse*&gt; *)getJobDocument:(AWSIoTGetJobDocumentRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the GetJobDocument service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSIoTGetJobDocumentResponse. On failed execution, task.error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorInvalidRequest, AWSIoTErrorResourceNotFound, AWSIoTErrorThrottling, AWSIoTErrorServiceUnavailable.</Abstract></ReturnValue>
			<Anchor>//api/name/getJobDocument:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/getJobDocument:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Gets a job document.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTGetJobDocumentRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTGetJobDocumentResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)getJobDocument:(AWSIoTGetJobDocumentRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSIoTGetJobDocumentResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the GetJobDocument service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorInvalidRequest, AWSIoTErrorResourceNotFound, AWSIoTErrorThrottling, AWSIoTErrorServiceUnavailable.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/getJobDocument:completionHandler:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/getLoggingOptions:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Gets the logging options.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTGetLoggingOptionsRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTGetLoggingOptionsResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSIoTGetLoggingOptionsResponse*&gt; *)getLoggingOptions:(AWSIoTGetLoggingOptionsRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the GetLoggingOptions service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSIoTGetLoggingOptionsResponse. On failed execution, task.error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorInternal, AWSIoTErrorInvalidRequest, AWSIoTErrorServiceUnavailable.</Abstract></ReturnValue>
			<Anchor>//api/name/getLoggingOptions:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/getLoggingOptions:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Gets the logging options.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTGetLoggingOptionsRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTGetLoggingOptionsResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)getLoggingOptions:(AWSIoTGetLoggingOptionsRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSIoTGetLoggingOptionsResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the GetLoggingOptions service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorInternal, AWSIoTErrorInvalidRequest, AWSIoTErrorServiceUnavailable.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/getLoggingOptions:completionHandler:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/getOTAUpdate:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Gets an OTA update.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTGetOTAUpdateRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTGetOTAUpdateResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSIoTGetOTAUpdateResponse*&gt; *)getOTAUpdate:(AWSIoTGetOTAUpdateRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the GetOTAUpdate service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSIoTGetOTAUpdateResponse. On failed execution, task.error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorInvalidRequest, AWSIoTErrorThrottling, AWSIoTErrorUnauthorized, AWSIoTErrorInternalFailure, AWSIoTErrorServiceUnavailable, AWSIoTErrorResourceNotFound.</Abstract></ReturnValue>
			<Anchor>//api/name/getOTAUpdate:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/getOTAUpdate:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Gets an OTA update.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTGetOTAUpdateRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTGetOTAUpdateResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)getOTAUpdate:(AWSIoTGetOTAUpdateRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSIoTGetOTAUpdateResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the GetOTAUpdate service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorInvalidRequest, AWSIoTErrorThrottling, AWSIoTErrorUnauthorized, AWSIoTErrorInternalFailure, AWSIoTErrorServiceUnavailable, AWSIoTErrorResourceNotFound.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/getOTAUpdate:completionHandler:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/getPolicy:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Gets information about the specified policy with the policy document of the default version.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTGetPolicyRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTGetPolicyResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSIoTGetPolicyResponse*&gt; *)getPolicy:(AWSIoTGetPolicyRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the GetPolicy service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSIoTGetPolicyResponse. On failed execution, task.error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorResourceNotFound, AWSIoTErrorInvalidRequest, AWSIoTErrorThrottling, AWSIoTErrorUnauthorized, AWSIoTErrorServiceUnavailable, AWSIoTErrorInternalFailure.</Abstract></ReturnValue>
			<Anchor>//api/name/getPolicy:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/getPolicy:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Gets information about the specified policy with the policy document of the default version.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTGetPolicyRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTGetPolicyResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)getPolicy:(AWSIoTGetPolicyRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSIoTGetPolicyResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the GetPolicy service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorResourceNotFound, AWSIoTErrorInvalidRequest, AWSIoTErrorThrottling, AWSIoTErrorUnauthorized, AWSIoTErrorServiceUnavailable, AWSIoTErrorInternalFailure.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/getPolicy:completionHandler:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/getPolicyVersion:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Gets information about the specified policy version.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTGetPolicyVersionRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTGetPolicyVersionResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSIoTGetPolicyVersionResponse*&gt; *)getPolicyVersion:(AWSIoTGetPolicyVersionRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the GetPolicyVersion service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSIoTGetPolicyVersionResponse. On failed execution, task.error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorResourceNotFound, AWSIoTErrorInvalidRequest, AWSIoTErrorThrottling, AWSIoTErrorUnauthorized, AWSIoTErrorServiceUnavailable, AWSIoTErrorInternalFailure.</Abstract></ReturnValue>
			<Anchor>//api/name/getPolicyVersion:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/getPolicyVersion:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Gets information about the specified policy version.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTGetPolicyVersionRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTGetPolicyVersionResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)getPolicyVersion:(AWSIoTGetPolicyVersionRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSIoTGetPolicyVersionResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the GetPolicyVersion service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorResourceNotFound, AWSIoTErrorInvalidRequest, AWSIoTErrorThrottling, AWSIoTErrorUnauthorized, AWSIoTErrorServiceUnavailable, AWSIoTErrorInternalFailure.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/getPolicyVersion:completionHandler:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/getRegistrationCode:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Gets a registration code used to register a CA certificate with AWS IoT.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTGetRegistrationCodeRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTGetRegistrationCodeResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSIoTGetRegistrationCodeResponse*&gt; *)getRegistrationCode:(AWSIoTGetRegistrationCodeRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the GetRegistrationCode service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSIoTGetRegistrationCodeResponse. On failed execution, task.error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorThrottling, AWSIoTErrorUnauthorized, AWSIoTErrorServiceUnavailable, AWSIoTErrorInternalFailure, AWSIoTErrorInvalidRequest.</Abstract></ReturnValue>
			<Anchor>//api/name/getRegistrationCode:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/getRegistrationCode:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Gets a registration code used to register a CA certificate with AWS IoT.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTGetRegistrationCodeRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTGetRegistrationCodeResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)getRegistrationCode:(AWSIoTGetRegistrationCodeRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSIoTGetRegistrationCodeResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the GetRegistrationCode service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorThrottling, AWSIoTErrorUnauthorized, AWSIoTErrorServiceUnavailable, AWSIoTErrorInternalFailure, AWSIoTErrorInvalidRequest.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/getRegistrationCode:completionHandler:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/getTopicRule:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Gets information about the rule.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTGetTopicRuleRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTGetTopicRuleResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSIoTGetTopicRuleResponse*&gt; *)getTopicRule:(AWSIoTGetTopicRuleRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the GetTopicRule service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSIoTGetTopicRuleResponse. On failed execution, task.error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorInternal, AWSIoTErrorInvalidRequest, AWSIoTErrorServiceUnavailable, AWSIoTErrorUnauthorized.</Abstract></ReturnValue>
			<Anchor>//api/name/getTopicRule:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/getTopicRule:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Gets information about the rule.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTGetTopicRuleRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTGetTopicRuleResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)getTopicRule:(AWSIoTGetTopicRuleRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSIoTGetTopicRuleResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the GetTopicRule service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorInternal, AWSIoTErrorInvalidRequest, AWSIoTErrorServiceUnavailable, AWSIoTErrorUnauthorized.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/getTopicRule:completionHandler:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/getV2LoggingOptions:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Gets the fine grained logging options.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTGetV2LoggingOptionsRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTGetV2LoggingOptionsResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSIoTGetV2LoggingOptionsResponse*&gt; *)getV2LoggingOptions:(AWSIoTGetV2LoggingOptionsRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the GetV2LoggingOptions service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSIoTGetV2LoggingOptionsResponse. On failed execution, task.error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorInternal, AWSIoTErrorInvalidRequest, AWSIoTErrorServiceUnavailable.</Abstract></ReturnValue>
			<Anchor>//api/name/getV2LoggingOptions:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/getV2LoggingOptions:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Gets the fine grained logging options.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTGetV2LoggingOptionsRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTGetV2LoggingOptionsResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)getV2LoggingOptions:(AWSIoTGetV2LoggingOptionsRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSIoTGetV2LoggingOptionsResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the GetV2LoggingOptions service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorInternal, AWSIoTErrorInvalidRequest, AWSIoTErrorServiceUnavailable.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/getV2LoggingOptions:completionHandler:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/listAttachedPolicies:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Lists the policies attached to the specified thing group.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTListAttachedPoliciesRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTListAttachedPoliciesResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSIoTListAttachedPoliciesResponse*&gt; *)listAttachedPolicies:(AWSIoTListAttachedPoliciesRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the ListAttachedPolicies service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSIoTListAttachedPoliciesResponse. On failed execution, task.error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorResourceNotFound, AWSIoTErrorInvalidRequest, AWSIoTErrorThrottling, AWSIoTErrorUnauthorized, AWSIoTErrorServiceUnavailable, AWSIoTErrorInternalFailure, AWSIoTErrorLimitExceeded.</Abstract></ReturnValue>
			<Anchor>//api/name/listAttachedPolicies:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/listAttachedPolicies:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Lists the policies attached to the specified thing group.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTListAttachedPoliciesRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTListAttachedPoliciesResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)listAttachedPolicies:(AWSIoTListAttachedPoliciesRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSIoTListAttachedPoliciesResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the ListAttachedPolicies service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorResourceNotFound, AWSIoTErrorInvalidRequest, AWSIoTErrorThrottling, AWSIoTErrorUnauthorized, AWSIoTErrorServiceUnavailable, AWSIoTErrorInternalFailure, AWSIoTErrorLimitExceeded.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/listAttachedPolicies:completionHandler:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/listAuthorizers:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Lists the authorizers registered in your account.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTListAuthorizersRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTListAuthorizersResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSIoTListAuthorizersResponse*&gt; *)listAuthorizers:(AWSIoTListAuthorizersRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the ListAuthorizers service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSIoTListAuthorizersResponse. On failed execution, task.error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorInvalidRequest, AWSIoTErrorThrottling, AWSIoTErrorUnauthorized, AWSIoTErrorServiceUnavailable, AWSIoTErrorInternalFailure.</Abstract></ReturnValue>
			<Anchor>//api/name/listAuthorizers:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/listAuthorizers:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Lists the authorizers registered in your account.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTListAuthorizersRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTListAuthorizersResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)listAuthorizers:(AWSIoTListAuthorizersRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSIoTListAuthorizersResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the ListAuthorizers service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorInvalidRequest, AWSIoTErrorThrottling, AWSIoTErrorUnauthorized, AWSIoTErrorServiceUnavailable, AWSIoTErrorInternalFailure.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/listAuthorizers:completionHandler:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/listCACertificates:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Lists the CA certificates registered for your AWS account.&lt;/p&gt;&lt;p&gt;The results are paginated with a default page size of 25. You can use the returned marker to retrieve additional results.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTListCACertificatesRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTListCACertificatesResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSIoTListCACertificatesResponse*&gt; *)listCACertificates:(AWSIoTListCACertificatesRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the ListCACertificates service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSIoTListCACertificatesResponse. On failed execution, task.error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorInvalidRequest, AWSIoTErrorThrottling, AWSIoTErrorUnauthorized, AWSIoTErrorServiceUnavailable, AWSIoTErrorInternalFailure.</Abstract></ReturnValue>
			<Anchor>//api/name/listCACertificates:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/listCACertificates:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Lists the CA certificates registered for your AWS account.&lt;/p&gt;&lt;p&gt;The results are paginated with a default page size of 25. You can use the returned marker to retrieve additional results.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTListCACertificatesRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTListCACertificatesResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)listCACertificates:(AWSIoTListCACertificatesRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSIoTListCACertificatesResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the ListCACertificates service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorInvalidRequest, AWSIoTErrorThrottling, AWSIoTErrorUnauthorized, AWSIoTErrorServiceUnavailable, AWSIoTErrorInternalFailure.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/listCACertificates:completionHandler:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/listCertificates:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Lists the certificates registered in your AWS account.&lt;/p&gt;&lt;p&gt;The results are paginated with a default page size of 25. You can use the returned marker to retrieve additional results.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTListCertificatesRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTListCertificatesResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSIoTListCertificatesResponse*&gt; *)listCertificates:(AWSIoTListCertificatesRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the ListCertificates service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSIoTListCertificatesResponse. On failed execution, task.error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorInvalidRequest, AWSIoTErrorThrottling, AWSIoTErrorUnauthorized, AWSIoTErrorServiceUnavailable, AWSIoTErrorInternalFailure.</Abstract></ReturnValue>
			<Anchor>//api/name/listCertificates:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/listCertificates:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Lists the certificates registered in your AWS account.&lt;/p&gt;&lt;p&gt;The results are paginated with a default page size of 25. You can use the returned marker to retrieve additional results.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTListCertificatesRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTListCertificatesResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)listCertificates:(AWSIoTListCertificatesRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSIoTListCertificatesResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the ListCertificates service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorInvalidRequest, AWSIoTErrorThrottling, AWSIoTErrorUnauthorized, AWSIoTErrorServiceUnavailable, AWSIoTErrorInternalFailure.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/listCertificates:completionHandler:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/listCertificatesByCA:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;List the device certificates signed by the specified CA certificate.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTListCertificatesByCARequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTListCertificatesByCAResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSIoTListCertificatesByCAResponse*&gt; *)listCertificatesByCA:(AWSIoTListCertificatesByCARequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the ListCertificatesByCA service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSIoTListCertificatesByCAResponse. On failed execution, task.error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorInvalidRequest, AWSIoTErrorThrottling, AWSIoTErrorUnauthorized, AWSIoTErrorServiceUnavailable, AWSIoTErrorInternalFailure.</Abstract></ReturnValue>
			<Anchor>//api/name/listCertificatesByCA:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/listCertificatesByCA:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;List the device certificates signed by the specified CA certificate.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTListCertificatesByCARequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTListCertificatesByCAResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)listCertificatesByCA:(AWSIoTListCertificatesByCARequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSIoTListCertificatesByCAResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the ListCertificatesByCA service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorInvalidRequest, AWSIoTErrorThrottling, AWSIoTErrorUnauthorized, AWSIoTErrorServiceUnavailable, AWSIoTErrorInternalFailure.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/listCertificatesByCA:completionHandler:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/listIndices:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Lists the search indices.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTListIndicesRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTListIndicesResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSIoTListIndicesResponse*&gt; *)listIndices:(AWSIoTListIndicesRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the ListIndices service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSIoTListIndicesResponse. On failed execution, task.error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorInvalidRequest, AWSIoTErrorThrottling, AWSIoTErrorUnauthorized, AWSIoTErrorServiceUnavailable, AWSIoTErrorInternalFailure.</Abstract></ReturnValue>
			<Anchor>//api/name/listIndices:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/listIndices:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Lists the search indices.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTListIndicesRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTListIndicesResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)listIndices:(AWSIoTListIndicesRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSIoTListIndicesResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the ListIndices service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorInvalidRequest, AWSIoTErrorThrottling, AWSIoTErrorUnauthorized, AWSIoTErrorServiceUnavailable, AWSIoTErrorInternalFailure.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/listIndices:completionHandler:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/listJobExecutionsForJob:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Lists the job executions for a job.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTListJobExecutionsForJobRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTListJobExecutionsForJobResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSIoTListJobExecutionsForJobResponse*&gt; *)listJobExecutionsForJob:(AWSIoTListJobExecutionsForJobRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the ListJobExecutionsForJob service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSIoTListJobExecutionsForJobResponse. On failed execution, task.error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorInvalidRequest, AWSIoTErrorResourceNotFound, AWSIoTErrorThrottling, AWSIoTErrorServiceUnavailable.</Abstract></ReturnValue>
			<Anchor>//api/name/listJobExecutionsForJob:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/listJobExecutionsForJob:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Lists the job executions for a job.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTListJobExecutionsForJobRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTListJobExecutionsForJobResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)listJobExecutionsForJob:(AWSIoTListJobExecutionsForJobRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSIoTListJobExecutionsForJobResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the ListJobExecutionsForJob service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorInvalidRequest, AWSIoTErrorResourceNotFound, AWSIoTErrorThrottling, AWSIoTErrorServiceUnavailable.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/listJobExecutionsForJob:completionHandler:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/listJobExecutionsForThing:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Lists the job executions for the specified thing.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTListJobExecutionsForThingRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTListJobExecutionsForThingResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSIoTListJobExecutionsForThingResponse*&gt; *)listJobExecutionsForThing:(AWSIoTListJobExecutionsForThingRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the ListJobExecutionsForThing service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSIoTListJobExecutionsForThingResponse. On failed execution, task.error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorInvalidRequest, AWSIoTErrorResourceNotFound, AWSIoTErrorThrottling, AWSIoTErrorServiceUnavailable.</Abstract></ReturnValue>
			<Anchor>//api/name/listJobExecutionsForThing:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/listJobExecutionsForThing:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Lists the job executions for the specified thing.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTListJobExecutionsForThingRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTListJobExecutionsForThingResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)listJobExecutionsForThing:(AWSIoTListJobExecutionsForThingRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSIoTListJobExecutionsForThingResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the ListJobExecutionsForThing service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorInvalidRequest, AWSIoTErrorResourceNotFound, AWSIoTErrorThrottling, AWSIoTErrorServiceUnavailable.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/listJobExecutionsForThing:completionHandler:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/listJobs:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Lists jobs.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTListJobsRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTListJobsResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSIoTListJobsResponse*&gt; *)listJobs:(AWSIoTListJobsRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the ListJobs service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSIoTListJobsResponse. On failed execution, task.error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorInvalidRequest, AWSIoTErrorResourceNotFound, AWSIoTErrorThrottling, AWSIoTErrorServiceUnavailable.</Abstract></ReturnValue>
			<Anchor>//api/name/listJobs:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/listJobs:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Lists jobs.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTListJobsRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTListJobsResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)listJobs:(AWSIoTListJobsRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSIoTListJobsResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the ListJobs service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorInvalidRequest, AWSIoTErrorResourceNotFound, AWSIoTErrorThrottling, AWSIoTErrorServiceUnavailable.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/listJobs:completionHandler:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/listOTAUpdates:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Lists OTA updates.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTListOTAUpdatesRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTListOTAUpdatesResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSIoTListOTAUpdatesResponse*&gt; *)listOTAUpdates:(AWSIoTListOTAUpdatesRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the ListOTAUpdates service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSIoTListOTAUpdatesResponse. On failed execution, task.error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorInvalidRequest, AWSIoTErrorThrottling, AWSIoTErrorUnauthorized, AWSIoTErrorInternalFailure, AWSIoTErrorServiceUnavailable.</Abstract></ReturnValue>
			<Anchor>//api/name/listOTAUpdates:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/listOTAUpdates:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Lists OTA updates.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTListOTAUpdatesRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTListOTAUpdatesResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)listOTAUpdates:(AWSIoTListOTAUpdatesRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSIoTListOTAUpdatesResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the ListOTAUpdates service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorInvalidRequest, AWSIoTErrorThrottling, AWSIoTErrorUnauthorized, AWSIoTErrorInternalFailure, AWSIoTErrorServiceUnavailable.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/listOTAUpdates:completionHandler:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/listOutgoingCertificates:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Lists certificates that are being transferred but not yet accepted.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTListOutgoingCertificatesRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTListOutgoingCertificatesResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSIoTListOutgoingCertificatesResponse*&gt; *)listOutgoingCertificates:(AWSIoTListOutgoingCertificatesRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the ListOutgoingCertificates service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSIoTListOutgoingCertificatesResponse. On failed execution, task.error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorInvalidRequest, AWSIoTErrorThrottling, AWSIoTErrorUnauthorized, AWSIoTErrorServiceUnavailable, AWSIoTErrorInternalFailure.</Abstract></ReturnValue>
			<Anchor>//api/name/listOutgoingCertificates:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/listOutgoingCertificates:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Lists certificates that are being transferred but not yet accepted.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTListOutgoingCertificatesRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTListOutgoingCertificatesResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)listOutgoingCertificates:(AWSIoTListOutgoingCertificatesRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSIoTListOutgoingCertificatesResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the ListOutgoingCertificates service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorInvalidRequest, AWSIoTErrorThrottling, AWSIoTErrorUnauthorized, AWSIoTErrorServiceUnavailable, AWSIoTErrorInternalFailure.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/listOutgoingCertificates:completionHandler:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/listPolicies:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Lists your policies.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTListPoliciesRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTListPoliciesResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSIoTListPoliciesResponse*&gt; *)listPolicies:(AWSIoTListPoliciesRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the ListPolicies service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSIoTListPoliciesResponse. On failed execution, task.error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorInvalidRequest, AWSIoTErrorThrottling, AWSIoTErrorUnauthorized, AWSIoTErrorServiceUnavailable, AWSIoTErrorInternalFailure.</Abstract></ReturnValue>
			<Anchor>//api/name/listPolicies:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/listPolicies:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Lists your policies.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTListPoliciesRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTListPoliciesResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)listPolicies:(AWSIoTListPoliciesRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSIoTListPoliciesResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the ListPolicies service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorInvalidRequest, AWSIoTErrorThrottling, AWSIoTErrorUnauthorized, AWSIoTErrorServiceUnavailable, AWSIoTErrorInternalFailure.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/listPolicies:completionHandler:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/listPolicyPrincipals:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Lists the principals associated with the specified policy.&lt;/p&gt;&lt;p&gt;&lt;b&gt;Note:&lt;/b&gt; This API is deprecated. Please use &lt;a&gt;ListTargetsForPolicy&lt;/a&gt; instead.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTListPolicyPrincipalsRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTListPolicyPrincipalsResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSIoTListPolicyPrincipalsResponse*&gt; *)listPolicyPrincipals:(AWSIoTListPolicyPrincipalsRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the ListPolicyPrincipals service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSIoTListPolicyPrincipalsResponse. On failed execution, task.error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorResourceNotFound, AWSIoTErrorInvalidRequest, AWSIoTErrorThrottling, AWSIoTErrorUnauthorized, AWSIoTErrorServiceUnavailable, AWSIoTErrorInternalFailure.</Abstract></ReturnValue>
			<Anchor>//api/name/listPolicyPrincipals:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/listPolicyPrincipals:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Lists the principals associated with the specified policy.&lt;/p&gt;&lt;p&gt;&lt;b&gt;Note:&lt;/b&gt; This API is deprecated. Please use &lt;a&gt;ListTargetsForPolicy&lt;/a&gt; instead.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTListPolicyPrincipalsRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTListPolicyPrincipalsResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)listPolicyPrincipals:(AWSIoTListPolicyPrincipalsRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSIoTListPolicyPrincipalsResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the ListPolicyPrincipals service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorResourceNotFound, AWSIoTErrorInvalidRequest, AWSIoTErrorThrottling, AWSIoTErrorUnauthorized, AWSIoTErrorServiceUnavailable, AWSIoTErrorInternalFailure.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/listPolicyPrincipals:completionHandler:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/listPolicyVersions:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Lists the versions of the specified policy and identifies the default version.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTListPolicyVersionsRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTListPolicyVersionsResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSIoTListPolicyVersionsResponse*&gt; *)listPolicyVersions:(AWSIoTListPolicyVersionsRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the ListPolicyVersions service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSIoTListPolicyVersionsResponse. On failed execution, task.error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorResourceNotFound, AWSIoTErrorInvalidRequest, AWSIoTErrorThrottling, AWSIoTErrorUnauthorized, AWSIoTErrorServiceUnavailable, AWSIoTErrorInternalFailure.</Abstract></ReturnValue>
			<Anchor>//api/name/listPolicyVersions:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/listPolicyVersions:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Lists the versions of the specified policy and identifies the default version.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTListPolicyVersionsRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTListPolicyVersionsResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)listPolicyVersions:(AWSIoTListPolicyVersionsRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSIoTListPolicyVersionsResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the ListPolicyVersions service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorResourceNotFound, AWSIoTErrorInvalidRequest, AWSIoTErrorThrottling, AWSIoTErrorUnauthorized, AWSIoTErrorServiceUnavailable, AWSIoTErrorInternalFailure.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/listPolicyVersions:completionHandler:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/listPrincipalPolicies:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Lists the policies attached to the specified principal. If you use an Cognito identity, the ID must be in AmazonCognito Identity format.&lt;/p&gt;&lt;p&gt;&lt;b&gt;Note:&lt;/b&gt; This API is deprecated. Please use &lt;a&gt;ListAttachedPolicies&lt;/a&gt; instead.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTListPrincipalPoliciesRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTListPrincipalPoliciesResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSIoTListPrincipalPoliciesResponse*&gt; *)listPrincipalPolicies:(AWSIoTListPrincipalPoliciesRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the ListPrincipalPolicies service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSIoTListPrincipalPoliciesResponse. On failed execution, task.error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorResourceNotFound, AWSIoTErrorInvalidRequest, AWSIoTErrorThrottling, AWSIoTErrorUnauthorized, AWSIoTErrorServiceUnavailable, AWSIoTErrorInternalFailure.</Abstract></ReturnValue>
			<Anchor>//api/name/listPrincipalPolicies:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/listPrincipalPolicies:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Lists the policies attached to the specified principal. If you use an Cognito identity, the ID must be in AmazonCognito Identity format.&lt;/p&gt;&lt;p&gt;&lt;b&gt;Note:&lt;/b&gt; This API is deprecated. Please use &lt;a&gt;ListAttachedPolicies&lt;/a&gt; instead.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTListPrincipalPoliciesRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTListPrincipalPoliciesResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)listPrincipalPolicies:(AWSIoTListPrincipalPoliciesRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSIoTListPrincipalPoliciesResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the ListPrincipalPolicies service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorResourceNotFound, AWSIoTErrorInvalidRequest, AWSIoTErrorThrottling, AWSIoTErrorUnauthorized, AWSIoTErrorServiceUnavailable, AWSIoTErrorInternalFailure.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/listPrincipalPolicies:completionHandler:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/listPrincipalThings:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Lists the things associated with the specified principal.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTListPrincipalThingsRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTListPrincipalThingsResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSIoTListPrincipalThingsResponse*&gt; *)listPrincipalThings:(AWSIoTListPrincipalThingsRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the ListPrincipalThings service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSIoTListPrincipalThingsResponse. On failed execution, task.error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorInvalidRequest, AWSIoTErrorThrottling, AWSIoTErrorUnauthorized, AWSIoTErrorServiceUnavailable, AWSIoTErrorInternalFailure, AWSIoTErrorResourceNotFound.</Abstract></ReturnValue>
			<Anchor>//api/name/listPrincipalThings:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/listPrincipalThings:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Lists the things associated with the specified principal.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTListPrincipalThingsRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTListPrincipalThingsResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)listPrincipalThings:(AWSIoTListPrincipalThingsRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSIoTListPrincipalThingsResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the ListPrincipalThings service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorInvalidRequest, AWSIoTErrorThrottling, AWSIoTErrorUnauthorized, AWSIoTErrorServiceUnavailable, AWSIoTErrorInternalFailure, AWSIoTErrorResourceNotFound.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/listPrincipalThings:completionHandler:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/listRoleAliases:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Lists the role aliases registered in your account.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTListRoleAliasesRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTListRoleAliasesResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSIoTListRoleAliasesResponse*&gt; *)listRoleAliases:(AWSIoTListRoleAliasesRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the ListRoleAliases service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSIoTListRoleAliasesResponse. On failed execution, task.error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorInvalidRequest, AWSIoTErrorThrottling, AWSIoTErrorUnauthorized, AWSIoTErrorServiceUnavailable, AWSIoTErrorInternalFailure.</Abstract></ReturnValue>
			<Anchor>//api/name/listRoleAliases:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/listRoleAliases:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Lists the role aliases registered in your account.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTListRoleAliasesRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTListRoleAliasesResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)listRoleAliases:(AWSIoTListRoleAliasesRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSIoTListRoleAliasesResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the ListRoleAliases service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorInvalidRequest, AWSIoTErrorThrottling, AWSIoTErrorUnauthorized, AWSIoTErrorServiceUnavailable, AWSIoTErrorInternalFailure.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/listRoleAliases:completionHandler:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/listStreams:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Lists all of the streams in your AWS account.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTListStreamsRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTListStreamsResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSIoTListStreamsResponse*&gt; *)listStreams:(AWSIoTListStreamsRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the ListStreams service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSIoTListStreamsResponse. On failed execution, task.error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorInvalidRequest, AWSIoTErrorThrottling, AWSIoTErrorUnauthorized, AWSIoTErrorServiceUnavailable, AWSIoTErrorInternalFailure.</Abstract></ReturnValue>
			<Anchor>//api/name/listStreams:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/listStreams:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Lists all of the streams in your AWS account.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTListStreamsRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTListStreamsResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)listStreams:(AWSIoTListStreamsRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSIoTListStreamsResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the ListStreams service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorInvalidRequest, AWSIoTErrorThrottling, AWSIoTErrorUnauthorized, AWSIoTErrorServiceUnavailable, AWSIoTErrorInternalFailure.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/listStreams:completionHandler:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/listTargetsForPolicy:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;List targets for the specified policy.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTListTargetsForPolicyRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTListTargetsForPolicyResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSIoTListTargetsForPolicyResponse*&gt; *)listTargetsForPolicy:(AWSIoTListTargetsForPolicyRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the ListTargetsForPolicy service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSIoTListTargetsForPolicyResponse. On failed execution, task.error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorResourceNotFound, AWSIoTErrorInvalidRequest, AWSIoTErrorThrottling, AWSIoTErrorUnauthorized, AWSIoTErrorServiceUnavailable, AWSIoTErrorInternalFailure, AWSIoTErrorLimitExceeded.</Abstract></ReturnValue>
			<Anchor>//api/name/listTargetsForPolicy:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/listTargetsForPolicy:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;List targets for the specified policy.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTListTargetsForPolicyRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTListTargetsForPolicyResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)listTargetsForPolicy:(AWSIoTListTargetsForPolicyRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSIoTListTargetsForPolicyResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the ListTargetsForPolicy service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorResourceNotFound, AWSIoTErrorInvalidRequest, AWSIoTErrorThrottling, AWSIoTErrorUnauthorized, AWSIoTErrorServiceUnavailable, AWSIoTErrorInternalFailure, AWSIoTErrorLimitExceeded.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/listTargetsForPolicy:completionHandler:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/listThingGroups:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;List the thing groups in your account.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTListThingGroupsRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTListThingGroupsResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSIoTListThingGroupsResponse*&gt; *)listThingGroups:(AWSIoTListThingGroupsRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the ListThingGroups service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSIoTListThingGroupsResponse. On failed execution, task.error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorInvalidRequest, AWSIoTErrorInternalFailure, AWSIoTErrorResourceNotFound.</Abstract></ReturnValue>
			<Anchor>//api/name/listThingGroups:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/listThingGroups:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;List the thing groups in your account.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTListThingGroupsRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTListThingGroupsResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)listThingGroups:(AWSIoTListThingGroupsRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSIoTListThingGroupsResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the ListThingGroups service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorInvalidRequest, AWSIoTErrorInternalFailure, AWSIoTErrorResourceNotFound.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/listThingGroups:completionHandler:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/listThingGroupsForThing:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;List the thing groups to which the specified thing belongs.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTListThingGroupsForThingRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTListThingGroupsForThingResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSIoTListThingGroupsForThingResponse*&gt; *)listThingGroupsForThing:(AWSIoTListThingGroupsForThingRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the ListThingGroupsForThing service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSIoTListThingGroupsForThingResponse. On failed execution, task.error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorInvalidRequest, AWSIoTErrorInternalFailure, AWSIoTErrorResourceNotFound.</Abstract></ReturnValue>
			<Anchor>//api/name/listThingGroupsForThing:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/listThingGroupsForThing:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;List the thing groups to which the specified thing belongs.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTListThingGroupsForThingRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTListThingGroupsForThingResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)listThingGroupsForThing:(AWSIoTListThingGroupsForThingRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSIoTListThingGroupsForThingResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the ListThingGroupsForThing service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorInvalidRequest, AWSIoTErrorInternalFailure, AWSIoTErrorResourceNotFound.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/listThingGroupsForThing:completionHandler:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/listThingPrincipals:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Lists the principals associated with the specified thing.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTListThingPrincipalsRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTListThingPrincipalsResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSIoTListThingPrincipalsResponse*&gt; *)listThingPrincipals:(AWSIoTListThingPrincipalsRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the ListThingPrincipals service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSIoTListThingPrincipalsResponse. On failed execution, task.error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorInvalidRequest, AWSIoTErrorThrottling, AWSIoTErrorUnauthorized, AWSIoTErrorServiceUnavailable, AWSIoTErrorInternalFailure, AWSIoTErrorResourceNotFound.</Abstract></ReturnValue>
			<Anchor>//api/name/listThingPrincipals:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/listThingPrincipals:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Lists the principals associated with the specified thing.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTListThingPrincipalsRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTListThingPrincipalsResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)listThingPrincipals:(AWSIoTListThingPrincipalsRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSIoTListThingPrincipalsResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the ListThingPrincipals service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorInvalidRequest, AWSIoTErrorThrottling, AWSIoTErrorUnauthorized, AWSIoTErrorServiceUnavailable, AWSIoTErrorInternalFailure, AWSIoTErrorResourceNotFound.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/listThingPrincipals:completionHandler:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/listThingRegistrationTaskReports:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Information about the thing registration tasks.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTListThingRegistrationTaskReportsRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTListThingRegistrationTaskReportsResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSIoTListThingRegistrationTaskReportsResponse*&gt; *)listThingRegistrationTaskReports:(AWSIoTListThingRegistrationTaskReportsRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the ListThingRegistrationTaskReports service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSIoTListThingRegistrationTaskReportsResponse. On failed execution, task.error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorInvalidRequest, AWSIoTErrorThrottling, AWSIoTErrorUnauthorized, AWSIoTErrorInternalFailure.</Abstract></ReturnValue>
			<Anchor>//api/name/listThingRegistrationTaskReports:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/listThingRegistrationTaskReports:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Information about the thing registration tasks.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTListThingRegistrationTaskReportsRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTListThingRegistrationTaskReportsResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)listThingRegistrationTaskReports:(AWSIoTListThingRegistrationTaskReportsRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSIoTListThingRegistrationTaskReportsResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the ListThingRegistrationTaskReports service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorInvalidRequest, AWSIoTErrorThrottling, AWSIoTErrorUnauthorized, AWSIoTErrorInternalFailure.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/listThingRegistrationTaskReports:completionHandler:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/listThingRegistrationTasks:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;List bulk thing provisioning tasks.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTListThingRegistrationTasksRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTListThingRegistrationTasksResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSIoTListThingRegistrationTasksResponse*&gt; *)listThingRegistrationTasks:(AWSIoTListThingRegistrationTasksRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the ListThingRegistrationTasks service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSIoTListThingRegistrationTasksResponse. On failed execution, task.error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorInvalidRequest, AWSIoTErrorThrottling, AWSIoTErrorUnauthorized, AWSIoTErrorInternalFailure.</Abstract></ReturnValue>
			<Anchor>//api/name/listThingRegistrationTasks:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/listThingRegistrationTasks:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;List bulk thing provisioning tasks.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTListThingRegistrationTasksRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTListThingRegistrationTasksResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)listThingRegistrationTasks:(AWSIoTListThingRegistrationTasksRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSIoTListThingRegistrationTasksResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the ListThingRegistrationTasks service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorInvalidRequest, AWSIoTErrorThrottling, AWSIoTErrorUnauthorized, AWSIoTErrorInternalFailure.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/listThingRegistrationTasks:completionHandler:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/listThingTypes:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Lists the existing thing types.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTListThingTypesRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTListThingTypesResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSIoTListThingTypesResponse*&gt; *)listThingTypes:(AWSIoTListThingTypesRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the ListThingTypes service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSIoTListThingTypesResponse. On failed execution, task.error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorInvalidRequest, AWSIoTErrorThrottling, AWSIoTErrorUnauthorized, AWSIoTErrorServiceUnavailable, AWSIoTErrorInternalFailure.</Abstract></ReturnValue>
			<Anchor>//api/name/listThingTypes:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/listThingTypes:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Lists the existing thing types.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTListThingTypesRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTListThingTypesResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)listThingTypes:(AWSIoTListThingTypesRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSIoTListThingTypesResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the ListThingTypes service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorInvalidRequest, AWSIoTErrorThrottling, AWSIoTErrorUnauthorized, AWSIoTErrorServiceUnavailable, AWSIoTErrorInternalFailure.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/listThingTypes:completionHandler:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/listThings:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Lists your things. Use the &lt;b&gt;attributeName&lt;/b&gt; and &lt;b&gt;attributeValue&lt;/b&gt; parameters to filter your things. For example, calling &lt;code&gt;ListThings&lt;/code&gt; with attributeName=Color and attributeValue=Red retrieves all things in the registry that contain an attribute &lt;b&gt;Color&lt;/b&gt; with the value &lt;b&gt;Red&lt;/b&gt;. &lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTListThingsRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTListThingsResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSIoTListThingsResponse*&gt; *)listThings:(AWSIoTListThingsRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the ListThings service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSIoTListThingsResponse. On failed execution, task.error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorInvalidRequest, AWSIoTErrorThrottling, AWSIoTErrorUnauthorized, AWSIoTErrorServiceUnavailable, AWSIoTErrorInternalFailure.</Abstract></ReturnValue>
			<Anchor>//api/name/listThings:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/listThings:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Lists your things. Use the &lt;b&gt;attributeName&lt;/b&gt; and &lt;b&gt;attributeValue&lt;/b&gt; parameters to filter your things. For example, calling &lt;code&gt;ListThings&lt;/code&gt; with attributeName=Color and attributeValue=Red retrieves all things in the registry that contain an attribute &lt;b&gt;Color&lt;/b&gt; with the value &lt;b&gt;Red&lt;/b&gt;. &lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTListThingsRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTListThingsResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)listThings:(AWSIoTListThingsRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSIoTListThingsResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the ListThings service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorInvalidRequest, AWSIoTErrorThrottling, AWSIoTErrorUnauthorized, AWSIoTErrorServiceUnavailable, AWSIoTErrorInternalFailure.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/listThings:completionHandler:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/listThingsInThingGroup:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Lists the things in the specified group.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTListThingsInThingGroupRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTListThingsInThingGroupResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSIoTListThingsInThingGroupResponse*&gt; *)listThingsInThingGroup:(AWSIoTListThingsInThingGroupRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the ListThingsInThingGroup service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSIoTListThingsInThingGroupResponse. On failed execution, task.error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorInvalidRequest, AWSIoTErrorInternalFailure, AWSIoTErrorResourceNotFound.</Abstract></ReturnValue>
			<Anchor>//api/name/listThingsInThingGroup:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/listThingsInThingGroup:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Lists the things in the specified group.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTListThingsInThingGroupRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTListThingsInThingGroupResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)listThingsInThingGroup:(AWSIoTListThingsInThingGroupRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSIoTListThingsInThingGroupResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the ListThingsInThingGroup service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorInvalidRequest, AWSIoTErrorInternalFailure, AWSIoTErrorResourceNotFound.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/listThingsInThingGroup:completionHandler:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/listTopicRules:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Lists the rules for the specific topic.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTListTopicRulesRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTListTopicRulesResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSIoTListTopicRulesResponse*&gt; *)listTopicRules:(AWSIoTListTopicRulesRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the ListTopicRules service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSIoTListTopicRulesResponse. On failed execution, task.error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorInternal, AWSIoTErrorInvalidRequest, AWSIoTErrorServiceUnavailable.</Abstract></ReturnValue>
			<Anchor>//api/name/listTopicRules:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/listTopicRules:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Lists the rules for the specific topic.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTListTopicRulesRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTListTopicRulesResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)listTopicRules:(AWSIoTListTopicRulesRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSIoTListTopicRulesResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the ListTopicRules service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorInternal, AWSIoTErrorInvalidRequest, AWSIoTErrorServiceUnavailable.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/listTopicRules:completionHandler:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/listV2LoggingLevels:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Lists logging levels.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTListV2LoggingLevelsRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTListV2LoggingLevelsResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSIoTListV2LoggingLevelsResponse*&gt; *)listV2LoggingLevels:(AWSIoTListV2LoggingLevelsRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the ListV2LoggingLevels service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSIoTListV2LoggingLevelsResponse. On failed execution, task.error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorInternal, AWSIoTErrorNotConfigured, AWSIoTErrorInvalidRequest, AWSIoTErrorServiceUnavailable.</Abstract></ReturnValue>
			<Anchor>//api/name/listV2LoggingLevels:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/listV2LoggingLevels:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Lists logging levels.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTListV2LoggingLevelsRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTListV2LoggingLevelsResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)listV2LoggingLevels:(AWSIoTListV2LoggingLevelsRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSIoTListV2LoggingLevelsResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the ListV2LoggingLevels service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorInternal, AWSIoTErrorNotConfigured, AWSIoTErrorInvalidRequest, AWSIoTErrorServiceUnavailable.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/listV2LoggingLevels:completionHandler:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/registerCACertificate:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Registers a CA certificate with AWS IoT. This CA certificate can then be used to sign device certificates, which can be then registered with AWS IoT. You can register up to 10 CA certificates per AWS account that have the same subject field. This enables you to have up to 10 certificate authorities sign your device certificates. If you have more than one CA certificate registered, make sure you pass the CA certificate when you register your device certificates with the RegisterCertificate API.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTRegisterCACertificateRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTRegisterCACertificateResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSIoTRegisterCACertificateResponse*&gt; *)registerCACertificate:(AWSIoTRegisterCACertificateRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the RegisterCACertificate service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSIoTRegisterCACertificateResponse. On failed execution, task.error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorResourceAlreadyExists, AWSIoTErrorRegistrationCodeValidation, AWSIoTErrorInvalidRequest, AWSIoTErrorCertificateValidation, AWSIoTErrorThrottling, AWSIoTErrorLimitExceeded, AWSIoTErrorUnauthorized, AWSIoTErrorServiceUnavailable, AWSIoTErrorInternalFailure.</Abstract></ReturnValue>
			<Anchor>//api/name/registerCACertificate:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/registerCACertificate:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Registers a CA certificate with AWS IoT. This CA certificate can then be used to sign device certificates, which can be then registered with AWS IoT. You can register up to 10 CA certificates per AWS account that have the same subject field. This enables you to have up to 10 certificate authorities sign your device certificates. If you have more than one CA certificate registered, make sure you pass the CA certificate when you register your device certificates with the RegisterCertificate API.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTRegisterCACertificateRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTRegisterCACertificateResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)registerCACertificate:(AWSIoTRegisterCACertificateRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSIoTRegisterCACertificateResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the RegisterCACertificate service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorResourceAlreadyExists, AWSIoTErrorRegistrationCodeValidation, AWSIoTErrorInvalidRequest, AWSIoTErrorCertificateValidation, AWSIoTErrorThrottling, AWSIoTErrorLimitExceeded, AWSIoTErrorUnauthorized, AWSIoTErrorServiceUnavailable, AWSIoTErrorInternalFailure.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/registerCACertificate:completionHandler:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/registerCertificate:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Registers a device certificate with AWS IoT. If you have more than one CA certificate that has the same subject field, you must specify the CA certificate that was used to sign the device certificate being registered.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTRegisterCertificateRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTRegisterCertificateResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSIoTRegisterCertificateResponse*&gt; *)registerCertificate:(AWSIoTRegisterCertificateRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the RegisterCertificate service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSIoTRegisterCertificateResponse. On failed execution, task.error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorResourceAlreadyExists, AWSIoTErrorInvalidRequest, AWSIoTErrorCertificateValidation, AWSIoTErrorCertificateState, AWSIoTErrorCertificateConflict, AWSIoTErrorThrottling, AWSIoTErrorUnauthorized, AWSIoTErrorServiceUnavailable, AWSIoTErrorInternalFailure.</Abstract></ReturnValue>
			<Anchor>//api/name/registerCertificate:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/registerCertificate:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Registers a device certificate with AWS IoT. If you have more than one CA certificate that has the same subject field, you must specify the CA certificate that was used to sign the device certificate being registered.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTRegisterCertificateRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTRegisterCertificateResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)registerCertificate:(AWSIoTRegisterCertificateRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSIoTRegisterCertificateResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the RegisterCertificate service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorResourceAlreadyExists, AWSIoTErrorInvalidRequest, AWSIoTErrorCertificateValidation, AWSIoTErrorCertificateState, AWSIoTErrorCertificateConflict, AWSIoTErrorThrottling, AWSIoTErrorUnauthorized, AWSIoTErrorServiceUnavailable, AWSIoTErrorInternalFailure.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/registerCertificate:completionHandler:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/registerThing:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Provisions a thing.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTRegisterThingRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTRegisterThingResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSIoTRegisterThingResponse*&gt; *)registerThing:(AWSIoTRegisterThingRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the RegisterThing service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSIoTRegisterThingResponse. On failed execution, task.error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorInternalFailure, AWSIoTErrorServiceUnavailable, AWSIoTErrorInvalidRequest, AWSIoTErrorUnauthorized, AWSIoTErrorThrottling, AWSIoTErrorConflictingResourceUpdate, AWSIoTErrorResourceRegistrationFailure.</Abstract></ReturnValue>
			<Anchor>//api/name/registerThing:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/registerThing:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Provisions a thing.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTRegisterThingRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTRegisterThingResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)registerThing:(AWSIoTRegisterThingRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSIoTRegisterThingResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the RegisterThing service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorInternalFailure, AWSIoTErrorServiceUnavailable, AWSIoTErrorInvalidRequest, AWSIoTErrorUnauthorized, AWSIoTErrorThrottling, AWSIoTErrorConflictingResourceUpdate, AWSIoTErrorResourceRegistrationFailure.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/registerThing:completionHandler:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/rejectCertificateTransfer:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Rejects a pending certificate transfer. After AWS IoT rejects a certificate transfer, the certificate status changes from &lt;b&gt;PENDING_TRANSFER&lt;/b&gt; to &lt;b&gt;INACTIVE&lt;/b&gt;.&lt;/p&gt;&lt;p&gt;To check for pending certificate transfers, call &lt;a&gt;ListCertificates&lt;/a&gt; to enumerate your certificates.&lt;/p&gt;&lt;p&gt;This operation can only be called by the transfer destination. After it is called, the certificate will be returned to the source&apos;s account in the INACTIVE state.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTRejectCertificateTransferRequest</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask *)rejectCertificateTransfer:(AWSIoTRejectCertificateTransferRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the RejectCertificateTransfer service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will be nil. On failed execution, task.error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorResourceNotFound, AWSIoTErrorTransferAlreadyCompleted, AWSIoTErrorInvalidRequest, AWSIoTErrorThrottling, AWSIoTErrorUnauthorized, AWSIoTErrorServiceUnavailable, AWSIoTErrorInternalFailure.</Abstract></ReturnValue>
			<Anchor>//api/name/rejectCertificateTransfer:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/rejectCertificateTransfer:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Rejects a pending certificate transfer. After AWS IoT rejects a certificate transfer, the certificate status changes from &lt;b&gt;PENDING_TRANSFER&lt;/b&gt; to &lt;b&gt;INACTIVE&lt;/b&gt;.&lt;/p&gt;&lt;p&gt;To check for pending certificate transfers, call &lt;a&gt;ListCertificates&lt;/a&gt; to enumerate your certificates.&lt;/p&gt;&lt;p&gt;This operation can only be called by the transfer destination. After it is called, the certificate will be returned to the source&apos;s account in the INACTIVE state.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTRejectCertificateTransferRequest</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)rejectCertificateTransfer:(AWSIoTRejectCertificateTransferRequest *)request completionHandler:(void ( ^ _Nullable ) ( NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the RejectCertificateTransfer service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorResourceNotFound, AWSIoTErrorTransferAlreadyCompleted, AWSIoTErrorInvalidRequest, AWSIoTErrorThrottling, AWSIoTErrorUnauthorized, AWSIoTErrorServiceUnavailable, AWSIoTErrorInternalFailure.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/rejectCertificateTransfer:completionHandler:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/removeThingFromThingGroup:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Remove the specified thing from the specified group.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTRemoveThingFromThingGroupRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTRemoveThingFromThingGroupResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSIoTRemoveThingFromThingGroupResponse*&gt; *)removeThingFromThingGroup:(AWSIoTRemoveThingFromThingGroupRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the RemoveThingFromThingGroup service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSIoTRemoveThingFromThingGroupResponse. On failed execution, task.error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorInvalidRequest, AWSIoTErrorThrottling, AWSIoTErrorInternalFailure, AWSIoTErrorResourceNotFound.</Abstract></ReturnValue>
			<Anchor>//api/name/removeThingFromThingGroup:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/removeThingFromThingGroup:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Remove the specified thing from the specified group.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTRemoveThingFromThingGroupRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTRemoveThingFromThingGroupResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)removeThingFromThingGroup:(AWSIoTRemoveThingFromThingGroupRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSIoTRemoveThingFromThingGroupResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the RemoveThingFromThingGroup service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorInvalidRequest, AWSIoTErrorThrottling, AWSIoTErrorInternalFailure, AWSIoTErrorResourceNotFound.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/removeThingFromThingGroup:completionHandler:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/replaceTopicRule:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Replaces the rule. You must specify all parameters for the new rule. Creating rules is an administrator-level action. Any user who has permission to create rules will be able to access data processed by the rule.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTReplaceTopicRuleRequest</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask *)replaceTopicRule:(AWSIoTReplaceTopicRuleRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the ReplaceTopicRule service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will be nil. On failed execution, task.error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorSqlParse, AWSIoTErrorInternal, AWSIoTErrorInvalidRequest, AWSIoTErrorServiceUnavailable, AWSIoTErrorUnauthorized.</Abstract></ReturnValue>
			<Anchor>//api/name/replaceTopicRule:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/replaceTopicRule:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Replaces the rule. You must specify all parameters for the new rule. Creating rules is an administrator-level action. Any user who has permission to create rules will be able to access data processed by the rule.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTReplaceTopicRuleRequest</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)replaceTopicRule:(AWSIoTReplaceTopicRuleRequest *)request completionHandler:(void ( ^ _Nullable ) ( NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the ReplaceTopicRule service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorSqlParse, AWSIoTErrorInternal, AWSIoTErrorInvalidRequest, AWSIoTErrorServiceUnavailable, AWSIoTErrorUnauthorized.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/replaceTopicRule:completionHandler:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/searchIndex:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The query search index.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTSearchIndexRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTSearchIndexResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSIoTSearchIndexResponse*&gt; *)searchIndex:(AWSIoTSearchIndexRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the SearchIndex service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSIoTSearchIndexResponse. On failed execution, task.error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorInvalidRequest, AWSIoTErrorThrottling, AWSIoTErrorUnauthorized, AWSIoTErrorServiceUnavailable, AWSIoTErrorInternalFailure, AWSIoTErrorResourceNotFound, AWSIoTErrorInvalidQuery, AWSIoTErrorIndexNotReady.</Abstract></ReturnValue>
			<Anchor>//api/name/searchIndex:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/searchIndex:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The query search index.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTSearchIndexRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTSearchIndexResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)searchIndex:(AWSIoTSearchIndexRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSIoTSearchIndexResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the SearchIndex service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorInvalidRequest, AWSIoTErrorThrottling, AWSIoTErrorUnauthorized, AWSIoTErrorServiceUnavailable, AWSIoTErrorInternalFailure, AWSIoTErrorResourceNotFound, AWSIoTErrorInvalidQuery, AWSIoTErrorIndexNotReady.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/searchIndex:completionHandler:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/setDefaultAuthorizer:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Sets the default authorizer. This will be used if a websocket connection is made without specifying an authorizer.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTSetDefaultAuthorizerRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTSetDefaultAuthorizerResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSIoTSetDefaultAuthorizerResponse*&gt; *)setDefaultAuthorizer:(AWSIoTSetDefaultAuthorizerRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the SetDefaultAuthorizer service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSIoTSetDefaultAuthorizerResponse. On failed execution, task.error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorResourceNotFound, AWSIoTErrorInvalidRequest, AWSIoTErrorThrottling, AWSIoTErrorUnauthorized, AWSIoTErrorServiceUnavailable, AWSIoTErrorInternalFailure, AWSIoTErrorResourceAlreadyExists.</Abstract></ReturnValue>
			<Anchor>//api/name/setDefaultAuthorizer:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/setDefaultAuthorizer:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Sets the default authorizer. This will be used if a websocket connection is made without specifying an authorizer.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTSetDefaultAuthorizerRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTSetDefaultAuthorizerResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)setDefaultAuthorizer:(AWSIoTSetDefaultAuthorizerRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSIoTSetDefaultAuthorizerResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the SetDefaultAuthorizer service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorResourceNotFound, AWSIoTErrorInvalidRequest, AWSIoTErrorThrottling, AWSIoTErrorUnauthorized, AWSIoTErrorServiceUnavailable, AWSIoTErrorInternalFailure, AWSIoTErrorResourceAlreadyExists.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setDefaultAuthorizer:completionHandler:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/setDefaultPolicyVersion:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Sets the specified version of the specified policy as the policy&apos;s default (operative) version. This action affects all certificates to which the policy is attached. To list the principals the policy is attached to, use the ListPrincipalPolicy API.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTSetDefaultPolicyVersionRequest</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask *)setDefaultPolicyVersion:(AWSIoTSetDefaultPolicyVersionRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the SetDefaultPolicyVersion service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will be nil. On failed execution, task.error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorResourceNotFound, AWSIoTErrorInvalidRequest, AWSIoTErrorThrottling, AWSIoTErrorUnauthorized, AWSIoTErrorServiceUnavailable, AWSIoTErrorInternalFailure.</Abstract></ReturnValue>
			<Anchor>//api/name/setDefaultPolicyVersion:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/setDefaultPolicyVersion:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Sets the specified version of the specified policy as the policy&apos;s default (operative) version. This action affects all certificates to which the policy is attached. To list the principals the policy is attached to, use the ListPrincipalPolicy API.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTSetDefaultPolicyVersionRequest</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)setDefaultPolicyVersion:(AWSIoTSetDefaultPolicyVersionRequest *)request completionHandler:(void ( ^ _Nullable ) ( NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the SetDefaultPolicyVersion service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorResourceNotFound, AWSIoTErrorInvalidRequest, AWSIoTErrorThrottling, AWSIoTErrorUnauthorized, AWSIoTErrorServiceUnavailable, AWSIoTErrorInternalFailure.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setDefaultPolicyVersion:completionHandler:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/setLoggingOptions:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Sets the logging options.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTSetLoggingOptionsRequest</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask *)setLoggingOptions:(AWSIoTSetLoggingOptionsRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the SetLoggingOptions service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will be nil. On failed execution, task.error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorInternal, AWSIoTErrorInvalidRequest, AWSIoTErrorServiceUnavailable.</Abstract></ReturnValue>
			<Anchor>//api/name/setLoggingOptions:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/setLoggingOptions:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Sets the logging options.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTSetLoggingOptionsRequest</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)setLoggingOptions:(AWSIoTSetLoggingOptionsRequest *)request completionHandler:(void ( ^ _Nullable ) ( NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the SetLoggingOptions service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorInternal, AWSIoTErrorInvalidRequest, AWSIoTErrorServiceUnavailable.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setLoggingOptions:completionHandler:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/setV2LoggingLevel:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Sets the logging level.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTSetV2LoggingLevelRequest</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask *)setV2LoggingLevel:(AWSIoTSetV2LoggingLevelRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the SetV2LoggingLevel service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will be nil. On failed execution, task.error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorInternal, AWSIoTErrorNotConfigured, AWSIoTErrorInvalidRequest, AWSIoTErrorServiceUnavailable.</Abstract></ReturnValue>
			<Anchor>//api/name/setV2LoggingLevel:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/setV2LoggingLevel:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Sets the logging level.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTSetV2LoggingLevelRequest</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)setV2LoggingLevel:(AWSIoTSetV2LoggingLevelRequest *)request completionHandler:(void ( ^ _Nullable ) ( NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the SetV2LoggingLevel service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorInternal, AWSIoTErrorNotConfigured, AWSIoTErrorInvalidRequest, AWSIoTErrorServiceUnavailable.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setV2LoggingLevel:completionHandler:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/setV2LoggingOptions:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Sets the logging options for the V2 logging service.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTSetV2LoggingOptionsRequest</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask *)setV2LoggingOptions:(AWSIoTSetV2LoggingOptionsRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the SetV2LoggingOptions service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will be nil. On failed execution, task.error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorInternal, AWSIoTErrorInvalidRequest, AWSIoTErrorServiceUnavailable.</Abstract></ReturnValue>
			<Anchor>//api/name/setV2LoggingOptions:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/setV2LoggingOptions:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Sets the logging options for the V2 logging service.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTSetV2LoggingOptionsRequest</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)setV2LoggingOptions:(AWSIoTSetV2LoggingOptionsRequest *)request completionHandler:(void ( ^ _Nullable ) ( NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the SetV2LoggingOptions service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorInternal, AWSIoTErrorInvalidRequest, AWSIoTErrorServiceUnavailable.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setV2LoggingOptions:completionHandler:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/startThingRegistrationTask:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Creates a bulk thing provisioning task.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTStartThingRegistrationTaskRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTStartThingRegistrationTaskResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSIoTStartThingRegistrationTaskResponse*&gt; *)startThingRegistrationTask:(AWSIoTStartThingRegistrationTaskRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the StartThingRegistrationTask service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSIoTStartThingRegistrationTaskResponse. On failed execution, task.error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorInvalidRequest, AWSIoTErrorThrottling, AWSIoTErrorUnauthorized, AWSIoTErrorInternalFailure.</Abstract></ReturnValue>
			<Anchor>//api/name/startThingRegistrationTask:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/startThingRegistrationTask:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Creates a bulk thing provisioning task.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTStartThingRegistrationTaskRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTStartThingRegistrationTaskResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)startThingRegistrationTask:(AWSIoTStartThingRegistrationTaskRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSIoTStartThingRegistrationTaskResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the StartThingRegistrationTask service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorInvalidRequest, AWSIoTErrorThrottling, AWSIoTErrorUnauthorized, AWSIoTErrorInternalFailure.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/startThingRegistrationTask:completionHandler:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/stopThingRegistrationTask:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Cancels a bulk thing provisioning task.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTStopThingRegistrationTaskRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTStopThingRegistrationTaskResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSIoTStopThingRegistrationTaskResponse*&gt; *)stopThingRegistrationTask:(AWSIoTStopThingRegistrationTaskRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the StopThingRegistrationTask service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSIoTStopThingRegistrationTaskResponse. On failed execution, task.error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorInvalidRequest, AWSIoTErrorThrottling, AWSIoTErrorUnauthorized, AWSIoTErrorInternalFailure, AWSIoTErrorResourceNotFound.</Abstract></ReturnValue>
			<Anchor>//api/name/stopThingRegistrationTask:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/stopThingRegistrationTask:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Cancels a bulk thing provisioning task.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTStopThingRegistrationTaskRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTStopThingRegistrationTaskResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)stopThingRegistrationTask:(AWSIoTStopThingRegistrationTaskRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSIoTStopThingRegistrationTaskResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the StopThingRegistrationTask service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorInvalidRequest, AWSIoTErrorThrottling, AWSIoTErrorUnauthorized, AWSIoTErrorInternalFailure, AWSIoTErrorResourceNotFound.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/stopThingRegistrationTask:completionHandler:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/testAuthorization:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Tests if a specified principal is authorized to perform an AWS IoT action on a specified resource. Use this to test and debug the authorization behavior of devices that connect to the AWS IoT device gateway.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTTestAuthorizationRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTTestAuthorizationResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSIoTTestAuthorizationResponse*&gt; *)testAuthorization:(AWSIoTTestAuthorizationRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the TestAuthorization service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSIoTTestAuthorizationResponse. On failed execution, task.error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorResourceNotFound, AWSIoTErrorInvalidRequest, AWSIoTErrorThrottling, AWSIoTErrorUnauthorized, AWSIoTErrorServiceUnavailable, AWSIoTErrorInternalFailure, AWSIoTErrorLimitExceeded.</Abstract></ReturnValue>
			<Anchor>//api/name/testAuthorization:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/testAuthorization:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Tests if a specified principal is authorized to perform an AWS IoT action on a specified resource. Use this to test and debug the authorization behavior of devices that connect to the AWS IoT device gateway.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTTestAuthorizationRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTTestAuthorizationResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)testAuthorization:(AWSIoTTestAuthorizationRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSIoTTestAuthorizationResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the TestAuthorization service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorResourceNotFound, AWSIoTErrorInvalidRequest, AWSIoTErrorThrottling, AWSIoTErrorUnauthorized, AWSIoTErrorServiceUnavailable, AWSIoTErrorInternalFailure, AWSIoTErrorLimitExceeded.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/testAuthorization:completionHandler:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/testInvokeAuthorizer:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Tests a custom authorization behavior by invoking a specified custom authorizer. Use this to test and debug the custom authorization behavior of devices that connect to the AWS IoT device gateway.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTTestInvokeAuthorizerRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTTestInvokeAuthorizerResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSIoTTestInvokeAuthorizerResponse*&gt; *)testInvokeAuthorizer:(AWSIoTTestInvokeAuthorizerRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the TestInvokeAuthorizer service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSIoTTestInvokeAuthorizerResponse. On failed execution, task.error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorResourceNotFound, AWSIoTErrorInvalidRequest, AWSIoTErrorThrottling, AWSIoTErrorUnauthorized, AWSIoTErrorServiceUnavailable, AWSIoTErrorInternalFailure, AWSIoTErrorInvalidResponse.</Abstract></ReturnValue>
			<Anchor>//api/name/testInvokeAuthorizer:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/testInvokeAuthorizer:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Tests a custom authorization behavior by invoking a specified custom authorizer. Use this to test and debug the custom authorization behavior of devices that connect to the AWS IoT device gateway.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTTestInvokeAuthorizerRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTTestInvokeAuthorizerResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)testInvokeAuthorizer:(AWSIoTTestInvokeAuthorizerRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSIoTTestInvokeAuthorizerResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the TestInvokeAuthorizer service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorResourceNotFound, AWSIoTErrorInvalidRequest, AWSIoTErrorThrottling, AWSIoTErrorUnauthorized, AWSIoTErrorServiceUnavailable, AWSIoTErrorInternalFailure, AWSIoTErrorInvalidResponse.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/testInvokeAuthorizer:completionHandler:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/transferCertificate:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Transfers the specified certificate to the specified AWS account.&lt;/p&gt;&lt;p&gt;You can cancel the transfer until it is acknowledged by the recipient.&lt;/p&gt;&lt;p&gt;No notification is sent to the transfer destination&apos;s account. It is up to the caller to notify the transfer target.&lt;/p&gt;&lt;p&gt;The certificate being transferred must not be in the ACTIVE state. You can use the UpdateCertificate API to deactivate it.&lt;/p&gt;&lt;p&gt;The certificate must not have any policies attached to it. You can use the DetachPrincipalPolicy API to detach them.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTTransferCertificateRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTTransferCertificateResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSIoTTransferCertificateResponse*&gt; *)transferCertificate:(AWSIoTTransferCertificateRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the TransferCertificate service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSIoTTransferCertificateResponse. On failed execution, task.error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorInvalidRequest, AWSIoTErrorResourceNotFound, AWSIoTErrorCertificateState, AWSIoTErrorTransferConflict, AWSIoTErrorThrottling, AWSIoTErrorUnauthorized, AWSIoTErrorServiceUnavailable, AWSIoTErrorInternalFailure.</Abstract></ReturnValue>
			<Anchor>//api/name/transferCertificate:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/transferCertificate:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Transfers the specified certificate to the specified AWS account.&lt;/p&gt;&lt;p&gt;You can cancel the transfer until it is acknowledged by the recipient.&lt;/p&gt;&lt;p&gt;No notification is sent to the transfer destination&apos;s account. It is up to the caller to notify the transfer target.&lt;/p&gt;&lt;p&gt;The certificate being transferred must not be in the ACTIVE state. You can use the UpdateCertificate API to deactivate it.&lt;/p&gt;&lt;p&gt;The certificate must not have any policies attached to it. You can use the DetachPrincipalPolicy API to detach them.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTTransferCertificateRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTTransferCertificateResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)transferCertificate:(AWSIoTTransferCertificateRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSIoTTransferCertificateResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the TransferCertificate service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorInvalidRequest, AWSIoTErrorResourceNotFound, AWSIoTErrorCertificateState, AWSIoTErrorTransferConflict, AWSIoTErrorThrottling, AWSIoTErrorUnauthorized, AWSIoTErrorServiceUnavailable, AWSIoTErrorInternalFailure.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/transferCertificate:completionHandler:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/updateAuthorizer:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Updates an authorizer.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTUpdateAuthorizerRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTUpdateAuthorizerResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSIoTUpdateAuthorizerResponse*&gt; *)updateAuthorizer:(AWSIoTUpdateAuthorizerRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the UpdateAuthorizer service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSIoTUpdateAuthorizerResponse. On failed execution, task.error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorResourceNotFound, AWSIoTErrorInvalidRequest, AWSIoTErrorLimitExceeded, AWSIoTErrorThrottling, AWSIoTErrorUnauthorized, AWSIoTErrorServiceUnavailable, AWSIoTErrorInternalFailure.</Abstract></ReturnValue>
			<Anchor>//api/name/updateAuthorizer:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/updateAuthorizer:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Updates an authorizer.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTUpdateAuthorizerRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTUpdateAuthorizerResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)updateAuthorizer:(AWSIoTUpdateAuthorizerRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSIoTUpdateAuthorizerResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the UpdateAuthorizer service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorResourceNotFound, AWSIoTErrorInvalidRequest, AWSIoTErrorLimitExceeded, AWSIoTErrorThrottling, AWSIoTErrorUnauthorized, AWSIoTErrorServiceUnavailable, AWSIoTErrorInternalFailure.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/updateAuthorizer:completionHandler:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/updateCACertificate:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Updates a registered CA certificate.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTUpdateCACertificateRequest</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask *)updateCACertificate:(AWSIoTUpdateCACertificateRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the UpdateCACertificate service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will be nil. On failed execution, task.error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorResourceNotFound, AWSIoTErrorInvalidRequest, AWSIoTErrorThrottling, AWSIoTErrorUnauthorized, AWSIoTErrorServiceUnavailable, AWSIoTErrorInternalFailure.</Abstract></ReturnValue>
			<Anchor>//api/name/updateCACertificate:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/updateCACertificate:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Updates a registered CA certificate.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTUpdateCACertificateRequest</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)updateCACertificate:(AWSIoTUpdateCACertificateRequest *)request completionHandler:(void ( ^ _Nullable ) ( NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the UpdateCACertificate service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorResourceNotFound, AWSIoTErrorInvalidRequest, AWSIoTErrorThrottling, AWSIoTErrorUnauthorized, AWSIoTErrorServiceUnavailable, AWSIoTErrorInternalFailure.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/updateCACertificate:completionHandler:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/updateCertificate:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Updates the status of the specified certificate. This operation is idempotent.&lt;/p&gt;&lt;p&gt;Moving a certificate from the ACTIVE state (including REVOKED) will not disconnect currently connected devices, but these devices will be unable to reconnect.&lt;/p&gt;&lt;p&gt;The ACTIVE state is required to authenticate devices connecting to AWS IoT using a certificate.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTUpdateCertificateRequest</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask *)updateCertificate:(AWSIoTUpdateCertificateRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the UpdateCertificate service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will be nil. On failed execution, task.error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorResourceNotFound, AWSIoTErrorCertificateState, AWSIoTErrorInvalidRequest, AWSIoTErrorThrottling, AWSIoTErrorUnauthorized, AWSIoTErrorServiceUnavailable, AWSIoTErrorInternalFailure.</Abstract></ReturnValue>
			<Anchor>//api/name/updateCertificate:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/updateCertificate:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Updates the status of the specified certificate. This operation is idempotent.&lt;/p&gt;&lt;p&gt;Moving a certificate from the ACTIVE state (including REVOKED) will not disconnect currently connected devices, but these devices will be unable to reconnect.&lt;/p&gt;&lt;p&gt;The ACTIVE state is required to authenticate devices connecting to AWS IoT using a certificate.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTUpdateCertificateRequest</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)updateCertificate:(AWSIoTUpdateCertificateRequest *)request completionHandler:(void ( ^ _Nullable ) ( NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the UpdateCertificate service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorResourceNotFound, AWSIoTErrorCertificateState, AWSIoTErrorInvalidRequest, AWSIoTErrorThrottling, AWSIoTErrorUnauthorized, AWSIoTErrorServiceUnavailable, AWSIoTErrorInternalFailure.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/updateCertificate:completionHandler:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/updateEventConfigurations:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Updates the event configurations.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTUpdateEventConfigurationsRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTUpdateEventConfigurationsResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSIoTUpdateEventConfigurationsResponse*&gt; *)updateEventConfigurations:(AWSIoTUpdateEventConfigurationsRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the UpdateEventConfigurations service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSIoTUpdateEventConfigurationsResponse. On failed execution, task.error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorInvalidRequest, AWSIoTErrorInternalFailure, AWSIoTErrorThrottling.</Abstract></ReturnValue>
			<Anchor>//api/name/updateEventConfigurations:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/updateEventConfigurations:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Updates the event configurations.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTUpdateEventConfigurationsRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTUpdateEventConfigurationsResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)updateEventConfigurations:(AWSIoTUpdateEventConfigurationsRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSIoTUpdateEventConfigurationsResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the UpdateEventConfigurations service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorInvalidRequest, AWSIoTErrorInternalFailure, AWSIoTErrorThrottling.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/updateEventConfigurations:completionHandler:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/updateIndexingConfiguration:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Updates the search configuration.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTUpdateIndexingConfigurationRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTUpdateIndexingConfigurationResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSIoTUpdateIndexingConfigurationResponse*&gt; *)updateIndexingConfiguration:(AWSIoTUpdateIndexingConfigurationRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the UpdateIndexingConfiguration service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSIoTUpdateIndexingConfigurationResponse. On failed execution, task.error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorInvalidRequest, AWSIoTErrorThrottling, AWSIoTErrorUnauthorized, AWSIoTErrorServiceUnavailable, AWSIoTErrorInternalFailure.</Abstract></ReturnValue>
			<Anchor>//api/name/updateIndexingConfiguration:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/updateIndexingConfiguration:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Updates the search configuration.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTUpdateIndexingConfigurationRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTUpdateIndexingConfigurationResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)updateIndexingConfiguration:(AWSIoTUpdateIndexingConfigurationRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSIoTUpdateIndexingConfigurationResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the UpdateIndexingConfiguration service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorInvalidRequest, AWSIoTErrorThrottling, AWSIoTErrorUnauthorized, AWSIoTErrorServiceUnavailable, AWSIoTErrorInternalFailure.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/updateIndexingConfiguration:completionHandler:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/updateRoleAlias:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Updates a role alias.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTUpdateRoleAliasRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTUpdateRoleAliasResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSIoTUpdateRoleAliasResponse*&gt; *)updateRoleAlias:(AWSIoTUpdateRoleAliasRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the UpdateRoleAlias service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSIoTUpdateRoleAliasResponse. On failed execution, task.error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorResourceNotFound, AWSIoTErrorInvalidRequest, AWSIoTErrorThrottling, AWSIoTErrorUnauthorized, AWSIoTErrorServiceUnavailable, AWSIoTErrorInternalFailure.</Abstract></ReturnValue>
			<Anchor>//api/name/updateRoleAlias:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/updateRoleAlias:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Updates a role alias.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTUpdateRoleAliasRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTUpdateRoleAliasResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)updateRoleAlias:(AWSIoTUpdateRoleAliasRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSIoTUpdateRoleAliasResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the UpdateRoleAlias service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorResourceNotFound, AWSIoTErrorInvalidRequest, AWSIoTErrorThrottling, AWSIoTErrorUnauthorized, AWSIoTErrorServiceUnavailable, AWSIoTErrorInternalFailure.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/updateRoleAlias:completionHandler:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/updateStream:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Updates an existing stream. The stream version will be incremented by one.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTUpdateStreamRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTUpdateStreamResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSIoTUpdateStreamResponse*&gt; *)updateStream:(AWSIoTUpdateStreamRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the UpdateStream service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSIoTUpdateStreamResponse. On failed execution, task.error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorInvalidRequest, AWSIoTErrorResourceNotFound, AWSIoTErrorThrottling, AWSIoTErrorUnauthorized, AWSIoTErrorServiceUnavailable, AWSIoTErrorInternalFailure.</Abstract></ReturnValue>
			<Anchor>//api/name/updateStream:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/updateStream:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Updates an existing stream. The stream version will be incremented by one.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTUpdateStreamRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTUpdateStreamResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)updateStream:(AWSIoTUpdateStreamRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSIoTUpdateStreamResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the UpdateStream service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorInvalidRequest, AWSIoTErrorResourceNotFound, AWSIoTErrorThrottling, AWSIoTErrorUnauthorized, AWSIoTErrorServiceUnavailable, AWSIoTErrorInternalFailure.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/updateStream:completionHandler:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/updateThing:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Updates the data for a thing.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTUpdateThingRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTUpdateThingResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSIoTUpdateThingResponse*&gt; *)updateThing:(AWSIoTUpdateThingRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the UpdateThing service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSIoTUpdateThingResponse. On failed execution, task.error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorInvalidRequest, AWSIoTErrorVersionConflict, AWSIoTErrorThrottling, AWSIoTErrorUnauthorized, AWSIoTErrorServiceUnavailable, AWSIoTErrorInternalFailure, AWSIoTErrorResourceNotFound.</Abstract></ReturnValue>
			<Anchor>//api/name/updateThing:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/updateThing:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Updates the data for a thing.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTUpdateThingRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTUpdateThingResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)updateThing:(AWSIoTUpdateThingRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSIoTUpdateThingResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the UpdateThing service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorInvalidRequest, AWSIoTErrorVersionConflict, AWSIoTErrorThrottling, AWSIoTErrorUnauthorized, AWSIoTErrorServiceUnavailable, AWSIoTErrorInternalFailure, AWSIoTErrorResourceNotFound.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/updateThing:completionHandler:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/updateThingGroup:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Update a thing group.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTUpdateThingGroupRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTUpdateThingGroupResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSIoTUpdateThingGroupResponse*&gt; *)updateThingGroup:(AWSIoTUpdateThingGroupRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the UpdateThingGroup service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSIoTUpdateThingGroupResponse. On failed execution, task.error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorInvalidRequest, AWSIoTErrorVersionConflict, AWSIoTErrorThrottling, AWSIoTErrorInternalFailure, AWSIoTErrorResourceNotFound.</Abstract></ReturnValue>
			<Anchor>//api/name/updateThingGroup:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/updateThingGroup:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Update a thing group.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTUpdateThingGroupRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTUpdateThingGroupResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)updateThingGroup:(AWSIoTUpdateThingGroupRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSIoTUpdateThingGroupResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the UpdateThingGroup service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorInvalidRequest, AWSIoTErrorVersionConflict, AWSIoTErrorThrottling, AWSIoTErrorInternalFailure, AWSIoTErrorResourceNotFound.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/updateThingGroup:completionHandler:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/updateThingGroupsForThing:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Updates the groups to which the thing belongs.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTUpdateThingGroupsForThingRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTUpdateThingGroupsForThingResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSIoTUpdateThingGroupsForThingResponse*&gt; *)updateThingGroupsForThing:(AWSIoTUpdateThingGroupsForThingRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the UpdateThingGroupsForThing service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSIoTUpdateThingGroupsForThingResponse. On failed execution, task.error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorInvalidRequest, AWSIoTErrorThrottling, AWSIoTErrorInternalFailure, AWSIoTErrorResourceNotFound.</Abstract></ReturnValue>
			<Anchor>//api/name/updateThingGroupsForThing:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoT/updateThingGroupsForThing:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Updates the groups to which the thing belongs.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTUpdateThingGroupsForThingRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTUpdateThingGroupsForThingResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)updateThingGroupsForThing:(AWSIoTUpdateThingGroupsForThingRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSIoTUpdateThingGroupsForThingResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the UpdateThingGroupsForThing service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSIoTErrorDomain domain and the following error code: AWSIoTErrorInvalidRequest, AWSIoTErrorThrottling, AWSIoTErrorInternalFailure, AWSIoTErrorResourceNotFound.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/updateThingGroupsForThing:completionHandler:</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
        
        
	</File>
</Tokens>