<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/AWSIoTJob.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/AWSIoTJob</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The &lt;code&gt;Job&lt;/code&gt; object contains details about a job.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTModel.h</DeclaredIn>
            
			
			<NodeRef refid="1008"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoTJob/setComment:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;If the job was updated, describes the reason for the update.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *comment</Declaration>
			
			
			<Anchor>//api/name/comment</Anchor>
            <NodeRef refid="1008"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoTJob/comment</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;If the job was updated, describes the reason for the update.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *comment</Declaration>
			
			
			<Anchor>//api/name/comment</Anchor>
            <NodeRef refid="1008"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSIoTJob/comment</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;If the job was updated, describes the reason for the update.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *comment</Declaration>
			
			
			<Anchor>//api/name/comment</Anchor>
            <NodeRef refid="1008"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoTJob/setCompletedAt:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The time, in milliseconds since the epoch, when the job was completed.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSDate *completedAt</Declaration>
			
			
			<Anchor>//api/name/completedAt</Anchor>
            <NodeRef refid="1008"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoTJob/completedAt</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The time, in milliseconds since the epoch, when the job was completed.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSDate *completedAt</Declaration>
			
			
			<Anchor>//api/name/completedAt</Anchor>
            <NodeRef refid="1008"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSIoTJob/completedAt</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The time, in milliseconds since the epoch, when the job was completed.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSDate *completedAt</Declaration>
			
			
			<Anchor>//api/name/completedAt</Anchor>
            <NodeRef refid="1008"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoTJob/setCreatedAt:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The time, in milliseconds since the epoch, when the job was created.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSDate *createdAt</Declaration>
			
			
			<Anchor>//api/name/createdAt</Anchor>
            <NodeRef refid="1008"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoTJob/createdAt</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The time, in milliseconds since the epoch, when the job was created.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSDate *createdAt</Declaration>
			
			
			<Anchor>//api/name/createdAt</Anchor>
            <NodeRef refid="1008"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSIoTJob/createdAt</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The time, in milliseconds since the epoch, when the job was created.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSDate *createdAt</Declaration>
			
			
			<Anchor>//api/name/createdAt</Anchor>
            <NodeRef refid="1008"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoTJob/setDetail:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;A short text description of the job.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *detail</Declaration>
			
			
			<Anchor>//api/name/detail</Anchor>
            <NodeRef refid="1008"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoTJob/detail</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;A short text description of the job.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *detail</Declaration>
			
			
			<Anchor>//api/name/detail</Anchor>
            <NodeRef refid="1008"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSIoTJob/detail</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;A short text description of the job.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *detail</Declaration>
			
			
			<Anchor>//api/name/detail</Anchor>
            <NodeRef refid="1008"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoTJob/setDocumentParameters:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The parameters specified for the job document.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSDictionary&lt;NSString*NSString*&gt; *documentParameters</Declaration>
			
			
			<Anchor>//api/name/documentParameters</Anchor>
            <NodeRef refid="1008"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoTJob/documentParameters</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The parameters specified for the job document.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSDictionary&lt;NSString*NSString*&gt; *documentParameters</Declaration>
			
			
			<Anchor>//api/name/documentParameters</Anchor>
            <NodeRef refid="1008"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSIoTJob/documentParameters</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The parameters specified for the job document.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSDictionary&lt;NSString*NSString*&gt; *documentParameters</Declaration>
			
			
			<Anchor>//api/name/documentParameters</Anchor>
            <NodeRef refid="1008"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoTJob/setForceCanceled:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Will be &lt;code&gt;true&lt;/code&gt; if the job was canceled with the optional &lt;code&gt;force&lt;/code&gt; parameter set to &lt;code&gt;true&lt;/code&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSNumber *forceCanceled</Declaration>
			
			
			<Anchor>//api/name/forceCanceled</Anchor>
            <NodeRef refid="1008"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoTJob/forceCanceled</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Will be &lt;code&gt;true&lt;/code&gt; if the job was canceled with the optional &lt;code&gt;force&lt;/code&gt; parameter set to &lt;code&gt;true&lt;/code&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSNumber *forceCanceled</Declaration>
			
			
			<Anchor>//api/name/forceCanceled</Anchor>
            <NodeRef refid="1008"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSIoTJob/forceCanceled</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Will be &lt;code&gt;true&lt;/code&gt; if the job was canceled with the optional &lt;code&gt;force&lt;/code&gt; parameter set to &lt;code&gt;true&lt;/code&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSNumber *forceCanceled</Declaration>
			
			
			<Anchor>//api/name/forceCanceled</Anchor>
            <NodeRef refid="1008"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoTJob/setJobArn:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;An ARN identifying the job with format &quot;arn:aws:iot:region:account:job/jobId&quot;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *jobArn</Declaration>
			
			
			<Anchor>//api/name/jobArn</Anchor>
            <NodeRef refid="1008"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoTJob/jobArn</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;An ARN identifying the job with format &quot;arn:aws:iot:region:account:job/jobId&quot;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *jobArn</Declaration>
			
			
			<Anchor>//api/name/jobArn</Anchor>
            <NodeRef refid="1008"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSIoTJob/jobArn</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;An ARN identifying the job with format &quot;arn:aws:iot:region:account:job/jobId&quot;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *jobArn</Declaration>
			
			
			<Anchor>//api/name/jobArn</Anchor>
            <NodeRef refid="1008"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoTJob/setJobExecutionsRolloutConfig:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Allows you to create a staged rollout of a job.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) AWSIoTJobExecutionsRolloutConfig *jobExecutionsRolloutConfig</Declaration>
			
			
			<Anchor>//api/name/jobExecutionsRolloutConfig</Anchor>
            <NodeRef refid="1008"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoTJob/jobExecutionsRolloutConfig</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Allows you to create a staged rollout of a job.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) AWSIoTJobExecutionsRolloutConfig *jobExecutionsRolloutConfig</Declaration>
			
			
			<Anchor>//api/name/jobExecutionsRolloutConfig</Anchor>
            <NodeRef refid="1008"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSIoTJob/jobExecutionsRolloutConfig</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Allows you to create a staged rollout of a job.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) AWSIoTJobExecutionsRolloutConfig *jobExecutionsRolloutConfig</Declaration>
			
			
			<Anchor>//api/name/jobExecutionsRolloutConfig</Anchor>
            <NodeRef refid="1008"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoTJob/setJobId:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The unique identifier you assigned to this job when it was created.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *jobId</Declaration>
			
			
			<Anchor>//api/name/jobId</Anchor>
            <NodeRef refid="1008"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoTJob/jobId</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The unique identifier you assigned to this job when it was created.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *jobId</Declaration>
			
			
			<Anchor>//api/name/jobId</Anchor>
            <NodeRef refid="1008"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSIoTJob/jobId</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The unique identifier you assigned to this job when it was created.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *jobId</Declaration>
			
			
			<Anchor>//api/name/jobId</Anchor>
            <NodeRef refid="1008"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoTJob/setJobProcessDetails:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Details about the job process.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) AWSIoTJobProcessDetails *jobProcessDetails</Declaration>
			
			
			<Anchor>//api/name/jobProcessDetails</Anchor>
            <NodeRef refid="1008"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoTJob/jobProcessDetails</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Details about the job process.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) AWSIoTJobProcessDetails *jobProcessDetails</Declaration>
			
			
			<Anchor>//api/name/jobProcessDetails</Anchor>
            <NodeRef refid="1008"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSIoTJob/jobProcessDetails</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Details about the job process.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) AWSIoTJobProcessDetails *jobProcessDetails</Declaration>
			
			
			<Anchor>//api/name/jobProcessDetails</Anchor>
            <NodeRef refid="1008"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoTJob/setLastUpdatedAt:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The time, in milliseconds since the epoch, when the job was last updated.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSDate *lastUpdatedAt</Declaration>
			
			
			<Anchor>//api/name/lastUpdatedAt</Anchor>
            <NodeRef refid="1008"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoTJob/lastUpdatedAt</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The time, in milliseconds since the epoch, when the job was last updated.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSDate *lastUpdatedAt</Declaration>
			
			
			<Anchor>//api/name/lastUpdatedAt</Anchor>
            <NodeRef refid="1008"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSIoTJob/lastUpdatedAt</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The time, in milliseconds since the epoch, when the job was last updated.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSDate *lastUpdatedAt</Declaration>
			
			
			<Anchor>//api/name/lastUpdatedAt</Anchor>
            <NodeRef refid="1008"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoTJob/setPresignedUrlConfig:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Configuration for pre-signed S3 URLs.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) AWSIoTPresignedUrlConfig *presignedUrlConfig</Declaration>
			
			
			<Anchor>//api/name/presignedUrlConfig</Anchor>
            <NodeRef refid="1008"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoTJob/presignedUrlConfig</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Configuration for pre-signed S3 URLs.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) AWSIoTPresignedUrlConfig *presignedUrlConfig</Declaration>
			
			
			<Anchor>//api/name/presignedUrlConfig</Anchor>
            <NodeRef refid="1008"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSIoTJob/presignedUrlConfig</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Configuration for pre-signed S3 URLs.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) AWSIoTPresignedUrlConfig *presignedUrlConfig</Declaration>
			
			
			<Anchor>//api/name/presignedUrlConfig</Anchor>
            <NodeRef refid="1008"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoTJob/setStatus:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The status of the job, one of &lt;code&gt;IN_PROGRESS&lt;/code&gt;, &lt;code&gt;CANCELED&lt;/code&gt;, or &lt;code&gt;COMPLETED&lt;/code&gt;. &lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) AWSIoTJobStatus status</Declaration>
			
			
			<Anchor>//api/name/status</Anchor>
            <NodeRef refid="1008"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoTJob/status</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The status of the job, one of &lt;code&gt;IN_PROGRESS&lt;/code&gt;, &lt;code&gt;CANCELED&lt;/code&gt;, or &lt;code&gt;COMPLETED&lt;/code&gt;. &lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) AWSIoTJobStatus status</Declaration>
			
			
			<Anchor>//api/name/status</Anchor>
            <NodeRef refid="1008"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSIoTJob/status</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The status of the job, one of &lt;code&gt;IN_PROGRESS&lt;/code&gt;, &lt;code&gt;CANCELED&lt;/code&gt;, or &lt;code&gt;COMPLETED&lt;/code&gt;. &lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) AWSIoTJobStatus status</Declaration>
			
			
			<Anchor>//api/name/status</Anchor>
            <NodeRef refid="1008"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoTJob/setTargetSelection:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Specifies whether the job will continue to run (CONTINUOUS), or will be complete after all those things specified as targets have completed the job (SNAPSHOT). If continuous, the job may also be run on a thing when a change is detected in a target. For example, a job will run on a device when the thing representing the device is added to a target group, even after the job was completed by all things originally in the group. &lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) AWSIoTTargetSelection targetSelection</Declaration>
			
			
			<Anchor>//api/name/targetSelection</Anchor>
            <NodeRef refid="1008"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoTJob/targetSelection</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Specifies whether the job will continue to run (CONTINUOUS), or will be complete after all those things specified as targets have completed the job (SNAPSHOT). If continuous, the job may also be run on a thing when a change is detected in a target. For example, a job will run on a device when the thing representing the device is added to a target group, even after the job was completed by all things originally in the group. &lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) AWSIoTTargetSelection targetSelection</Declaration>
			
			
			<Anchor>//api/name/targetSelection</Anchor>
            <NodeRef refid="1008"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSIoTJob/targetSelection</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Specifies whether the job will continue to run (CONTINUOUS), or will be complete after all those things specified as targets have completed the job (SNAPSHOT). If continuous, the job may also be run on a thing when a change is detected in a target. For example, a job will run on a device when the thing representing the device is added to a target group, even after the job was completed by all things originally in the group. &lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) AWSIoTTargetSelection targetSelection</Declaration>
			
			
			<Anchor>//api/name/targetSelection</Anchor>
            <NodeRef refid="1008"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoTJob/setTargets:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;A list of IoT things and thing groups to which the job should be sent.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSArray&lt;NSString*&gt; *targets</Declaration>
			
			
			<Anchor>//api/name/targets</Anchor>
            <NodeRef refid="1008"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoTJob/targets</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;A list of IoT things and thing groups to which the job should be sent.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSArray&lt;NSString*&gt; *targets</Declaration>
			
			
			<Anchor>//api/name/targets</Anchor>
            <NodeRef refid="1008"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSIoTJob/targets</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;A list of IoT things and thing groups to which the job should be sent.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSArray&lt;NSString*&gt; *targets</Declaration>
			
			
			<Anchor>//api/name/targets</Anchor>
            <NodeRef refid="1008"/>
		</Token>
		
        
        
	</File>
</Tokens>