<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/AWSKinesisVideoCreateStreamInput.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/AWSKinesisVideoCreateStreamInput</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>AWSKinesisVideoModel.h</DeclaredIn>
            
			
			<NodeRef refid="1286"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSKinesisVideoCreateStreamInput/setDataRetentionInHours:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The number of hours that you want to retain the data in the stream. Kinesis Video Streams retains the data in a data store that is associated with the stream.&lt;/p&gt;&lt;p&gt;The default value is 0, indicating that the stream does not persist data.&lt;/p&gt;&lt;p&gt;When the &lt;code&gt;DataRetentionInHours&lt;/code&gt; value is 0, consumers can still consume the fragments that remain in the service host buffer, which has a retention time limit of 5 minutes and a retention memory limit of 200 MB. Fragments are removed from the buffer when either limit is reached.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSKinesisVideoModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSNumber *dataRetentionInHours</Declaration>
			
			
			<Anchor>//api/name/dataRetentionInHours</Anchor>
            <NodeRef refid="1286"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSKinesisVideoCreateStreamInput/dataRetentionInHours</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The number of hours that you want to retain the data in the stream. Kinesis Video Streams retains the data in a data store that is associated with the stream.&lt;/p&gt;&lt;p&gt;The default value is 0, indicating that the stream does not persist data.&lt;/p&gt;&lt;p&gt;When the &lt;code&gt;DataRetentionInHours&lt;/code&gt; value is 0, consumers can still consume the fragments that remain in the service host buffer, which has a retention time limit of 5 minutes and a retention memory limit of 200 MB. Fragments are removed from the buffer when either limit is reached.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSKinesisVideoModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSNumber *dataRetentionInHours</Declaration>
			
			
			<Anchor>//api/name/dataRetentionInHours</Anchor>
            <NodeRef refid="1286"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSKinesisVideoCreateStreamInput/dataRetentionInHours</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The number of hours that you want to retain the data in the stream. Kinesis Video Streams retains the data in a data store that is associated with the stream.&lt;/p&gt;&lt;p&gt;The default value is 0, indicating that the stream does not persist data.&lt;/p&gt;&lt;p&gt;When the &lt;code&gt;DataRetentionInHours&lt;/code&gt; value is 0, consumers can still consume the fragments that remain in the service host buffer, which has a retention time limit of 5 minutes and a retention memory limit of 200 MB. Fragments are removed from the buffer when either limit is reached.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSKinesisVideoModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSNumber *dataRetentionInHours</Declaration>
			
			
			<Anchor>//api/name/dataRetentionInHours</Anchor>
            <NodeRef refid="1286"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSKinesisVideoCreateStreamInput/setDeviceName:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The name of the device that is writing to the stream. &lt;/p&gt;&lt;note&gt;&lt;p&gt;In the current implementation, Kinesis Video Streams does not use this name.&lt;/p&gt;&lt;/note&gt;</Abstract>
			<DeclaredIn>AWSKinesisVideoModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *deviceName</Declaration>
			
			
			<Anchor>//api/name/deviceName</Anchor>
            <NodeRef refid="1286"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSKinesisVideoCreateStreamInput/deviceName</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The name of the device that is writing to the stream. &lt;/p&gt;&lt;note&gt;&lt;p&gt;In the current implementation, Kinesis Video Streams does not use this name.&lt;/p&gt;&lt;/note&gt;</Abstract>
			<DeclaredIn>AWSKinesisVideoModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *deviceName</Declaration>
			
			
			<Anchor>//api/name/deviceName</Anchor>
            <NodeRef refid="1286"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSKinesisVideoCreateStreamInput/deviceName</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The name of the device that is writing to the stream. &lt;/p&gt;&lt;note&gt;&lt;p&gt;In the current implementation, Kinesis Video Streams does not use this name.&lt;/p&gt;&lt;/note&gt;</Abstract>
			<DeclaredIn>AWSKinesisVideoModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *deviceName</Declaration>
			
			
			<Anchor>//api/name/deviceName</Anchor>
            <NodeRef refid="1286"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSKinesisVideoCreateStreamInput/setKmsKeyId:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The ID of the AWS Key Management Service (AWS KMS) key that you want Kinesis Video Streams to use to encrypt stream data.&lt;/p&gt;&lt;p&gt;If no key ID is specified, the default, Kinesis Video-managed key (&lt;code&gt;aws/kinesisvideo&lt;/code&gt;) is used.&lt;/p&gt;&lt;p&gt; For more information, see DescribeKey. &lt;/p&gt;</Abstract>
			<DeclaredIn>AWSKinesisVideoModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *kmsKeyId</Declaration>
			
			
			<Anchor>//api/name/kmsKeyId</Anchor>
            <NodeRef refid="1286"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSKinesisVideoCreateStreamInput/kmsKeyId</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The ID of the AWS Key Management Service (AWS KMS) key that you want Kinesis Video Streams to use to encrypt stream data.&lt;/p&gt;&lt;p&gt;If no key ID is specified, the default, Kinesis Video-managed key (&lt;code&gt;aws/kinesisvideo&lt;/code&gt;) is used.&lt;/p&gt;&lt;p&gt; For more information, see DescribeKey. &lt;/p&gt;</Abstract>
			<DeclaredIn>AWSKinesisVideoModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *kmsKeyId</Declaration>
			
			
			<Anchor>//api/name/kmsKeyId</Anchor>
            <NodeRef refid="1286"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSKinesisVideoCreateStreamInput/kmsKeyId</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The ID of the AWS Key Management Service (AWS KMS) key that you want Kinesis Video Streams to use to encrypt stream data.&lt;/p&gt;&lt;p&gt;If no key ID is specified, the default, Kinesis Video-managed key (&lt;code&gt;aws/kinesisvideo&lt;/code&gt;) is used.&lt;/p&gt;&lt;p&gt; For more information, see DescribeKey. &lt;/p&gt;</Abstract>
			<DeclaredIn>AWSKinesisVideoModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *kmsKeyId</Declaration>
			
			
			<Anchor>//api/name/kmsKeyId</Anchor>
            <NodeRef refid="1286"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSKinesisVideoCreateStreamInput/setMediaType:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The media type of the stream. Consumers of the stream can use this information when processing the stream. For more information about media types, see Naming Requirements for guidelines.&lt;/p&gt;&lt;p&gt;To play video on the console, the media must be H.264 encoded, and you need to specify this video type in this parameter as &lt;code&gt;video/h264&lt;/code&gt;. &lt;/p&gt;&lt;p&gt;This parameter is optional; the default value is &lt;code&gt;null&lt;/code&gt; (or empty in JSON).&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSKinesisVideoModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *mediaType</Declaration>
			
			
			<Anchor>//api/name/mediaType</Anchor>
            <NodeRef refid="1286"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSKinesisVideoCreateStreamInput/mediaType</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The media type of the stream. Consumers of the stream can use this information when processing the stream. For more information about media types, see Naming Requirements for guidelines.&lt;/p&gt;&lt;p&gt;To play video on the console, the media must be H.264 encoded, and you need to specify this video type in this parameter as &lt;code&gt;video/h264&lt;/code&gt;. &lt;/p&gt;&lt;p&gt;This parameter is optional; the default value is &lt;code&gt;null&lt;/code&gt; (or empty in JSON).&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSKinesisVideoModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *mediaType</Declaration>
			
			
			<Anchor>//api/name/mediaType</Anchor>
            <NodeRef refid="1286"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSKinesisVideoCreateStreamInput/mediaType</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The media type of the stream. Consumers of the stream can use this information when processing the stream. For more information about media types, see Naming Requirements for guidelines.&lt;/p&gt;&lt;p&gt;To play video on the console, the media must be H.264 encoded, and you need to specify this video type in this parameter as &lt;code&gt;video/h264&lt;/code&gt;. &lt;/p&gt;&lt;p&gt;This parameter is optional; the default value is &lt;code&gt;null&lt;/code&gt; (or empty in JSON).&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSKinesisVideoModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *mediaType</Declaration>
			
			
			<Anchor>//api/name/mediaType</Anchor>
            <NodeRef refid="1286"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSKinesisVideoCreateStreamInput/setStreamName:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;A name for the stream that you are creating.&lt;/p&gt;&lt;p&gt;The stream name is an identifier for the stream, and must be unique for each account and region.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSKinesisVideoModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *streamName</Declaration>
			
			
			<Anchor>//api/name/streamName</Anchor>
            <NodeRef refid="1286"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSKinesisVideoCreateStreamInput/streamName</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;A name for the stream that you are creating.&lt;/p&gt;&lt;p&gt;The stream name is an identifier for the stream, and must be unique for each account and region.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSKinesisVideoModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *streamName</Declaration>
			
			
			<Anchor>//api/name/streamName</Anchor>
            <NodeRef refid="1286"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSKinesisVideoCreateStreamInput/streamName</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;A name for the stream that you are creating.&lt;/p&gt;&lt;p&gt;The stream name is an identifier for the stream, and must be unique for each account and region.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSKinesisVideoModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *streamName</Declaration>
			
			
			<Anchor>//api/name/streamName</Anchor>
            <NodeRef refid="1286"/>
		</Token>
		
        
        
	</File>
</Tokens>