<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/AWSKMS.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/AWSKMS</TokenIdentifier>
			<Abstract type="html">&lt;fullname&gt;AWS Key Management Service&lt;/fullname&gt;&lt;p&gt;AWS Key Management Service (AWS KMS) is an encryption and key management web service. This guide describes the AWS KMS operations that you can call programmatically. For general information about AWS KMS, see the Tools for Amazon Web Services.&lt;/p&gt;&lt;/note&gt;&lt;p&gt;We recommend that you use the AWS SDKs to make programmatic API calls to AWS KMS.&lt;/p&gt;&lt;p&gt;Clients must support TLS (Transport Layer Security) 1.0. We recommend TLS 1.2. Clients must also support cipher suites with Perfect Forward Secrecy (PFS) such as Ephemeral Diffie-Hellman (DHE) or Elliptic Curve Ephemeral Diffie-Hellman (ECDHE). Most modern systems such as Java 7 and later support these modes.&lt;/p&gt;&lt;p&gt;&lt;b&gt;Signing Requests&lt;/b&gt;&lt;/p&gt;&lt;p&gt;Requests must be signed by using an access key ID and a secret access key. We strongly recommend that you &lt;i&gt;do not&lt;/i&gt; use your AWS account (root) access key ID and secret key for everyday work with AWS KMS. Instead, use the access key ID and secret access key for an IAM user. You can also use the AWS Security Token Service to generate temporary security credentials that you can use to sign requests.&lt;/p&gt;&lt;p&gt;All AWS KMS operations require Signature Version 4 Signing Process - This set of topics walks you through the process of signing a request using an access key ID and a secret access key.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;b&gt;Commonly Used API Operations&lt;/b&gt;&lt;/p&gt;&lt;p&gt;Of the API operations discussed in this guide, the following will prove the most useful for most applications. You will likely perform operations other than these, such as creating keys and assigning policies, by using the console.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;&lt;a&gt;Encrypt&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;a&gt;Decrypt&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;a&gt;GenerateDataKey&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;a&gt;GenerateDataKeyWithoutPlaintext&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;</Abstract>
			<DeclaredIn>AWSKMSService.h</DeclaredIn>
            
			
			<NodeRef refid="1162"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSKMS/setConfiguration:</TokenIdentifier>
			<Abstract type="html">The service configuration used to instantiate this service client.</Abstract>
			<DeclaredIn>AWSKMSService.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong, readonly) AWSServiceConfiguration *configuration</Declaration>
			
			
			<Anchor>//api/name/configuration</Anchor>
            <NodeRef refid="1162"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSKMS/configuration</TokenIdentifier>
			<Abstract type="html">The service configuration used to instantiate this service client.</Abstract>
			<DeclaredIn>AWSKMSService.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong, readonly) AWSServiceConfiguration *configuration</Declaration>
			
			
			<Anchor>//api/name/configuration</Anchor>
            <NodeRef refid="1162"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSKMS/configuration</TokenIdentifier>
			<Abstract type="html">The service configuration used to instantiate this service client.</Abstract>
			<DeclaredIn>AWSKMSService.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong, readonly) AWSServiceConfiguration *configuration</Declaration>
			
			
			<Anchor>//api/name/configuration</Anchor>
            <NodeRef refid="1162"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/AWSKMS/defaultKMS</TokenIdentifier>
			<Abstract type="html">Returns the singleton service client. If the singleton object does not exist, the SDK instantiates the default service client with defaultServiceConfiguration from [AWSServiceManager defaultServiceManager]. The reference to this object is maintained by the SDK, and you do not need to retain it manually.</Abstract>
			<DeclaredIn>AWSKMSService.h</DeclaredIn>
			
			<Declaration>+ (instancetype)defaultKMS</Declaration>
			
			<ReturnValue><Abstract type="html">The default service client.</Abstract></ReturnValue>
			<Anchor>//api/name/defaultKMS</Anchor>
            <NodeRef refid="1162"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/AWSKMS/registerKMSWithConfiguration:forKey:</TokenIdentifier>
			<Abstract type="html">Creates a service client with the given service configuration and registers it for the key.</Abstract>
			<DeclaredIn>AWSKMSService.h</DeclaredIn>
			
			<Declaration>+ (void)registerKMSWithConfiguration:(AWSServiceConfiguration *)configuration forKey:(NSString *)key</Declaration>
			<Parameters>
				<Parameter>
					<Name>configuration</Name>
					<Abstract type="html">A service configuration object.</Abstract>
				</Parameter><Parameter>
					<Name>key</Name>
					<Abstract type="html">A string to identify the service client.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/registerKMSWithConfiguration:forKey:</Anchor>
            <NodeRef refid="1162"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/AWSKMS/KMSForKey:</TokenIdentifier>
			<Abstract type="html">Retrieves the service client associated with the key. You need to call + registerKMSWithConfiguration:forKey: before invoking this method.</Abstract>
			<DeclaredIn>AWSKMSService.h</DeclaredIn>
			
			<Declaration>+ (instancetype)KMSForKey:(NSString *)key</Declaration>
			<Parameters>
				<Parameter>
					<Name>key</Name>
					<Abstract type="html">A string to identify the service client.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of the service client.</Abstract></ReturnValue>
			<Anchor>//api/name/KMSForKey:</Anchor>
            <NodeRef refid="1162"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/AWSKMS/removeKMSForKey:</TokenIdentifier>
			<Abstract type="html">Removes the service client associated with the key and release it.</Abstract>
			<DeclaredIn>AWSKMSService.h</DeclaredIn>
			
			<Declaration>+ (void)removeKMSForKey:(NSString *)key</Declaration>
			<Parameters>
				<Parameter>
					<Name>key</Name>
					<Abstract type="html">A string to identify the service client.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/removeKMSForKey:</Anchor>
            <NodeRef refid="1162"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSKMS/cancelKeyDeletion:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Cancels the deletion of a customer master key (CMK). When this operation is successful, the CMK is set to the &lt;code&gt;Disabled&lt;/code&gt; state. To enable a CMK, use &lt;a&gt;EnableKey&lt;/a&gt;. You cannot perform this operation on a CMK in a different AWS account.&lt;/p&gt;&lt;p&gt;For more information about scheduling and canceling deletion of a CMK, see How Key State Affects Use of a Customer Master Key in the &lt;i&gt;AWS Key Management Service Developer Guide&lt;/i&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSKMSService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSKMSCancelKeyDeletionRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSKMSCancelKeyDeletionResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSKMSCancelKeyDeletionResponse*&gt; *)cancelKeyDeletion:(AWSKMSCancelKeyDeletionRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the CancelKeyDeletion service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSKMSCancelKeyDeletionResponse. On failed execution, task.error may contain an NSError with AWSKMSErrorDomain domain and the following error code: AWSKMSErrorNotFound, AWSKMSErrorInvalidArn, AWSKMSErrorDependencyTimeout, AWSKMSErrorKMSInternal, AWSKMSErrorKMSInvalidState.</Abstract></ReturnValue>
			<Anchor>//api/name/cancelKeyDeletion:</Anchor>
            <NodeRef refid="1162"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSKMS/cancelKeyDeletion:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Cancels the deletion of a customer master key (CMK). When this operation is successful, the CMK is set to the &lt;code&gt;Disabled&lt;/code&gt; state. To enable a CMK, use &lt;a&gt;EnableKey&lt;/a&gt;. You cannot perform this operation on a CMK in a different AWS account.&lt;/p&gt;&lt;p&gt;For more information about scheduling and canceling deletion of a CMK, see How Key State Affects Use of a Customer Master Key in the &lt;i&gt;AWS Key Management Service Developer Guide&lt;/i&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSKMSService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSKMSCancelKeyDeletionRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSKMSCancelKeyDeletionResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)cancelKeyDeletion:(AWSKMSCancelKeyDeletionRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSKMSCancelKeyDeletionResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the CancelKeyDeletion service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSKMSErrorDomain domain and the following error code: AWSKMSErrorNotFound, AWSKMSErrorInvalidArn, AWSKMSErrorDependencyTimeout, AWSKMSErrorKMSInternal, AWSKMSErrorKMSInvalidState.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/cancelKeyDeletion:completionHandler:</Anchor>
            <NodeRef refid="1162"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSKMS/createAlias:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Creates a display name for a customer-managed customer master key (CMK). You can use an alias to identify a CMK in selected operations, such as &lt;a&gt;Encrypt&lt;/a&gt; and &lt;a&gt;GenerateDataKey&lt;/a&gt;. &lt;/p&gt;&lt;p&gt;Each CMK can have multiple aliases, but each alias points to only one CMK. The alias name must be unique in the AWS account and region. To simplify code that runs in multiple regions, use the same alias name, but point it to a different CMK in each region. &lt;/p&gt;&lt;p&gt;Because an alias is not a property of a CMK, you can delete and change the aliases of a CMK without affecting the CMK. Also, aliases do not appear in the response from the &lt;a&gt;DescribeKey&lt;/a&gt; operation. To get the aliases of all CMKs, use the &lt;a&gt;ListAliases&lt;/a&gt; operation.&lt;/p&gt;&lt;p&gt;The alias name can contain only alphanumeric characters, forward slashes (/), underscores (_), and dashes (-). Alias names cannot begin with &lt;b&gt;aws/&lt;/b&gt;. That alias name prefix is reserved for AWS managed CMKs.&lt;/p&gt;&lt;p&gt;The alias and the CMK it is mapped to must be in the same AWS account and the same region. You cannot perform this operation on an alias in a different AWS account.&lt;/p&gt;&lt;p&gt;To map an existing alias to a different CMK, call &lt;a&gt;UpdateAlias&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;The result of this operation varies with the key state of the CMK. For details, see How Key State Affects Use of a Customer Master Key in the &lt;i&gt;AWS Key Management Service Developer Guide&lt;/i&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSKMSService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSKMSCreateAliasRequest</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask *)createAlias:(AWSKMSCreateAliasRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the CreateAlias service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will be nil. On failed execution, task.error may contain an NSError with AWSKMSErrorDomain domain and the following error code: AWSKMSErrorDependencyTimeout, AWSKMSErrorAlreadyExists, AWSKMSErrorNotFound, AWSKMSErrorInvalidAliasName, AWSKMSErrorKMSInternal, AWSKMSErrorLimitExceeded, AWSKMSErrorKMSInvalidState.</Abstract></ReturnValue>
			<Anchor>//api/name/createAlias:</Anchor>
            <NodeRef refid="1162"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSKMS/createAlias:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Creates a display name for a customer-managed customer master key (CMK). You can use an alias to identify a CMK in selected operations, such as &lt;a&gt;Encrypt&lt;/a&gt; and &lt;a&gt;GenerateDataKey&lt;/a&gt;. &lt;/p&gt;&lt;p&gt;Each CMK can have multiple aliases, but each alias points to only one CMK. The alias name must be unique in the AWS account and region. To simplify code that runs in multiple regions, use the same alias name, but point it to a different CMK in each region. &lt;/p&gt;&lt;p&gt;Because an alias is not a property of a CMK, you can delete and change the aliases of a CMK without affecting the CMK. Also, aliases do not appear in the response from the &lt;a&gt;DescribeKey&lt;/a&gt; operation. To get the aliases of all CMKs, use the &lt;a&gt;ListAliases&lt;/a&gt; operation.&lt;/p&gt;&lt;p&gt;The alias name can contain only alphanumeric characters, forward slashes (/), underscores (_), and dashes (-). Alias names cannot begin with &lt;b&gt;aws/&lt;/b&gt;. That alias name prefix is reserved for AWS managed CMKs.&lt;/p&gt;&lt;p&gt;The alias and the CMK it is mapped to must be in the same AWS account and the same region. You cannot perform this operation on an alias in a different AWS account.&lt;/p&gt;&lt;p&gt;To map an existing alias to a different CMK, call &lt;a&gt;UpdateAlias&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;The result of this operation varies with the key state of the CMK. For details, see How Key State Affects Use of a Customer Master Key in the &lt;i&gt;AWS Key Management Service Developer Guide&lt;/i&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSKMSService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSKMSCreateAliasRequest</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)createAlias:(AWSKMSCreateAliasRequest *)request completionHandler:(void ( ^ _Nullable ) ( NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the CreateAlias service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSKMSErrorDomain domain and the following error code: AWSKMSErrorDependencyTimeout, AWSKMSErrorAlreadyExists, AWSKMSErrorNotFound, AWSKMSErrorInvalidAliasName, AWSKMSErrorKMSInternal, AWSKMSErrorLimitExceeded, AWSKMSErrorKMSInvalidState.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/createAlias:completionHandler:</Anchor>
            <NodeRef refid="1162"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSKMS/createGrant:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Adds a grant to a customer master key (CMK). The grant specifies who can use the CMK and under what conditions. When setting permissions, grants are an alternative to key policies. &lt;/p&gt;&lt;p&gt;To perform this operation on a CMK in a different AWS account, specify the key ARN in the value of the &lt;code&gt;KeyId&lt;/code&gt; parameter. For more information about grants, see How Key State Affects Use of a Customer Master Key in the &lt;i&gt;AWS Key Management Service Developer Guide&lt;/i&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSKMSService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSKMSCreateGrantRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSKMSCreateGrantResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSKMSCreateGrantResponse*&gt; *)createGrant:(AWSKMSCreateGrantRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the CreateGrant service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSKMSCreateGrantResponse. On failed execution, task.error may contain an NSError with AWSKMSErrorDomain domain and the following error code: AWSKMSErrorNotFound, AWSKMSErrorDisabled, AWSKMSErrorDependencyTimeout, AWSKMSErrorInvalidArn, AWSKMSErrorKMSInternal, AWSKMSErrorInvalidGrantToken, AWSKMSErrorLimitExceeded, AWSKMSErrorKMSInvalidState.</Abstract></ReturnValue>
			<Anchor>//api/name/createGrant:</Anchor>
            <NodeRef refid="1162"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSKMS/createGrant:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Adds a grant to a customer master key (CMK). The grant specifies who can use the CMK and under what conditions. When setting permissions, grants are an alternative to key policies. &lt;/p&gt;&lt;p&gt;To perform this operation on a CMK in a different AWS account, specify the key ARN in the value of the &lt;code&gt;KeyId&lt;/code&gt; parameter. For more information about grants, see How Key State Affects Use of a Customer Master Key in the &lt;i&gt;AWS Key Management Service Developer Guide&lt;/i&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSKMSService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSKMSCreateGrantRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSKMSCreateGrantResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)createGrant:(AWSKMSCreateGrantRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSKMSCreateGrantResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the CreateGrant service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSKMSErrorDomain domain and the following error code: AWSKMSErrorNotFound, AWSKMSErrorDisabled, AWSKMSErrorDependencyTimeout, AWSKMSErrorInvalidArn, AWSKMSErrorKMSInternal, AWSKMSErrorInvalidGrantToken, AWSKMSErrorLimitExceeded, AWSKMSErrorKMSInvalidState.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/createGrant:completionHandler:</Anchor>
            <NodeRef refid="1162"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSKMS/createKey:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Creates a customer master key (CMK) in the caller&apos;s AWS account.&lt;/p&gt;&lt;p&gt;You can use a CMK to encrypt small amounts of data (4 KiB or less) directly. But CMKs are more commonly used to encrypt data encryption keys (DEKs), which are used to encrypt raw data. For more information about DEKs and the difference between CMKs and DEKs, see the following:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;The &lt;a&gt;GenerateDataKey&lt;/a&gt; operation&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;AWS Key Management Service Concepts in the &lt;i&gt;AWS Key Management Service Developer Guide&lt;/i&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;You cannot use this operation to create a CMK in a different AWS account.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSKMSService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSKMSCreateKeyRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSKMSCreateKeyResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSKMSCreateKeyResponse*&gt; *)createKey:(AWSKMSCreateKeyRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the CreateKey service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSKMSCreateKeyResponse. On failed execution, task.error may contain an NSError with AWSKMSErrorDomain domain and the following error code: AWSKMSErrorMalformedPolicyDocument, AWSKMSErrorDependencyTimeout, AWSKMSErrorInvalidArn, AWSKMSErrorUnsupportedOperation, AWSKMSErrorKMSInternal, AWSKMSErrorLimitExceeded, AWSKMSErrorTag.</Abstract></ReturnValue>
			<Anchor>//api/name/createKey:</Anchor>
            <NodeRef refid="1162"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSKMS/createKey:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Creates a customer master key (CMK) in the caller&apos;s AWS account.&lt;/p&gt;&lt;p&gt;You can use a CMK to encrypt small amounts of data (4 KiB or less) directly. But CMKs are more commonly used to encrypt data encryption keys (DEKs), which are used to encrypt raw data. For more information about DEKs and the difference between CMKs and DEKs, see the following:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;The &lt;a&gt;GenerateDataKey&lt;/a&gt; operation&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;AWS Key Management Service Concepts in the &lt;i&gt;AWS Key Management Service Developer Guide&lt;/i&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;You cannot use this operation to create a CMK in a different AWS account.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSKMSService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSKMSCreateKeyRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSKMSCreateKeyResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)createKey:(AWSKMSCreateKeyRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSKMSCreateKeyResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the CreateKey service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSKMSErrorDomain domain and the following error code: AWSKMSErrorMalformedPolicyDocument, AWSKMSErrorDependencyTimeout, AWSKMSErrorInvalidArn, AWSKMSErrorUnsupportedOperation, AWSKMSErrorKMSInternal, AWSKMSErrorLimitExceeded, AWSKMSErrorTag.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/createKey:completionHandler:</Anchor>
            <NodeRef refid="1162"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSKMS/decrypt:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Decrypts ciphertext. Ciphertext is plaintext that has been previously encrypted by using any of the following operations:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;&lt;a&gt;GenerateDataKey&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;a&gt;GenerateDataKeyWithoutPlaintext&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;a&gt;Encrypt&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Whenever possible, use key policies to give users permission to call the Decrypt operation on the CMK, instead of IAM policies. Otherwise, you might create an IAM user policy that gives the user Decrypt permission on all CMKs. This user could decrypt ciphertext that was encrypted by CMKs in other accounts if the key policy for the cross-account CMK permits it. If you must use an IAM policy for &lt;code&gt;Decrypt&lt;/code&gt; permissions, limit the user to particular CMKs or particular trusted accounts.&lt;/p&gt;&lt;p&gt;The result of this operation varies with the key state of the CMK. For details, see How Key State Affects Use of a Customer Master Key in the &lt;i&gt;AWS Key Management Service Developer Guide&lt;/i&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSKMSService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSKMSDecryptRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSKMSDecryptResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSKMSDecryptResponse*&gt; *)decrypt:(AWSKMSDecryptRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the Decrypt service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSKMSDecryptResponse. On failed execution, task.error may contain an NSError with AWSKMSErrorDomain domain and the following error code: AWSKMSErrorNotFound, AWSKMSErrorDisabled, AWSKMSErrorInvalidCiphertext, AWSKMSErrorKeyUnavailable, AWSKMSErrorDependencyTimeout, AWSKMSErrorInvalidGrantToken, AWSKMSErrorKMSInternal, AWSKMSErrorKMSInvalidState.</Abstract></ReturnValue>
			<Anchor>//api/name/decrypt:</Anchor>
            <NodeRef refid="1162"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSKMS/decrypt:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Decrypts ciphertext. Ciphertext is plaintext that has been previously encrypted by using any of the following operations:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;&lt;a&gt;GenerateDataKey&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;a&gt;GenerateDataKeyWithoutPlaintext&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;a&gt;Encrypt&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Whenever possible, use key policies to give users permission to call the Decrypt operation on the CMK, instead of IAM policies. Otherwise, you might create an IAM user policy that gives the user Decrypt permission on all CMKs. This user could decrypt ciphertext that was encrypted by CMKs in other accounts if the key policy for the cross-account CMK permits it. If you must use an IAM policy for &lt;code&gt;Decrypt&lt;/code&gt; permissions, limit the user to particular CMKs or particular trusted accounts.&lt;/p&gt;&lt;p&gt;The result of this operation varies with the key state of the CMK. For details, see How Key State Affects Use of a Customer Master Key in the &lt;i&gt;AWS Key Management Service Developer Guide&lt;/i&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSKMSService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSKMSDecryptRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSKMSDecryptResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)decrypt:(AWSKMSDecryptRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSKMSDecryptResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the Decrypt service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSKMSErrorDomain domain and the following error code: AWSKMSErrorNotFound, AWSKMSErrorDisabled, AWSKMSErrorInvalidCiphertext, AWSKMSErrorKeyUnavailable, AWSKMSErrorDependencyTimeout, AWSKMSErrorInvalidGrantToken, AWSKMSErrorKMSInternal, AWSKMSErrorKMSInvalidState.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/decrypt:completionHandler:</Anchor>
            <NodeRef refid="1162"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSKMS/deleteAlias:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Deletes the specified alias. You cannot perform this operation on an alias in a different AWS account. &lt;/p&gt;&lt;p&gt;Because an alias is not a property of a CMK, you can delete and change the aliases of a CMK without affecting the CMK. Also, aliases do not appear in the response from the &lt;a&gt;DescribeKey&lt;/a&gt; operation. To get the aliases of all CMKs, use the &lt;a&gt;ListAliases&lt;/a&gt; operation. &lt;/p&gt;&lt;p&gt;Each CMK can have multiple aliases. To change the alias of a CMK, use &lt;a&gt;DeleteAlias&lt;/a&gt; to delete the current alias and &lt;a&gt;CreateAlias&lt;/a&gt; to create a new alias. To associate an existing alias with a different customer master key (CMK), call &lt;a&gt;UpdateAlias&lt;/a&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSKMSService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSKMSDeleteAliasRequest</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask *)deleteAlias:(AWSKMSDeleteAliasRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DeleteAlias service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will be nil. On failed execution, task.error may contain an NSError with AWSKMSErrorDomain domain and the following error code: AWSKMSErrorDependencyTimeout, AWSKMSErrorNotFound, AWSKMSErrorKMSInternal, AWSKMSErrorKMSInvalidState.</Abstract></ReturnValue>
			<Anchor>//api/name/deleteAlias:</Anchor>
            <NodeRef refid="1162"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSKMS/deleteAlias:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Deletes the specified alias. You cannot perform this operation on an alias in a different AWS account. &lt;/p&gt;&lt;p&gt;Because an alias is not a property of a CMK, you can delete and change the aliases of a CMK without affecting the CMK. Also, aliases do not appear in the response from the &lt;a&gt;DescribeKey&lt;/a&gt; operation. To get the aliases of all CMKs, use the &lt;a&gt;ListAliases&lt;/a&gt; operation. &lt;/p&gt;&lt;p&gt;Each CMK can have multiple aliases. To change the alias of a CMK, use &lt;a&gt;DeleteAlias&lt;/a&gt; to delete the current alias and &lt;a&gt;CreateAlias&lt;/a&gt; to create a new alias. To associate an existing alias with a different customer master key (CMK), call &lt;a&gt;UpdateAlias&lt;/a&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSKMSService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSKMSDeleteAliasRequest</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)deleteAlias:(AWSKMSDeleteAliasRequest *)request completionHandler:(void ( ^ _Nullable ) ( NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DeleteAlias service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSKMSErrorDomain domain and the following error code: AWSKMSErrorDependencyTimeout, AWSKMSErrorNotFound, AWSKMSErrorKMSInternal, AWSKMSErrorKMSInvalidState.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/deleteAlias:completionHandler:</Anchor>
            <NodeRef refid="1162"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSKMS/deleteImportedKeyMaterial:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Deletes key material that you previously imported. This operation makes the specified customer master key (CMK) unusable. For more information about importing key material into AWS KMS, see How Key State Affects Use of a Customer Master Key in the &lt;i&gt;AWS Key Management Service Developer Guide&lt;/i&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSKMSService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSKMSDeleteImportedKeyMaterialRequest</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask *)deleteImportedKeyMaterial:(AWSKMSDeleteImportedKeyMaterialRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DeleteImportedKeyMaterial service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will be nil. On failed execution, task.error may contain an NSError with AWSKMSErrorDomain domain and the following error code: AWSKMSErrorInvalidArn, AWSKMSErrorUnsupportedOperation, AWSKMSErrorDependencyTimeout, AWSKMSErrorNotFound, AWSKMSErrorKMSInternal, AWSKMSErrorKMSInvalidState.</Abstract></ReturnValue>
			<Anchor>//api/name/deleteImportedKeyMaterial:</Anchor>
            <NodeRef refid="1162"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSKMS/deleteImportedKeyMaterial:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Deletes key material that you previously imported. This operation makes the specified customer master key (CMK) unusable. For more information about importing key material into AWS KMS, see How Key State Affects Use of a Customer Master Key in the &lt;i&gt;AWS Key Management Service Developer Guide&lt;/i&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSKMSService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSKMSDeleteImportedKeyMaterialRequest</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)deleteImportedKeyMaterial:(AWSKMSDeleteImportedKeyMaterialRequest *)request completionHandler:(void ( ^ _Nullable ) ( NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DeleteImportedKeyMaterial service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSKMSErrorDomain domain and the following error code: AWSKMSErrorInvalidArn, AWSKMSErrorUnsupportedOperation, AWSKMSErrorDependencyTimeout, AWSKMSErrorNotFound, AWSKMSErrorKMSInternal, AWSKMSErrorKMSInvalidState.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/deleteImportedKeyMaterial:completionHandler:</Anchor>
            <NodeRef refid="1162"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSKMS/describeKey:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Provides detailed information about the specified customer master key (CMK).&lt;/p&gt;&lt;p&gt;You can use &lt;code&gt;DescribeKey&lt;/code&gt; on a predefined AWS alias, that is, an AWS alias with no key ID. When you do, AWS KMS associates the alias with an AWS managed CMK and returns its &lt;code&gt;KeyId&lt;/code&gt; and &lt;code&gt;Arn&lt;/code&gt; in the response.&lt;/p&gt;&lt;p&gt;To perform this operation on a CMK in a different AWS account, specify the key ARN or alias ARN in the value of the KeyId parameter.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSKMSService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSKMSDescribeKeyRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSKMSDescribeKeyResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSKMSDescribeKeyResponse*&gt; *)describeKey:(AWSKMSDescribeKeyRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DescribeKey service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSKMSDescribeKeyResponse. On failed execution, task.error may contain an NSError with AWSKMSErrorDomain domain and the following error code: AWSKMSErrorNotFound, AWSKMSErrorInvalidArn, AWSKMSErrorDependencyTimeout, AWSKMSErrorKMSInternal.</Abstract></ReturnValue>
			<Anchor>//api/name/describeKey:</Anchor>
            <NodeRef refid="1162"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSKMS/describeKey:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Provides detailed information about the specified customer master key (CMK).&lt;/p&gt;&lt;p&gt;You can use &lt;code&gt;DescribeKey&lt;/code&gt; on a predefined AWS alias, that is, an AWS alias with no key ID. When you do, AWS KMS associates the alias with an AWS managed CMK and returns its &lt;code&gt;KeyId&lt;/code&gt; and &lt;code&gt;Arn&lt;/code&gt; in the response.&lt;/p&gt;&lt;p&gt;To perform this operation on a CMK in a different AWS account, specify the key ARN or alias ARN in the value of the KeyId parameter.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSKMSService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSKMSDescribeKeyRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSKMSDescribeKeyResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)describeKey:(AWSKMSDescribeKeyRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSKMSDescribeKeyResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DescribeKey service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSKMSErrorDomain domain and the following error code: AWSKMSErrorNotFound, AWSKMSErrorInvalidArn, AWSKMSErrorDependencyTimeout, AWSKMSErrorKMSInternal.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/describeKey:completionHandler:</Anchor>
            <NodeRef refid="1162"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSKMS/disableKey:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Sets the state of a customer master key (CMK) to disabled, thereby preventing its use for cryptographic operations. You cannot perform this operation on a CMK in a different AWS account.&lt;/p&gt;&lt;p&gt;For more information about how key state affects the use of a CMK, see How Key State Affects Use of a Customer Master Key in the &lt;i&gt;AWS Key Management Service Developer Guide&lt;/i&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSKMSService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSKMSDisableKeyRequest</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask *)disableKey:(AWSKMSDisableKeyRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DisableKey service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will be nil. On failed execution, task.error may contain an NSError with AWSKMSErrorDomain domain and the following error code: AWSKMSErrorNotFound, AWSKMSErrorInvalidArn, AWSKMSErrorDependencyTimeout, AWSKMSErrorKMSInternal, AWSKMSErrorKMSInvalidState.</Abstract></ReturnValue>
			<Anchor>//api/name/disableKey:</Anchor>
            <NodeRef refid="1162"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSKMS/disableKey:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Sets the state of a customer master key (CMK) to disabled, thereby preventing its use for cryptographic operations. You cannot perform this operation on a CMK in a different AWS account.&lt;/p&gt;&lt;p&gt;For more information about how key state affects the use of a CMK, see How Key State Affects Use of a Customer Master Key in the &lt;i&gt;AWS Key Management Service Developer Guide&lt;/i&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSKMSService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSKMSDisableKeyRequest</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)disableKey:(AWSKMSDisableKeyRequest *)request completionHandler:(void ( ^ _Nullable ) ( NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DisableKey service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSKMSErrorDomain domain and the following error code: AWSKMSErrorNotFound, AWSKMSErrorInvalidArn, AWSKMSErrorDependencyTimeout, AWSKMSErrorKMSInternal, AWSKMSErrorKMSInvalidState.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/disableKey:completionHandler:</Anchor>
            <NodeRef refid="1162"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSKMS/disableKeyRotation:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Disables How Key State Affects Use of a Customer Master Key in the &lt;i&gt;AWS Key Management Service Developer Guide&lt;/i&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSKMSService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSKMSDisableKeyRotationRequest</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask *)disableKeyRotation:(AWSKMSDisableKeyRotationRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DisableKeyRotation service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will be nil. On failed execution, task.error may contain an NSError with AWSKMSErrorDomain domain and the following error code: AWSKMSErrorNotFound, AWSKMSErrorDisabled, AWSKMSErrorInvalidArn, AWSKMSErrorDependencyTimeout, AWSKMSErrorKMSInternal, AWSKMSErrorKMSInvalidState, AWSKMSErrorUnsupportedOperation.</Abstract></ReturnValue>
			<Anchor>//api/name/disableKeyRotation:</Anchor>
            <NodeRef refid="1162"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSKMS/disableKeyRotation:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Disables How Key State Affects Use of a Customer Master Key in the &lt;i&gt;AWS Key Management Service Developer Guide&lt;/i&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSKMSService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSKMSDisableKeyRotationRequest</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)disableKeyRotation:(AWSKMSDisableKeyRotationRequest *)request completionHandler:(void ( ^ _Nullable ) ( NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DisableKeyRotation service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSKMSErrorDomain domain and the following error code: AWSKMSErrorNotFound, AWSKMSErrorDisabled, AWSKMSErrorInvalidArn, AWSKMSErrorDependencyTimeout, AWSKMSErrorKMSInternal, AWSKMSErrorKMSInvalidState, AWSKMSErrorUnsupportedOperation.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/disableKeyRotation:completionHandler:</Anchor>
            <NodeRef refid="1162"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSKMS/enableKey:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Sets the state of a customer master key (CMK) to enabled, thereby permitting its use for cryptographic operations. You cannot perform this operation on a CMK in a different AWS account.&lt;/p&gt;&lt;p&gt;The result of this operation varies with the key state of the CMK. For details, see How Key State Affects Use of a Customer Master Key in the &lt;i&gt;AWS Key Management Service Developer Guide&lt;/i&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSKMSService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSKMSEnableKeyRequest</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask *)enableKey:(AWSKMSEnableKeyRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the EnableKey service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will be nil. On failed execution, task.error may contain an NSError with AWSKMSErrorDomain domain and the following error code: AWSKMSErrorNotFound, AWSKMSErrorInvalidArn, AWSKMSErrorDependencyTimeout, AWSKMSErrorKMSInternal, AWSKMSErrorLimitExceeded, AWSKMSErrorKMSInvalidState.</Abstract></ReturnValue>
			<Anchor>//api/name/enableKey:</Anchor>
            <NodeRef refid="1162"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSKMS/enableKey:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Sets the state of a customer master key (CMK) to enabled, thereby permitting its use for cryptographic operations. You cannot perform this operation on a CMK in a different AWS account.&lt;/p&gt;&lt;p&gt;The result of this operation varies with the key state of the CMK. For details, see How Key State Affects Use of a Customer Master Key in the &lt;i&gt;AWS Key Management Service Developer Guide&lt;/i&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSKMSService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSKMSEnableKeyRequest</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)enableKey:(AWSKMSEnableKeyRequest *)request completionHandler:(void ( ^ _Nullable ) ( NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the EnableKey service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSKMSErrorDomain domain and the following error code: AWSKMSErrorNotFound, AWSKMSErrorInvalidArn, AWSKMSErrorDependencyTimeout, AWSKMSErrorKMSInternal, AWSKMSErrorLimitExceeded, AWSKMSErrorKMSInvalidState.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/enableKey:completionHandler:</Anchor>
            <NodeRef refid="1162"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSKMS/enableKeyRotation:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Enables How Key State Affects Use of a Customer Master Key in the &lt;i&gt;AWS Key Management Service Developer Guide&lt;/i&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSKMSService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSKMSEnableKeyRotationRequest</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask *)enableKeyRotation:(AWSKMSEnableKeyRotationRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the EnableKeyRotation service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will be nil. On failed execution, task.error may contain an NSError with AWSKMSErrorDomain domain and the following error code: AWSKMSErrorNotFound, AWSKMSErrorDisabled, AWSKMSErrorInvalidArn, AWSKMSErrorDependencyTimeout, AWSKMSErrorKMSInternal, AWSKMSErrorKMSInvalidState, AWSKMSErrorUnsupportedOperation.</Abstract></ReturnValue>
			<Anchor>//api/name/enableKeyRotation:</Anchor>
            <NodeRef refid="1162"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSKMS/enableKeyRotation:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Enables How Key State Affects Use of a Customer Master Key in the &lt;i&gt;AWS Key Management Service Developer Guide&lt;/i&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSKMSService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSKMSEnableKeyRotationRequest</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)enableKeyRotation:(AWSKMSEnableKeyRotationRequest *)request completionHandler:(void ( ^ _Nullable ) ( NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the EnableKeyRotation service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSKMSErrorDomain domain and the following error code: AWSKMSErrorNotFound, AWSKMSErrorDisabled, AWSKMSErrorInvalidArn, AWSKMSErrorDependencyTimeout, AWSKMSErrorKMSInternal, AWSKMSErrorKMSInvalidState, AWSKMSErrorUnsupportedOperation.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/enableKeyRotation:completionHandler:</Anchor>
            <NodeRef refid="1162"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSKMS/encrypt:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Encrypts plaintext into ciphertext by using a customer master key (CMK). The &lt;code&gt;Encrypt&lt;/code&gt; operation has two primary use cases:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;You can encrypt up to 4 kilobytes (4096 bytes) of arbitrary data such as an RSA key, a database password, or other sensitive information.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;You can use the &lt;code&gt;Encrypt&lt;/code&gt; operation to move encrypted data from one AWS region to another. In the first region, generate a data key and use the plaintext key to encrypt the data. Then, in the new region, call the &lt;code&gt;Encrypt&lt;/code&gt; method on same plaintext data key. Now, you can safely move the encrypted data and encrypted data key to the new region, and decrypt in the new region when necessary.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;You don&apos;t need use this operation to encrypt a data key within a region. The &lt;a&gt;GenerateDataKey&lt;/a&gt; and &lt;a&gt;GenerateDataKeyWithoutPlaintext&lt;/a&gt; operations return an encrypted data key.&lt;/p&gt;&lt;p&gt;Also, you don&apos;t need to use this operation to encrypt data in your application. You can use the plaintext and encrypted data keys that the &lt;code&gt;GenerateDataKey&lt;/code&gt; operation returns.&lt;/p&gt;&lt;p&gt;The result of this operation varies with the key state of the CMK. For details, see How Key State Affects Use of a Customer Master Key in the &lt;i&gt;AWS Key Management Service Developer Guide&lt;/i&gt;.&lt;/p&gt;&lt;p&gt;To perform this operation on a CMK in a different AWS account, specify the key ARN or alias ARN in the value of the KeyId parameter.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSKMSService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSKMSEncryptRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSKMSEncryptResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSKMSEncryptResponse*&gt; *)encrypt:(AWSKMSEncryptRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the Encrypt service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSKMSEncryptResponse. On failed execution, task.error may contain an NSError with AWSKMSErrorDomain domain and the following error code: AWSKMSErrorNotFound, AWSKMSErrorDisabled, AWSKMSErrorKeyUnavailable, AWSKMSErrorDependencyTimeout, AWSKMSErrorInvalidKeyUsage, AWSKMSErrorInvalidGrantToken, AWSKMSErrorKMSInternal, AWSKMSErrorKMSInvalidState.</Abstract></ReturnValue>
			<Anchor>//api/name/encrypt:</Anchor>
            <NodeRef refid="1162"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSKMS/encrypt:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Encrypts plaintext into ciphertext by using a customer master key (CMK). The &lt;code&gt;Encrypt&lt;/code&gt; operation has two primary use cases:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;You can encrypt up to 4 kilobytes (4096 bytes) of arbitrary data such as an RSA key, a database password, or other sensitive information.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;You can use the &lt;code&gt;Encrypt&lt;/code&gt; operation to move encrypted data from one AWS region to another. In the first region, generate a data key and use the plaintext key to encrypt the data. Then, in the new region, call the &lt;code&gt;Encrypt&lt;/code&gt; method on same plaintext data key. Now, you can safely move the encrypted data and encrypted data key to the new region, and decrypt in the new region when necessary.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;You don&apos;t need use this operation to encrypt a data key within a region. The &lt;a&gt;GenerateDataKey&lt;/a&gt; and &lt;a&gt;GenerateDataKeyWithoutPlaintext&lt;/a&gt; operations return an encrypted data key.&lt;/p&gt;&lt;p&gt;Also, you don&apos;t need to use this operation to encrypt data in your application. You can use the plaintext and encrypted data keys that the &lt;code&gt;GenerateDataKey&lt;/code&gt; operation returns.&lt;/p&gt;&lt;p&gt;The result of this operation varies with the key state of the CMK. For details, see How Key State Affects Use of a Customer Master Key in the &lt;i&gt;AWS Key Management Service Developer Guide&lt;/i&gt;.&lt;/p&gt;&lt;p&gt;To perform this operation on a CMK in a different AWS account, specify the key ARN or alias ARN in the value of the KeyId parameter.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSKMSService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSKMSEncryptRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSKMSEncryptResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)encrypt:(AWSKMSEncryptRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSKMSEncryptResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the Encrypt service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSKMSErrorDomain domain and the following error code: AWSKMSErrorNotFound, AWSKMSErrorDisabled, AWSKMSErrorKeyUnavailable, AWSKMSErrorDependencyTimeout, AWSKMSErrorInvalidKeyUsage, AWSKMSErrorInvalidGrantToken, AWSKMSErrorKMSInternal, AWSKMSErrorKMSInvalidState.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/encrypt:completionHandler:</Anchor>
            <NodeRef refid="1162"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSKMS/generateDataKey:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Returns a data encryption key that you can use in your application to encrypt data locally. &lt;/p&gt;&lt;p&gt;You must specify the customer master key (CMK) under which to generate the data key. You must also specify the length of the data key using either the &lt;code&gt;KeySpec&lt;/code&gt; or &lt;code&gt;NumberOfBytes&lt;/code&gt; field. You must specify one field or the other, but not both. For common key lengths (128-bit and 256-bit symmetric keys), we recommend that you use &lt;code&gt;KeySpec&lt;/code&gt;. To perform this operation on a CMK in a different AWS account, specify the key ARN or alias ARN in the value of the KeyId parameter.&lt;/p&gt;&lt;p&gt;This operation returns a plaintext copy of the data key in the &lt;code&gt;Plaintext&lt;/code&gt; field of the response, and an encrypted copy of the data key in the &lt;code&gt;CiphertextBlob&lt;/code&gt; field. The data key is encrypted under the CMK specified in the &lt;code&gt;KeyId&lt;/code&gt; field of the request. &lt;/p&gt;&lt;p&gt;We recommend that you use the following pattern to encrypt data locally in your application:&lt;/p&gt;&lt;ol&gt;&lt;li&gt;&lt;p&gt;Use this operation (&lt;code&gt;GenerateDataKey&lt;/code&gt;) to get a data encryption key.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Use the plaintext data encryption key (returned in the &lt;code&gt;Plaintext&lt;/code&gt; field of the response) to encrypt data locally, then erase the plaintext data key from memory.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Store the encrypted data key (returned in the &lt;code&gt;CiphertextBlob&lt;/code&gt; field of the response) alongside the locally encrypted data.&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;To decrypt data locally:&lt;/p&gt;&lt;ol&gt;&lt;li&gt;&lt;p&gt;Use the &lt;a&gt;Decrypt&lt;/a&gt; operation to decrypt the encrypted data key into a plaintext copy of the data key.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Use the plaintext data key to decrypt data locally, then erase the plaintext data key from memory.&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;To return only an encrypted copy of the data key, use &lt;a&gt;GenerateDataKeyWithoutPlaintext&lt;/a&gt;. To return a random byte string that is cryptographically secure, use &lt;a&gt;GenerateRandom&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;If you use the optional &lt;code&gt;EncryptionContext&lt;/code&gt; field, you must store at least enough information to be able to reconstruct the full encryption context when you later send the ciphertext to the &lt;a&gt;Decrypt&lt;/a&gt; operation. It is a good practice to choose an encryption context that you can reconstruct on the fly to better secure the ciphertext. For more information, see How Key State Affects Use of a Customer Master Key in the &lt;i&gt;AWS Key Management Service Developer Guide&lt;/i&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSKMSService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSKMSGenerateDataKeyRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSKMSGenerateDataKeyResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSKMSGenerateDataKeyResponse*&gt; *)generateDataKey:(AWSKMSGenerateDataKeyRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the GenerateDataKey service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSKMSGenerateDataKeyResponse. On failed execution, task.error may contain an NSError with AWSKMSErrorDomain domain and the following error code: AWSKMSErrorNotFound, AWSKMSErrorDisabled, AWSKMSErrorKeyUnavailable, AWSKMSErrorDependencyTimeout, AWSKMSErrorInvalidKeyUsage, AWSKMSErrorInvalidGrantToken, AWSKMSErrorKMSInternal, AWSKMSErrorKMSInvalidState.</Abstract></ReturnValue>
			<Anchor>//api/name/generateDataKey:</Anchor>
            <NodeRef refid="1162"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSKMS/generateDataKey:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Returns a data encryption key that you can use in your application to encrypt data locally. &lt;/p&gt;&lt;p&gt;You must specify the customer master key (CMK) under which to generate the data key. You must also specify the length of the data key using either the &lt;code&gt;KeySpec&lt;/code&gt; or &lt;code&gt;NumberOfBytes&lt;/code&gt; field. You must specify one field or the other, but not both. For common key lengths (128-bit and 256-bit symmetric keys), we recommend that you use &lt;code&gt;KeySpec&lt;/code&gt;. To perform this operation on a CMK in a different AWS account, specify the key ARN or alias ARN in the value of the KeyId parameter.&lt;/p&gt;&lt;p&gt;This operation returns a plaintext copy of the data key in the &lt;code&gt;Plaintext&lt;/code&gt; field of the response, and an encrypted copy of the data key in the &lt;code&gt;CiphertextBlob&lt;/code&gt; field. The data key is encrypted under the CMK specified in the &lt;code&gt;KeyId&lt;/code&gt; field of the request. &lt;/p&gt;&lt;p&gt;We recommend that you use the following pattern to encrypt data locally in your application:&lt;/p&gt;&lt;ol&gt;&lt;li&gt;&lt;p&gt;Use this operation (&lt;code&gt;GenerateDataKey&lt;/code&gt;) to get a data encryption key.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Use the plaintext data encryption key (returned in the &lt;code&gt;Plaintext&lt;/code&gt; field of the response) to encrypt data locally, then erase the plaintext data key from memory.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Store the encrypted data key (returned in the &lt;code&gt;CiphertextBlob&lt;/code&gt; field of the response) alongside the locally encrypted data.&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;To decrypt data locally:&lt;/p&gt;&lt;ol&gt;&lt;li&gt;&lt;p&gt;Use the &lt;a&gt;Decrypt&lt;/a&gt; operation to decrypt the encrypted data key into a plaintext copy of the data key.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Use the plaintext data key to decrypt data locally, then erase the plaintext data key from memory.&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;To return only an encrypted copy of the data key, use &lt;a&gt;GenerateDataKeyWithoutPlaintext&lt;/a&gt;. To return a random byte string that is cryptographically secure, use &lt;a&gt;GenerateRandom&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;If you use the optional &lt;code&gt;EncryptionContext&lt;/code&gt; field, you must store at least enough information to be able to reconstruct the full encryption context when you later send the ciphertext to the &lt;a&gt;Decrypt&lt;/a&gt; operation. It is a good practice to choose an encryption context that you can reconstruct on the fly to better secure the ciphertext. For more information, see How Key State Affects Use of a Customer Master Key in the &lt;i&gt;AWS Key Management Service Developer Guide&lt;/i&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSKMSService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSKMSGenerateDataKeyRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSKMSGenerateDataKeyResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)generateDataKey:(AWSKMSGenerateDataKeyRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSKMSGenerateDataKeyResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the GenerateDataKey service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSKMSErrorDomain domain and the following error code: AWSKMSErrorNotFound, AWSKMSErrorDisabled, AWSKMSErrorKeyUnavailable, AWSKMSErrorDependencyTimeout, AWSKMSErrorInvalidKeyUsage, AWSKMSErrorInvalidGrantToken, AWSKMSErrorKMSInternal, AWSKMSErrorKMSInvalidState.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/generateDataKey:completionHandler:</Anchor>
            <NodeRef refid="1162"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSKMS/generateDataKeyWithoutPlaintext:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Returns a data encryption key encrypted under a customer master key (CMK). This operation is identical to &lt;a&gt;GenerateDataKey&lt;/a&gt; but returns only the encrypted copy of the data key. &lt;/p&gt;&lt;p&gt;To perform this operation on a CMK in a different AWS account, specify the key ARN or alias ARN in the value of the KeyId parameter.&lt;/p&gt;&lt;p&gt;This operation is useful in a system that has multiple components with different degrees of trust. For example, consider a system that stores encrypted data in containers. Each container stores the encrypted data and an encrypted copy of the data key. One component of the system, called the &lt;i&gt;control plane&lt;/i&gt;, creates new containers. When it creates a new container, it uses this operation (&lt;code&gt;GenerateDataKeyWithoutPlaintext&lt;/code&gt;) to get an encrypted data key and then stores it in the container. Later, a different component of the system, called the &lt;i&gt;data plane&lt;/i&gt;, puts encrypted data into the containers. To do this, it passes the encrypted data key to the &lt;a&gt;Decrypt&lt;/a&gt; operation. It then uses the returned plaintext data key to encrypt data and finally stores the encrypted data in the container. In this system, the control plane never sees the plaintext data key.&lt;/p&gt;&lt;p&gt;The result of this operation varies with the key state of the CMK. For details, see How Key State Affects Use of a Customer Master Key in the &lt;i&gt;AWS Key Management Service Developer Guide&lt;/i&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSKMSService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSKMSGenerateDataKeyWithoutPlaintextRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSKMSGenerateDataKeyWithoutPlaintextResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSKMSGenerateDataKeyWithoutPlaintextResponse*&gt; *)generateDataKeyWithoutPlaintext:(AWSKMSGenerateDataKeyWithoutPlaintextRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the GenerateDataKeyWithoutPlaintext service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSKMSGenerateDataKeyWithoutPlaintextResponse. On failed execution, task.error may contain an NSError with AWSKMSErrorDomain domain and the following error code: AWSKMSErrorNotFound, AWSKMSErrorDisabled, AWSKMSErrorKeyUnavailable, AWSKMSErrorDependencyTimeout, AWSKMSErrorInvalidKeyUsage, AWSKMSErrorInvalidGrantToken, AWSKMSErrorKMSInternal, AWSKMSErrorKMSInvalidState.</Abstract></ReturnValue>
			<Anchor>//api/name/generateDataKeyWithoutPlaintext:</Anchor>
            <NodeRef refid="1162"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSKMS/generateDataKeyWithoutPlaintext:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Returns a data encryption key encrypted under a customer master key (CMK). This operation is identical to &lt;a&gt;GenerateDataKey&lt;/a&gt; but returns only the encrypted copy of the data key. &lt;/p&gt;&lt;p&gt;To perform this operation on a CMK in a different AWS account, specify the key ARN or alias ARN in the value of the KeyId parameter.&lt;/p&gt;&lt;p&gt;This operation is useful in a system that has multiple components with different degrees of trust. For example, consider a system that stores encrypted data in containers. Each container stores the encrypted data and an encrypted copy of the data key. One component of the system, called the &lt;i&gt;control plane&lt;/i&gt;, creates new containers. When it creates a new container, it uses this operation (&lt;code&gt;GenerateDataKeyWithoutPlaintext&lt;/code&gt;) to get an encrypted data key and then stores it in the container. Later, a different component of the system, called the &lt;i&gt;data plane&lt;/i&gt;, puts encrypted data into the containers. To do this, it passes the encrypted data key to the &lt;a&gt;Decrypt&lt;/a&gt; operation. It then uses the returned plaintext data key to encrypt data and finally stores the encrypted data in the container. In this system, the control plane never sees the plaintext data key.&lt;/p&gt;&lt;p&gt;The result of this operation varies with the key state of the CMK. For details, see How Key State Affects Use of a Customer Master Key in the &lt;i&gt;AWS Key Management Service Developer Guide&lt;/i&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSKMSService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSKMSGenerateDataKeyWithoutPlaintextRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSKMSGenerateDataKeyWithoutPlaintextResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)generateDataKeyWithoutPlaintext:(AWSKMSGenerateDataKeyWithoutPlaintextRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSKMSGenerateDataKeyWithoutPlaintextResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the GenerateDataKeyWithoutPlaintext service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSKMSErrorDomain domain and the following error code: AWSKMSErrorNotFound, AWSKMSErrorDisabled, AWSKMSErrorKeyUnavailable, AWSKMSErrorDependencyTimeout, AWSKMSErrorInvalidKeyUsage, AWSKMSErrorInvalidGrantToken, AWSKMSErrorKMSInternal, AWSKMSErrorKMSInvalidState.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/generateDataKeyWithoutPlaintext:completionHandler:</Anchor>
            <NodeRef refid="1162"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSKMS/generateRandom:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Returns a random byte string that is cryptographically secure.&lt;/p&gt;&lt;p&gt;For more information about entropy and random number generation, see the AWS Key Management Service Cryptographic Details whitepaper.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSKMSService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSKMSGenerateRandomRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSKMSGenerateRandomResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSKMSGenerateRandomResponse*&gt; *)generateRandom:(AWSKMSGenerateRandomRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the GenerateRandom service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSKMSGenerateRandomResponse. On failed execution, task.error may contain an NSError with AWSKMSErrorDomain domain and the following error code: AWSKMSErrorDependencyTimeout, AWSKMSErrorKMSInternal.</Abstract></ReturnValue>
			<Anchor>//api/name/generateRandom:</Anchor>
            <NodeRef refid="1162"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSKMS/generateRandom:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Returns a random byte string that is cryptographically secure.&lt;/p&gt;&lt;p&gt;For more information about entropy and random number generation, see the AWS Key Management Service Cryptographic Details whitepaper.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSKMSService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSKMSGenerateRandomRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSKMSGenerateRandomResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)generateRandom:(AWSKMSGenerateRandomRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSKMSGenerateRandomResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the GenerateRandom service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSKMSErrorDomain domain and the following error code: AWSKMSErrorDependencyTimeout, AWSKMSErrorKMSInternal.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/generateRandom:completionHandler:</Anchor>
            <NodeRef refid="1162"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSKMS/getKeyPolicy:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Gets a key policy attached to the specified customer master key (CMK). You cannot perform this operation on a CMK in a different AWS account.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSKMSService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSKMSGetKeyPolicyRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSKMSGetKeyPolicyResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSKMSGetKeyPolicyResponse*&gt; *)getKeyPolicy:(AWSKMSGetKeyPolicyRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the GetKeyPolicy service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSKMSGetKeyPolicyResponse. On failed execution, task.error may contain an NSError with AWSKMSErrorDomain domain and the following error code: AWSKMSErrorNotFound, AWSKMSErrorInvalidArn, AWSKMSErrorDependencyTimeout, AWSKMSErrorKMSInternal, AWSKMSErrorKMSInvalidState.</Abstract></ReturnValue>
			<Anchor>//api/name/getKeyPolicy:</Anchor>
            <NodeRef refid="1162"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSKMS/getKeyPolicy:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Gets a key policy attached to the specified customer master key (CMK). You cannot perform this operation on a CMK in a different AWS account.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSKMSService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSKMSGetKeyPolicyRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSKMSGetKeyPolicyResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)getKeyPolicy:(AWSKMSGetKeyPolicyRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSKMSGetKeyPolicyResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the GetKeyPolicy service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSKMSErrorDomain domain and the following error code: AWSKMSErrorNotFound, AWSKMSErrorInvalidArn, AWSKMSErrorDependencyTimeout, AWSKMSErrorKMSInternal, AWSKMSErrorKMSInvalidState.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/getKeyPolicy:completionHandler:</Anchor>
            <NodeRef refid="1162"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSKMS/getKeyRotationStatus:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Gets a Boolean value that indicates whether How Key State Affects Use of a Customer Master Key in the &lt;i&gt;AWS Key Management Service Developer Guide&lt;/i&gt;.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;Disabled: The key rotation status does not change when you disable a CMK. However, while the CMK is disabled, AWS KMS does not rotate the backing key.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Pending deletion: While a CMK is pending deletion, its key rotation status is &lt;code&gt;false&lt;/code&gt; and AWS KMS does not rotate the backing key. If you cancel the deletion, the original key rotation status is restored.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;To perform this operation on a CMK in a different AWS account, specify the key ARN in the value of the &lt;code&gt;KeyId&lt;/code&gt; parameter.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSKMSService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSKMSGetKeyRotationStatusRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSKMSGetKeyRotationStatusResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSKMSGetKeyRotationStatusResponse*&gt; *)getKeyRotationStatus:(AWSKMSGetKeyRotationStatusRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the GetKeyRotationStatus service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSKMSGetKeyRotationStatusResponse. On failed execution, task.error may contain an NSError with AWSKMSErrorDomain domain and the following error code: AWSKMSErrorNotFound, AWSKMSErrorInvalidArn, AWSKMSErrorDependencyTimeout, AWSKMSErrorKMSInternal, AWSKMSErrorKMSInvalidState, AWSKMSErrorUnsupportedOperation.</Abstract></ReturnValue>
			<Anchor>//api/name/getKeyRotationStatus:</Anchor>
            <NodeRef refid="1162"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSKMS/getKeyRotationStatus:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Gets a Boolean value that indicates whether How Key State Affects Use of a Customer Master Key in the &lt;i&gt;AWS Key Management Service Developer Guide&lt;/i&gt;.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;Disabled: The key rotation status does not change when you disable a CMK. However, while the CMK is disabled, AWS KMS does not rotate the backing key.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Pending deletion: While a CMK is pending deletion, its key rotation status is &lt;code&gt;false&lt;/code&gt; and AWS KMS does not rotate the backing key. If you cancel the deletion, the original key rotation status is restored.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;To perform this operation on a CMK in a different AWS account, specify the key ARN in the value of the &lt;code&gt;KeyId&lt;/code&gt; parameter.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSKMSService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSKMSGetKeyRotationStatusRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSKMSGetKeyRotationStatusResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)getKeyRotationStatus:(AWSKMSGetKeyRotationStatusRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSKMSGetKeyRotationStatusResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the GetKeyRotationStatus service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSKMSErrorDomain domain and the following error code: AWSKMSErrorNotFound, AWSKMSErrorInvalidArn, AWSKMSErrorDependencyTimeout, AWSKMSErrorKMSInternal, AWSKMSErrorKMSInvalidState, AWSKMSErrorUnsupportedOperation.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/getKeyRotationStatus:completionHandler:</Anchor>
            <NodeRef refid="1162"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSKMS/getParametersForImport:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Returns the items you need in order to import key material into AWS KMS from your existing key management infrastructure. For more information about importing key material into AWS KMS, see How Key State Affects Use of a Customer Master Key in the &lt;i&gt;AWS Key Management Service Developer Guide&lt;/i&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSKMSService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSKMSGetParametersForImportRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSKMSGetParametersForImportResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSKMSGetParametersForImportResponse*&gt; *)getParametersForImport:(AWSKMSGetParametersForImportRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the GetParametersForImport service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSKMSGetParametersForImportResponse. On failed execution, task.error may contain an NSError with AWSKMSErrorDomain domain and the following error code: AWSKMSErrorInvalidArn, AWSKMSErrorUnsupportedOperation, AWSKMSErrorDependencyTimeout, AWSKMSErrorNotFound, AWSKMSErrorKMSInternal, AWSKMSErrorKMSInvalidState.</Abstract></ReturnValue>
			<Anchor>//api/name/getParametersForImport:</Anchor>
            <NodeRef refid="1162"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSKMS/getParametersForImport:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Returns the items you need in order to import key material into AWS KMS from your existing key management infrastructure. For more information about importing key material into AWS KMS, see How Key State Affects Use of a Customer Master Key in the &lt;i&gt;AWS Key Management Service Developer Guide&lt;/i&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSKMSService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSKMSGetParametersForImportRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSKMSGetParametersForImportResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)getParametersForImport:(AWSKMSGetParametersForImportRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSKMSGetParametersForImportResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the GetParametersForImport service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSKMSErrorDomain domain and the following error code: AWSKMSErrorInvalidArn, AWSKMSErrorUnsupportedOperation, AWSKMSErrorDependencyTimeout, AWSKMSErrorNotFound, AWSKMSErrorKMSInternal, AWSKMSErrorKMSInvalidState.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/getParametersForImport:completionHandler:</Anchor>
            <NodeRef refid="1162"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSKMS/importKeyMaterial:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Imports key material into an existing AWS KMS customer master key (CMK) that was created without key material. You cannot perform this operation on a CMK in a different AWS account. For more information about creating CMKs with no key material and then importing key material, see How Key State Affects Use of a Customer Master Key in the &lt;i&gt;AWS Key Management Service Developer Guide&lt;/i&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSKMSService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSKMSImportKeyMaterialRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSKMSImportKeyMaterialResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSKMSImportKeyMaterialResponse*&gt; *)importKeyMaterial:(AWSKMSImportKeyMaterialRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the ImportKeyMaterial service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSKMSImportKeyMaterialResponse. On failed execution, task.error may contain an NSError with AWSKMSErrorDomain domain and the following error code: AWSKMSErrorInvalidArn, AWSKMSErrorUnsupportedOperation, AWSKMSErrorDependencyTimeout, AWSKMSErrorNotFound, AWSKMSErrorKMSInternal, AWSKMSErrorKMSInvalidState, AWSKMSErrorInvalidCiphertext, AWSKMSErrorIncorrectKeyMaterial, AWSKMSErrorExpiredImportToken, AWSKMSErrorInvalidImportToken.</Abstract></ReturnValue>
			<Anchor>//api/name/importKeyMaterial:</Anchor>
            <NodeRef refid="1162"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSKMS/importKeyMaterial:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Imports key material into an existing AWS KMS customer master key (CMK) that was created without key material. You cannot perform this operation on a CMK in a different AWS account. For more information about creating CMKs with no key material and then importing key material, see How Key State Affects Use of a Customer Master Key in the &lt;i&gt;AWS Key Management Service Developer Guide&lt;/i&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSKMSService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSKMSImportKeyMaterialRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSKMSImportKeyMaterialResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)importKeyMaterial:(AWSKMSImportKeyMaterialRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSKMSImportKeyMaterialResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the ImportKeyMaterial service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSKMSErrorDomain domain and the following error code: AWSKMSErrorInvalidArn, AWSKMSErrorUnsupportedOperation, AWSKMSErrorDependencyTimeout, AWSKMSErrorNotFound, AWSKMSErrorKMSInternal, AWSKMSErrorKMSInvalidState, AWSKMSErrorInvalidCiphertext, AWSKMSErrorIncorrectKeyMaterial, AWSKMSErrorExpiredImportToken, AWSKMSErrorInvalidImportToken.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/importKeyMaterial:completionHandler:</Anchor>
            <NodeRef refid="1162"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSKMS/listAliases:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Gets a list of aliases in the caller&apos;s AWS account and region. You cannot list aliases in other accounts. For more information about aliases, see &lt;a&gt;CreateAlias&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;By default, the ListAliases command returns all aliases in the account and region. To get only the aliases that point to a particular customer master key (CMK), use the &lt;code&gt;KeyId&lt;/code&gt; parameter.&lt;/p&gt;&lt;p&gt;The &lt;code&gt;ListAliases&lt;/code&gt; response can include aliases that you created and associated with your customer managed CMKs, and aliases that AWS created and associated with AWS managed CMKs in your account. You can recognize AWS aliases because their names have the format &lt;code&gt;aws/&amp;amp;lt;service-name&amp;amp;gt;&lt;/code&gt;, such as &lt;code&gt;aws/dynamodb&lt;/code&gt;.&lt;/p&gt;&lt;p&gt;The response might also include aliases that have no &lt;code&gt;TargetKeyId&lt;/code&gt; field. These are predefined aliases that AWS has created but has not yet associated with a CMK. Aliases that AWS creates in your account, including predefined aliases, do not count against your AWS KMS aliases limit.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSKMSService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSKMSListAliasesRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSKMSListAliasesResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSKMSListAliasesResponse*&gt; *)listAliases:(AWSKMSListAliasesRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the ListAliases service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSKMSListAliasesResponse. On failed execution, task.error may contain an NSError with AWSKMSErrorDomain domain and the following error code: AWSKMSErrorDependencyTimeout, AWSKMSErrorInvalidMarker, AWSKMSErrorKMSInternal.</Abstract></ReturnValue>
			<Anchor>//api/name/listAliases:</Anchor>
            <NodeRef refid="1162"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSKMS/listAliases:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Gets a list of aliases in the caller&apos;s AWS account and region. You cannot list aliases in other accounts. For more information about aliases, see &lt;a&gt;CreateAlias&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;By default, the ListAliases command returns all aliases in the account and region. To get only the aliases that point to a particular customer master key (CMK), use the &lt;code&gt;KeyId&lt;/code&gt; parameter.&lt;/p&gt;&lt;p&gt;The &lt;code&gt;ListAliases&lt;/code&gt; response can include aliases that you created and associated with your customer managed CMKs, and aliases that AWS created and associated with AWS managed CMKs in your account. You can recognize AWS aliases because their names have the format &lt;code&gt;aws/&amp;amp;lt;service-name&amp;amp;gt;&lt;/code&gt;, such as &lt;code&gt;aws/dynamodb&lt;/code&gt;.&lt;/p&gt;&lt;p&gt;The response might also include aliases that have no &lt;code&gt;TargetKeyId&lt;/code&gt; field. These are predefined aliases that AWS has created but has not yet associated with a CMK. Aliases that AWS creates in your account, including predefined aliases, do not count against your AWS KMS aliases limit.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSKMSService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSKMSListAliasesRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSKMSListAliasesResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)listAliases:(AWSKMSListAliasesRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSKMSListAliasesResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the ListAliases service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSKMSErrorDomain domain and the following error code: AWSKMSErrorDependencyTimeout, AWSKMSErrorInvalidMarker, AWSKMSErrorKMSInternal.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/listAliases:completionHandler:</Anchor>
            <NodeRef refid="1162"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSKMS/listGrants:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Gets a list of all grants for the specified customer master key (CMK).&lt;/p&gt;&lt;p&gt;To perform this operation on a CMK in a different AWS account, specify the key ARN in the value of the &lt;code&gt;KeyId&lt;/code&gt; parameter.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSKMSService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSKMSListGrantsRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSKMSListGrantsResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSKMSListGrantsResponse*&gt; *)listGrants:(AWSKMSListGrantsRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the ListGrants service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSKMSListGrantsResponse. On failed execution, task.error may contain an NSError with AWSKMSErrorDomain domain and the following error code: AWSKMSErrorNotFound, AWSKMSErrorDependencyTimeout, AWSKMSErrorInvalidMarker, AWSKMSErrorInvalidArn, AWSKMSErrorKMSInternal, AWSKMSErrorKMSInvalidState.</Abstract></ReturnValue>
			<Anchor>//api/name/listGrants:</Anchor>
            <NodeRef refid="1162"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSKMS/listGrants:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Gets a list of all grants for the specified customer master key (CMK).&lt;/p&gt;&lt;p&gt;To perform this operation on a CMK in a different AWS account, specify the key ARN in the value of the &lt;code&gt;KeyId&lt;/code&gt; parameter.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSKMSService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSKMSListGrantsRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSKMSListGrantsResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)listGrants:(AWSKMSListGrantsRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSKMSListGrantsResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the ListGrants service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSKMSErrorDomain domain and the following error code: AWSKMSErrorNotFound, AWSKMSErrorDependencyTimeout, AWSKMSErrorInvalidMarker, AWSKMSErrorInvalidArn, AWSKMSErrorKMSInternal, AWSKMSErrorKMSInvalidState.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/listGrants:completionHandler:</Anchor>
            <NodeRef refid="1162"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSKMS/listKeyPolicies:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Gets the names of the key policies that are attached to a customer master key (CMK). This operation is designed to get policy names that you can use in a &lt;a&gt;GetKeyPolicy&lt;/a&gt; operation. However, the only valid policy name is &lt;code&gt;default&lt;/code&gt;. You cannot perform this operation on a CMK in a different AWS account.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSKMSService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSKMSListKeyPoliciesRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSKMSListKeyPoliciesResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSKMSListKeyPoliciesResponse*&gt; *)listKeyPolicies:(AWSKMSListKeyPoliciesRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the ListKeyPolicies service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSKMSListKeyPoliciesResponse. On failed execution, task.error may contain an NSError with AWSKMSErrorDomain domain and the following error code: AWSKMSErrorNotFound, AWSKMSErrorInvalidArn, AWSKMSErrorDependencyTimeout, AWSKMSErrorKMSInternal, AWSKMSErrorKMSInvalidState.</Abstract></ReturnValue>
			<Anchor>//api/name/listKeyPolicies:</Anchor>
            <NodeRef refid="1162"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSKMS/listKeyPolicies:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Gets the names of the key policies that are attached to a customer master key (CMK). This operation is designed to get policy names that you can use in a &lt;a&gt;GetKeyPolicy&lt;/a&gt; operation. However, the only valid policy name is &lt;code&gt;default&lt;/code&gt;. You cannot perform this operation on a CMK in a different AWS account.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSKMSService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSKMSListKeyPoliciesRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSKMSListKeyPoliciesResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)listKeyPolicies:(AWSKMSListKeyPoliciesRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSKMSListKeyPoliciesResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the ListKeyPolicies service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSKMSErrorDomain domain and the following error code: AWSKMSErrorNotFound, AWSKMSErrorInvalidArn, AWSKMSErrorDependencyTimeout, AWSKMSErrorKMSInternal, AWSKMSErrorKMSInvalidState.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/listKeyPolicies:completionHandler:</Anchor>
            <NodeRef refid="1162"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSKMS/listKeys:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Gets a list of all customer master keys (CMKs) in the caller&apos;s AWS account and region.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSKMSService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSKMSListKeysRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSKMSListKeysResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSKMSListKeysResponse*&gt; *)listKeys:(AWSKMSListKeysRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the ListKeys service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSKMSListKeysResponse. On failed execution, task.error may contain an NSError with AWSKMSErrorDomain domain and the following error code: AWSKMSErrorDependencyTimeout, AWSKMSErrorKMSInternal, AWSKMSErrorInvalidMarker.</Abstract></ReturnValue>
			<Anchor>//api/name/listKeys:</Anchor>
            <NodeRef refid="1162"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSKMS/listKeys:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Gets a list of all customer master keys (CMKs) in the caller&apos;s AWS account and region.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSKMSService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSKMSListKeysRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSKMSListKeysResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)listKeys:(AWSKMSListKeysRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSKMSListKeysResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the ListKeys service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSKMSErrorDomain domain and the following error code: AWSKMSErrorDependencyTimeout, AWSKMSErrorKMSInternal, AWSKMSErrorInvalidMarker.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/listKeys:completionHandler:</Anchor>
            <NodeRef refid="1162"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSKMS/listResourceTags:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Returns a list of all tags for the specified customer master key (CMK).&lt;/p&gt;&lt;p&gt;You cannot perform this operation on a CMK in a different AWS account.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSKMSService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSKMSListResourceTagsRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSKMSListResourceTagsResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSKMSListResourceTagsResponse*&gt; *)listResourceTags:(AWSKMSListResourceTagsRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the ListResourceTags service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSKMSListResourceTagsResponse. On failed execution, task.error may contain an NSError with AWSKMSErrorDomain domain and the following error code: AWSKMSErrorKMSInternal, AWSKMSErrorNotFound, AWSKMSErrorInvalidArn, AWSKMSErrorInvalidMarker.</Abstract></ReturnValue>
			<Anchor>//api/name/listResourceTags:</Anchor>
            <NodeRef refid="1162"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSKMS/listResourceTags:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Returns a list of all tags for the specified customer master key (CMK).&lt;/p&gt;&lt;p&gt;You cannot perform this operation on a CMK in a different AWS account.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSKMSService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSKMSListResourceTagsRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSKMSListResourceTagsResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)listResourceTags:(AWSKMSListResourceTagsRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSKMSListResourceTagsResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the ListResourceTags service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSKMSErrorDomain domain and the following error code: AWSKMSErrorKMSInternal, AWSKMSErrorNotFound, AWSKMSErrorInvalidArn, AWSKMSErrorInvalidMarker.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/listResourceTags:completionHandler:</Anchor>
            <NodeRef refid="1162"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSKMS/listRetirableGrants:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Returns a list of all grants for which the grant&apos;s &lt;code&gt;RetiringPrincipal&lt;/code&gt; matches the one specified.&lt;/p&gt;&lt;p&gt;A typical use is to list all grants that you are able to retire. To retire a grant, use &lt;a&gt;RetireGrant&lt;/a&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSKMSService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSKMSListRetirableGrantsRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSKMSListGrantsResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSKMSListGrantsResponse*&gt; *)listRetirableGrants:(AWSKMSListRetirableGrantsRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the ListRetirableGrants service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSKMSListGrantsResponse. On failed execution, task.error may contain an NSError with AWSKMSErrorDomain domain and the following error code: AWSKMSErrorDependencyTimeout, AWSKMSErrorInvalidMarker, AWSKMSErrorInvalidArn, AWSKMSErrorNotFound, AWSKMSErrorKMSInternal.</Abstract></ReturnValue>
			<Anchor>//api/name/listRetirableGrants:</Anchor>
            <NodeRef refid="1162"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSKMS/listRetirableGrants:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Returns a list of all grants for which the grant&apos;s &lt;code&gt;RetiringPrincipal&lt;/code&gt; matches the one specified.&lt;/p&gt;&lt;p&gt;A typical use is to list all grants that you are able to retire. To retire a grant, use &lt;a&gt;RetireGrant&lt;/a&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSKMSService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSKMSListRetirableGrantsRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSKMSListGrantsResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)listRetirableGrants:(AWSKMSListRetirableGrantsRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSKMSListGrantsResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the ListRetirableGrants service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSKMSErrorDomain domain and the following error code: AWSKMSErrorDependencyTimeout, AWSKMSErrorInvalidMarker, AWSKMSErrorInvalidArn, AWSKMSErrorNotFound, AWSKMSErrorKMSInternal.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/listRetirableGrants:completionHandler:</Anchor>
            <NodeRef refid="1162"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSKMS/putKeyPolicy:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Attaches a key policy to the specified customer master key (CMK). You cannot perform this operation on a CMK in a different AWS account.&lt;/p&gt;&lt;p&gt;For more information about key policies, see Key Policies in the &lt;i&gt;AWS Key Management Service Developer Guide&lt;/i&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSKMSService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSKMSPutKeyPolicyRequest</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask *)putKeyPolicy:(AWSKMSPutKeyPolicyRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the PutKeyPolicy service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will be nil. On failed execution, task.error may contain an NSError with AWSKMSErrorDomain domain and the following error code: AWSKMSErrorNotFound, AWSKMSErrorInvalidArn, AWSKMSErrorMalformedPolicyDocument, AWSKMSErrorDependencyTimeout, AWSKMSErrorUnsupportedOperation, AWSKMSErrorKMSInternal, AWSKMSErrorLimitExceeded, AWSKMSErrorKMSInvalidState.</Abstract></ReturnValue>
			<Anchor>//api/name/putKeyPolicy:</Anchor>
            <NodeRef refid="1162"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSKMS/putKeyPolicy:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Attaches a key policy to the specified customer master key (CMK). You cannot perform this operation on a CMK in a different AWS account.&lt;/p&gt;&lt;p&gt;For more information about key policies, see Key Policies in the &lt;i&gt;AWS Key Management Service Developer Guide&lt;/i&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSKMSService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSKMSPutKeyPolicyRequest</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)putKeyPolicy:(AWSKMSPutKeyPolicyRequest *)request completionHandler:(void ( ^ _Nullable ) ( NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the PutKeyPolicy service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSKMSErrorDomain domain and the following error code: AWSKMSErrorNotFound, AWSKMSErrorInvalidArn, AWSKMSErrorMalformedPolicyDocument, AWSKMSErrorDependencyTimeout, AWSKMSErrorUnsupportedOperation, AWSKMSErrorKMSInternal, AWSKMSErrorLimitExceeded, AWSKMSErrorKMSInvalidState.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/putKeyPolicy:completionHandler:</Anchor>
            <NodeRef refid="1162"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSKMS/reEncrypt:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Encrypts data on the server side with a new customer master key (CMK) without exposing the plaintext of the data on the client side. The data is first decrypted and then reencrypted. You can also use this operation to change the encryption context of a ciphertext. &lt;/p&gt;&lt;p&gt;You can reencrypt data using CMKs in different AWS accounts.&lt;/p&gt;&lt;p&gt;Unlike other operations, &lt;code&gt;ReEncrypt&lt;/code&gt; is authorized twice, once as &lt;code&gt;ReEncryptFrom&lt;/code&gt; on the source CMK and once as &lt;code&gt;ReEncryptTo&lt;/code&gt; on the destination CMK. We recommend that you include the &lt;code&gt;&quot;kms:ReEncrypt*&quot;&lt;/code&gt; permission in your How Key State Affects Use of a Customer Master Key in the &lt;i&gt;AWS Key Management Service Developer Guide&lt;/i&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSKMSService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSKMSReEncryptRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSKMSReEncryptResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSKMSReEncryptResponse*&gt; *)reEncrypt:(AWSKMSReEncryptRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the ReEncrypt service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSKMSReEncryptResponse. On failed execution, task.error may contain an NSError with AWSKMSErrorDomain domain and the following error code: AWSKMSErrorNotFound, AWSKMSErrorDisabled, AWSKMSErrorInvalidCiphertext, AWSKMSErrorKeyUnavailable, AWSKMSErrorDependencyTimeout, AWSKMSErrorInvalidKeyUsage, AWSKMSErrorInvalidGrantToken, AWSKMSErrorKMSInternal, AWSKMSErrorKMSInvalidState.</Abstract></ReturnValue>
			<Anchor>//api/name/reEncrypt:</Anchor>
            <NodeRef refid="1162"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSKMS/reEncrypt:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Encrypts data on the server side with a new customer master key (CMK) without exposing the plaintext of the data on the client side. The data is first decrypted and then reencrypted. You can also use this operation to change the encryption context of a ciphertext. &lt;/p&gt;&lt;p&gt;You can reencrypt data using CMKs in different AWS accounts.&lt;/p&gt;&lt;p&gt;Unlike other operations, &lt;code&gt;ReEncrypt&lt;/code&gt; is authorized twice, once as &lt;code&gt;ReEncryptFrom&lt;/code&gt; on the source CMK and once as &lt;code&gt;ReEncryptTo&lt;/code&gt; on the destination CMK. We recommend that you include the &lt;code&gt;&quot;kms:ReEncrypt*&quot;&lt;/code&gt; permission in your How Key State Affects Use of a Customer Master Key in the &lt;i&gt;AWS Key Management Service Developer Guide&lt;/i&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSKMSService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSKMSReEncryptRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSKMSReEncryptResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)reEncrypt:(AWSKMSReEncryptRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSKMSReEncryptResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the ReEncrypt service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSKMSErrorDomain domain and the following error code: AWSKMSErrorNotFound, AWSKMSErrorDisabled, AWSKMSErrorInvalidCiphertext, AWSKMSErrorKeyUnavailable, AWSKMSErrorDependencyTimeout, AWSKMSErrorInvalidKeyUsage, AWSKMSErrorInvalidGrantToken, AWSKMSErrorKMSInternal, AWSKMSErrorKMSInvalidState.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/reEncrypt:completionHandler:</Anchor>
            <NodeRef refid="1162"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSKMS/retireGrant:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Retires a grant. To clean up, you can retire a grant when you&apos;re done using it. You should revoke a grant when you intend to actively deny operations that depend on it. The following are permitted to call this API:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;The AWS account (root user) under which the grant was created&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;The &lt;code&gt;RetiringPrincipal&lt;/code&gt;, if present in the grant&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;The &lt;code&gt;GranteePrincipal&lt;/code&gt;, if &lt;code&gt;RetireGrant&lt;/code&gt; is an operation specified in the grant&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;You must identify the grant to retire by its grant token or by a combination of the grant ID and the Amazon Resource Name (ARN) of the customer master key (CMK). A grant token is a unique variable-length base64-encoded string. A grant ID is a 64 character unique identifier of a grant. The &lt;a&gt;CreateGrant&lt;/a&gt; operation returns both.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSKMSService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSKMSRetireGrantRequest</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask *)retireGrant:(AWSKMSRetireGrantRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the RetireGrant service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will be nil. On failed execution, task.error may contain an NSError with AWSKMSErrorDomain domain and the following error code: AWSKMSErrorInvalidArn, AWSKMSErrorInvalidGrantToken, AWSKMSErrorInvalidGrantId, AWSKMSErrorNotFound, AWSKMSErrorDependencyTimeout, AWSKMSErrorKMSInternal, AWSKMSErrorKMSInvalidState.</Abstract></ReturnValue>
			<Anchor>//api/name/retireGrant:</Anchor>
            <NodeRef refid="1162"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSKMS/retireGrant:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Retires a grant. To clean up, you can retire a grant when you&apos;re done using it. You should revoke a grant when you intend to actively deny operations that depend on it. The following are permitted to call this API:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;The AWS account (root user) under which the grant was created&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;The &lt;code&gt;RetiringPrincipal&lt;/code&gt;, if present in the grant&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;The &lt;code&gt;GranteePrincipal&lt;/code&gt;, if &lt;code&gt;RetireGrant&lt;/code&gt; is an operation specified in the grant&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;You must identify the grant to retire by its grant token or by a combination of the grant ID and the Amazon Resource Name (ARN) of the customer master key (CMK). A grant token is a unique variable-length base64-encoded string. A grant ID is a 64 character unique identifier of a grant. The &lt;a&gt;CreateGrant&lt;/a&gt; operation returns both.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSKMSService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSKMSRetireGrantRequest</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)retireGrant:(AWSKMSRetireGrantRequest *)request completionHandler:(void ( ^ _Nullable ) ( NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the RetireGrant service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSKMSErrorDomain domain and the following error code: AWSKMSErrorInvalidArn, AWSKMSErrorInvalidGrantToken, AWSKMSErrorInvalidGrantId, AWSKMSErrorNotFound, AWSKMSErrorDependencyTimeout, AWSKMSErrorKMSInternal, AWSKMSErrorKMSInvalidState.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/retireGrant:completionHandler:</Anchor>
            <NodeRef refid="1162"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSKMS/revokeGrant:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Revokes the specified grant for the specified customer master key (CMK). You can revoke a grant to actively deny operations that depend on it.&lt;/p&gt;&lt;p&gt;To perform this operation on a CMK in a different AWS account, specify the key ARN in the value of the &lt;code&gt;KeyId&lt;/code&gt; parameter.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSKMSService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSKMSRevokeGrantRequest</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask *)revokeGrant:(AWSKMSRevokeGrantRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the RevokeGrant service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will be nil. On failed execution, task.error may contain an NSError with AWSKMSErrorDomain domain and the following error code: AWSKMSErrorNotFound, AWSKMSErrorDependencyTimeout, AWSKMSErrorInvalidArn, AWSKMSErrorInvalidGrantId, AWSKMSErrorKMSInternal, AWSKMSErrorKMSInvalidState.</Abstract></ReturnValue>
			<Anchor>//api/name/revokeGrant:</Anchor>
            <NodeRef refid="1162"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSKMS/revokeGrant:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Revokes the specified grant for the specified customer master key (CMK). You can revoke a grant to actively deny operations that depend on it.&lt;/p&gt;&lt;p&gt;To perform this operation on a CMK in a different AWS account, specify the key ARN in the value of the &lt;code&gt;KeyId&lt;/code&gt; parameter.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSKMSService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSKMSRevokeGrantRequest</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)revokeGrant:(AWSKMSRevokeGrantRequest *)request completionHandler:(void ( ^ _Nullable ) ( NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the RevokeGrant service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSKMSErrorDomain domain and the following error code: AWSKMSErrorNotFound, AWSKMSErrorDependencyTimeout, AWSKMSErrorInvalidArn, AWSKMSErrorInvalidGrantId, AWSKMSErrorKMSInternal, AWSKMSErrorKMSInvalidState.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/revokeGrant:completionHandler:</Anchor>
            <NodeRef refid="1162"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSKMS/scheduleKeyDeletion:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Schedules the deletion of a customer master key (CMK). You may provide a waiting period, specified in days, before deletion occurs. If you do not provide a waiting period, the default period of 30 days is used. When this operation is successful, the state of the CMK changes to &lt;code&gt;PendingDeletion&lt;/code&gt;. Before the waiting period ends, you can use &lt;a&gt;CancelKeyDeletion&lt;/a&gt; to cancel the deletion of the CMK. After the waiting period ends, AWS KMS deletes the CMK and all AWS KMS data associated with it, including all aliases that refer to it.&lt;/p&gt;&lt;p&gt;You cannot perform this operation on a CMK in a different AWS account.&lt;/p&gt;&lt;important&gt;&lt;p&gt;Deleting a CMK is a destructive and potentially dangerous operation. When a CMK is deleted, all data that was encrypted under the CMK is rendered unrecoverable. To restrict the use of a CMK without deleting it, use &lt;a&gt;DisableKey&lt;/a&gt;.&lt;/p&gt;&lt;/important&gt;&lt;p&gt;For more information about scheduling a CMK for deletion, see How Key State Affects Use of a Customer Master Key in the &lt;i&gt;AWS Key Management Service Developer Guide&lt;/i&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSKMSService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSKMSScheduleKeyDeletionRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSKMSScheduleKeyDeletionResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSKMSScheduleKeyDeletionResponse*&gt; *)scheduleKeyDeletion:(AWSKMSScheduleKeyDeletionRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the ScheduleKeyDeletion service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSKMSScheduleKeyDeletionResponse. On failed execution, task.error may contain an NSError with AWSKMSErrorDomain domain and the following error code: AWSKMSErrorNotFound, AWSKMSErrorInvalidArn, AWSKMSErrorDependencyTimeout, AWSKMSErrorKMSInternal, AWSKMSErrorKMSInvalidState.</Abstract></ReturnValue>
			<Anchor>//api/name/scheduleKeyDeletion:</Anchor>
            <NodeRef refid="1162"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSKMS/scheduleKeyDeletion:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Schedules the deletion of a customer master key (CMK). You may provide a waiting period, specified in days, before deletion occurs. If you do not provide a waiting period, the default period of 30 days is used. When this operation is successful, the state of the CMK changes to &lt;code&gt;PendingDeletion&lt;/code&gt;. Before the waiting period ends, you can use &lt;a&gt;CancelKeyDeletion&lt;/a&gt; to cancel the deletion of the CMK. After the waiting period ends, AWS KMS deletes the CMK and all AWS KMS data associated with it, including all aliases that refer to it.&lt;/p&gt;&lt;p&gt;You cannot perform this operation on a CMK in a different AWS account.&lt;/p&gt;&lt;important&gt;&lt;p&gt;Deleting a CMK is a destructive and potentially dangerous operation. When a CMK is deleted, all data that was encrypted under the CMK is rendered unrecoverable. To restrict the use of a CMK without deleting it, use &lt;a&gt;DisableKey&lt;/a&gt;.&lt;/p&gt;&lt;/important&gt;&lt;p&gt;For more information about scheduling a CMK for deletion, see How Key State Affects Use of a Customer Master Key in the &lt;i&gt;AWS Key Management Service Developer Guide&lt;/i&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSKMSService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSKMSScheduleKeyDeletionRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSKMSScheduleKeyDeletionResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)scheduleKeyDeletion:(AWSKMSScheduleKeyDeletionRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSKMSScheduleKeyDeletionResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the ScheduleKeyDeletion service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSKMSErrorDomain domain and the following error code: AWSKMSErrorNotFound, AWSKMSErrorInvalidArn, AWSKMSErrorDependencyTimeout, AWSKMSErrorKMSInternal, AWSKMSErrorKMSInvalidState.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/scheduleKeyDeletion:completionHandler:</Anchor>
            <NodeRef refid="1162"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSKMS/tagResource:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Adds or edits tags for a customer master key (CMK). You cannot perform this operation on a CMK in a different AWS account.&lt;/p&gt;&lt;p&gt;Each tag consists of a tag key and a tag value. Tag keys and tag values are both required, but tag values can be empty (null) strings.&lt;/p&gt;&lt;p&gt;You can only use a tag key once for each CMK. If you use the tag key again, AWS KMS replaces the current tag value with the specified value.&lt;/p&gt;&lt;p&gt;For information about the rules that apply to tag keys and tag values, see How Key State Affects Use of a Customer Master Key in the &lt;i&gt;AWS Key Management Service Developer Guide&lt;/i&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSKMSService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSKMSTagResourceRequest</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask *)tagResource:(AWSKMSTagResourceRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the TagResource service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will be nil. On failed execution, task.error may contain an NSError with AWSKMSErrorDomain domain and the following error code: AWSKMSErrorKMSInternal, AWSKMSErrorNotFound, AWSKMSErrorInvalidArn, AWSKMSErrorKMSInvalidState, AWSKMSErrorLimitExceeded, AWSKMSErrorTag.</Abstract></ReturnValue>
			<Anchor>//api/name/tagResource:</Anchor>
            <NodeRef refid="1162"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSKMS/tagResource:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Adds or edits tags for a customer master key (CMK). You cannot perform this operation on a CMK in a different AWS account.&lt;/p&gt;&lt;p&gt;Each tag consists of a tag key and a tag value. Tag keys and tag values are both required, but tag values can be empty (null) strings.&lt;/p&gt;&lt;p&gt;You can only use a tag key once for each CMK. If you use the tag key again, AWS KMS replaces the current tag value with the specified value.&lt;/p&gt;&lt;p&gt;For information about the rules that apply to tag keys and tag values, see How Key State Affects Use of a Customer Master Key in the &lt;i&gt;AWS Key Management Service Developer Guide&lt;/i&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSKMSService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSKMSTagResourceRequest</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)tagResource:(AWSKMSTagResourceRequest *)request completionHandler:(void ( ^ _Nullable ) ( NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the TagResource service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSKMSErrorDomain domain and the following error code: AWSKMSErrorKMSInternal, AWSKMSErrorNotFound, AWSKMSErrorInvalidArn, AWSKMSErrorKMSInvalidState, AWSKMSErrorLimitExceeded, AWSKMSErrorTag.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/tagResource:completionHandler:</Anchor>
            <NodeRef refid="1162"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSKMS/untagResource:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Removes the specified tags from the specified customer master key (CMK). You cannot perform this operation on a CMK in a different AWS account.&lt;/p&gt;&lt;p&gt;To remove a tag, specify the tag key. To change the tag value of an existing tag key, use &lt;a&gt;TagResource&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;The result of this operation varies with the key state of the CMK. For details, see How Key State Affects Use of a Customer Master Key in the &lt;i&gt;AWS Key Management Service Developer Guide&lt;/i&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSKMSService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSKMSUntagResourceRequest</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask *)untagResource:(AWSKMSUntagResourceRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the UntagResource service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will be nil. On failed execution, task.error may contain an NSError with AWSKMSErrorDomain domain and the following error code: AWSKMSErrorKMSInternal, AWSKMSErrorNotFound, AWSKMSErrorInvalidArn, AWSKMSErrorKMSInvalidState, AWSKMSErrorTag.</Abstract></ReturnValue>
			<Anchor>//api/name/untagResource:</Anchor>
            <NodeRef refid="1162"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSKMS/untagResource:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Removes the specified tags from the specified customer master key (CMK). You cannot perform this operation on a CMK in a different AWS account.&lt;/p&gt;&lt;p&gt;To remove a tag, specify the tag key. To change the tag value of an existing tag key, use &lt;a&gt;TagResource&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;The result of this operation varies with the key state of the CMK. For details, see How Key State Affects Use of a Customer Master Key in the &lt;i&gt;AWS Key Management Service Developer Guide&lt;/i&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSKMSService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSKMSUntagResourceRequest</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)untagResource:(AWSKMSUntagResourceRequest *)request completionHandler:(void ( ^ _Nullable ) ( NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the UntagResource service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSKMSErrorDomain domain and the following error code: AWSKMSErrorKMSInternal, AWSKMSErrorNotFound, AWSKMSErrorInvalidArn, AWSKMSErrorKMSInvalidState, AWSKMSErrorTag.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/untagResource:completionHandler:</Anchor>
            <NodeRef refid="1162"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSKMS/updateAlias:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Associates an existing alias with a different customer master key (CMK). Each CMK can have multiple aliases, but the aliases must be unique within the account and region. You cannot perform this operation on an alias in a different AWS account.&lt;/p&gt;&lt;p&gt;This operation works only on existing aliases. To change the alias of a CMK to a new value, use &lt;a&gt;CreateAlias&lt;/a&gt; to create a new alias and &lt;a&gt;DeleteAlias&lt;/a&gt; to delete the old alias.&lt;/p&gt;&lt;p&gt;Because an alias is not a property of a CMK, you can create, update, and delete the aliases of a CMK without affecting the CMK. Also, aliases do not appear in the response from the &lt;a&gt;DescribeKey&lt;/a&gt; operation. To get the aliases of all CMKs in the account, use the &lt;a&gt;ListAliases&lt;/a&gt; operation. &lt;/p&gt;&lt;p&gt;An alias name can contain only alphanumeric characters, forward slashes (/), underscores (), and dashes (-). An alias must start with the word &lt;code&gt;alias&lt;/code&gt; followed by a forward slash (&lt;code&gt;alias/&lt;/code&gt;). The alias name can contain only alphanumeric characters, forward slashes (/), underscores (), and dashes (-). Alias names cannot begin with &lt;code&gt;aws&lt;/code&gt;; that alias name prefix is reserved by Amazon Web Services (AWS).&lt;/p&gt;&lt;p&gt;The result of this operation varies with the key state of the CMK. For details, see How Key State Affects Use of a Customer Master Key in the &lt;i&gt;AWS Key Management Service Developer Guide&lt;/i&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSKMSService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSKMSUpdateAliasRequest</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask *)updateAlias:(AWSKMSUpdateAliasRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the UpdateAlias service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will be nil. On failed execution, task.error may contain an NSError with AWSKMSErrorDomain domain and the following error code: AWSKMSErrorDependencyTimeout, AWSKMSErrorNotFound, AWSKMSErrorKMSInternal, AWSKMSErrorKMSInvalidState.</Abstract></ReturnValue>
			<Anchor>//api/name/updateAlias:</Anchor>
            <NodeRef refid="1162"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSKMS/updateAlias:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Associates an existing alias with a different customer master key (CMK). Each CMK can have multiple aliases, but the aliases must be unique within the account and region. You cannot perform this operation on an alias in a different AWS account.&lt;/p&gt;&lt;p&gt;This operation works only on existing aliases. To change the alias of a CMK to a new value, use &lt;a&gt;CreateAlias&lt;/a&gt; to create a new alias and &lt;a&gt;DeleteAlias&lt;/a&gt; to delete the old alias.&lt;/p&gt;&lt;p&gt;Because an alias is not a property of a CMK, you can create, update, and delete the aliases of a CMK without affecting the CMK. Also, aliases do not appear in the response from the &lt;a&gt;DescribeKey&lt;/a&gt; operation. To get the aliases of all CMKs in the account, use the &lt;a&gt;ListAliases&lt;/a&gt; operation. &lt;/p&gt;&lt;p&gt;An alias name can contain only alphanumeric characters, forward slashes (/), underscores (), and dashes (-). An alias must start with the word &lt;code&gt;alias&lt;/code&gt; followed by a forward slash (&lt;code&gt;alias/&lt;/code&gt;). The alias name can contain only alphanumeric characters, forward slashes (/), underscores (), and dashes (-). Alias names cannot begin with &lt;code&gt;aws&lt;/code&gt;; that alias name prefix is reserved by Amazon Web Services (AWS).&lt;/p&gt;&lt;p&gt;The result of this operation varies with the key state of the CMK. For details, see How Key State Affects Use of a Customer Master Key in the &lt;i&gt;AWS Key Management Service Developer Guide&lt;/i&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSKMSService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSKMSUpdateAliasRequest</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)updateAlias:(AWSKMSUpdateAliasRequest *)request completionHandler:(void ( ^ _Nullable ) ( NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the UpdateAlias service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSKMSErrorDomain domain and the following error code: AWSKMSErrorDependencyTimeout, AWSKMSErrorNotFound, AWSKMSErrorKMSInternal, AWSKMSErrorKMSInvalidState.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/updateAlias:completionHandler:</Anchor>
            <NodeRef refid="1162"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSKMS/updateKeyDescription:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Updates the description of a customer master key (CMK). To see the description of a CMK, use &lt;a&gt;DescribeKey&lt;/a&gt;. &lt;/p&gt;&lt;p&gt;You cannot perform this operation on a CMK in a different AWS account.&lt;/p&gt;&lt;p&gt;The result of this operation varies with the key state of the CMK. For details, see How Key State Affects Use of a Customer Master Key in the &lt;i&gt;AWS Key Management Service Developer Guide&lt;/i&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSKMSService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSKMSUpdateKeyDescriptionRequest</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask *)updateKeyDescription:(AWSKMSUpdateKeyDescriptionRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the UpdateKeyDescription service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will be nil. On failed execution, task.error may contain an NSError with AWSKMSErrorDomain domain and the following error code: AWSKMSErrorNotFound, AWSKMSErrorInvalidArn, AWSKMSErrorDependencyTimeout, AWSKMSErrorKMSInternal, AWSKMSErrorKMSInvalidState.</Abstract></ReturnValue>
			<Anchor>//api/name/updateKeyDescription:</Anchor>
            <NodeRef refid="1162"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSKMS/updateKeyDescription:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Updates the description of a customer master key (CMK). To see the description of a CMK, use &lt;a&gt;DescribeKey&lt;/a&gt;. &lt;/p&gt;&lt;p&gt;You cannot perform this operation on a CMK in a different AWS account.&lt;/p&gt;&lt;p&gt;The result of this operation varies with the key state of the CMK. For details, see How Key State Affects Use of a Customer Master Key in the &lt;i&gt;AWS Key Management Service Developer Guide&lt;/i&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSKMSService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSKMSUpdateKeyDescriptionRequest</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)updateKeyDescription:(AWSKMSUpdateKeyDescriptionRequest *)request completionHandler:(void ( ^ _Nullable ) ( NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the UpdateKeyDescription service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSKMSErrorDomain domain and the following error code: AWSKMSErrorNotFound, AWSKMSErrorInvalidArn, AWSKMSErrorDependencyTimeout, AWSKMSErrorKMSInternal, AWSKMSErrorKMSInvalidState.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/updateKeyDescription:completionHandler:</Anchor>
            <NodeRef refid="1162"/>
		</Token>
		
        
        
	</File>
</Tokens>