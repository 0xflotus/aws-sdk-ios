<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/AWSKinesisVideo.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/AWSKinesisVideo</TokenIdentifier>
			<Abstract type="html">&lt;p/&gt;</Abstract>
			<DeclaredIn>AWSKinesisVideoService.h</DeclaredIn>
            
			
			<NodeRef refid="1273"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSKinesisVideo/setConfiguration:</TokenIdentifier>
			<Abstract type="html">The service configuration used to instantiate this service client.</Abstract>
			<DeclaredIn>AWSKinesisVideoService.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong, readonly) AWSServiceConfiguration *configuration</Declaration>
			
			
			<Anchor>//api/name/configuration</Anchor>
            <NodeRef refid="1273"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSKinesisVideo/configuration</TokenIdentifier>
			<Abstract type="html">The service configuration used to instantiate this service client.</Abstract>
			<DeclaredIn>AWSKinesisVideoService.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong, readonly) AWSServiceConfiguration *configuration</Declaration>
			
			
			<Anchor>//api/name/configuration</Anchor>
            <NodeRef refid="1273"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSKinesisVideo/configuration</TokenIdentifier>
			<Abstract type="html">The service configuration used to instantiate this service client.</Abstract>
			<DeclaredIn>AWSKinesisVideoService.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong, readonly) AWSServiceConfiguration *configuration</Declaration>
			
			
			<Anchor>//api/name/configuration</Anchor>
            <NodeRef refid="1273"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/AWSKinesisVideo/defaultKinesisVideo</TokenIdentifier>
			<Abstract type="html">Returns the singleton service client. If the singleton object does not exist, the SDK instantiates the default service client with defaultServiceConfiguration from [AWSServiceManager defaultServiceManager]. The reference to this object is maintained by the SDK, and you do not need to retain it manually.</Abstract>
			<DeclaredIn>AWSKinesisVideoService.h</DeclaredIn>
			
			<Declaration>+ (instancetype)defaultKinesisVideo</Declaration>
			
			<ReturnValue><Abstract type="html">The default service client.</Abstract></ReturnValue>
			<Anchor>//api/name/defaultKinesisVideo</Anchor>
            <NodeRef refid="1273"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/AWSKinesisVideo/registerKinesisVideoWithConfiguration:forKey:</TokenIdentifier>
			<Abstract type="html">Creates a service client with the given service configuration and registers it for the key.</Abstract>
			<DeclaredIn>AWSKinesisVideoService.h</DeclaredIn>
			
			<Declaration>+ (void)registerKinesisVideoWithConfiguration:(AWSServiceConfiguration *)configuration forKey:(NSString *)key</Declaration>
			<Parameters>
				<Parameter>
					<Name>configuration</Name>
					<Abstract type="html">A service configuration object.</Abstract>
				</Parameter><Parameter>
					<Name>key</Name>
					<Abstract type="html">A string to identify the service client.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/registerKinesisVideoWithConfiguration:forKey:</Anchor>
            <NodeRef refid="1273"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/AWSKinesisVideo/KinesisVideoForKey:</TokenIdentifier>
			<Abstract type="html">Retrieves the service client associated with the key. You need to call + registerKinesisVideoWithConfiguration:forKey: before invoking this method.</Abstract>
			<DeclaredIn>AWSKinesisVideoService.h</DeclaredIn>
			
			<Declaration>+ (instancetype)KinesisVideoForKey:(NSString *)key</Declaration>
			<Parameters>
				<Parameter>
					<Name>key</Name>
					<Abstract type="html">A string to identify the service client.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of the service client.</Abstract></ReturnValue>
			<Anchor>//api/name/KinesisVideoForKey:</Anchor>
            <NodeRef refid="1273"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/AWSKinesisVideo/removeKinesisVideoForKey:</TokenIdentifier>
			<Abstract type="html">Removes the service client associated with the key and release it.</Abstract>
			<DeclaredIn>AWSKinesisVideoService.h</DeclaredIn>
			
			<Declaration>+ (void)removeKinesisVideoForKey:(NSString *)key</Declaration>
			<Parameters>
				<Parameter>
					<Name>key</Name>
					<Abstract type="html">A string to identify the service client.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/removeKinesisVideoForKey:</Anchor>
            <NodeRef refid="1273"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSKinesisVideo/createStream:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Creates a new Kinesis video stream. &lt;/p&gt;&lt;p&gt;When you create a new stream, Kinesis Video Streams assigns it a version number. When you change the stream&apos;s metadata, Kinesis Video Streams updates the version. &lt;/p&gt;&lt;p&gt;&lt;code&gt;CreateStream&lt;/code&gt; is an asynchronous operation.&lt;/p&gt;&lt;p&gt;For information about how the service works, see How it Works. &lt;/p&gt;&lt;p&gt;You must have permissions for the &lt;code&gt;KinesisVideo:CreateStream&lt;/code&gt; action.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSKinesisVideoService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSKinesisVideoCreateStreamInput</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSKinesisVideoCreateStreamOutput</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSKinesisVideoCreateStreamOutput*&gt; *)createStream:(AWSKinesisVideoCreateStreamInput *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the CreateStream service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSKinesisVideoCreateStreamOutput. On failed execution, task.error may contain an NSError with AWSKinesisVideoErrorDomain domain and the following error code: AWSKinesisVideoErrorAccountStreamLimitExceeded, AWSKinesisVideoErrorDeviceStreamLimitExceeded, AWSKinesisVideoErrorResourceInUse, AWSKinesisVideoErrorInvalidDevice, AWSKinesisVideoErrorInvalidArgument, AWSKinesisVideoErrorClientLimitExceeded.</Abstract></ReturnValue>
			<Anchor>//api/name/createStream:</Anchor>
            <NodeRef refid="1273"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSKinesisVideo/createStream:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Creates a new Kinesis video stream. &lt;/p&gt;&lt;p&gt;When you create a new stream, Kinesis Video Streams assigns it a version number. When you change the stream&apos;s metadata, Kinesis Video Streams updates the version. &lt;/p&gt;&lt;p&gt;&lt;code&gt;CreateStream&lt;/code&gt; is an asynchronous operation.&lt;/p&gt;&lt;p&gt;For information about how the service works, see How it Works. &lt;/p&gt;&lt;p&gt;You must have permissions for the &lt;code&gt;KinesisVideo:CreateStream&lt;/code&gt; action.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSKinesisVideoService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSKinesisVideoCreateStreamInput</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSKinesisVideoCreateStreamOutput</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)createStream:(AWSKinesisVideoCreateStreamInput *)request completionHandler:(void ( ^ _Nullable ) ( AWSKinesisVideoCreateStreamOutput *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the CreateStream service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSKinesisVideoErrorDomain domain and the following error code: AWSKinesisVideoErrorAccountStreamLimitExceeded, AWSKinesisVideoErrorDeviceStreamLimitExceeded, AWSKinesisVideoErrorResourceInUse, AWSKinesisVideoErrorInvalidDevice, AWSKinesisVideoErrorInvalidArgument, AWSKinesisVideoErrorClientLimitExceeded.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/createStream:completionHandler:</Anchor>
            <NodeRef refid="1273"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSKinesisVideo/deleteStream:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Deletes a Kinesis video stream and the data contained in the stream. &lt;/p&gt;&lt;p&gt;This method marks the stream for deletion, and makes the data in the stream inaccessible immediately.&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt; To ensure that you have the latest version of the stream before deleting it, you can specify the stream version. Kinesis Video Streams assigns a version to each stream. When you update a stream, Kinesis Video Streams assigns a new version number. To get the latest stream version, use the &lt;code&gt;DescribeStream&lt;/code&gt; API. &lt;/p&gt;&lt;p&gt;This operation requires permission for the &lt;code&gt;KinesisVideo:DeleteStream&lt;/code&gt; action.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSKinesisVideoService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSKinesisVideoDeleteStreamInput</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSKinesisVideoDeleteStreamOutput</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSKinesisVideoDeleteStreamOutput*&gt; *)deleteStream:(AWSKinesisVideoDeleteStreamInput *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DeleteStream service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSKinesisVideoDeleteStreamOutput. On failed execution, task.error may contain an NSError with AWSKinesisVideoErrorDomain domain and the following error code: AWSKinesisVideoErrorClientLimitExceeded, AWSKinesisVideoErrorInvalidArgument, AWSKinesisVideoErrorResourceNotFound, AWSKinesisVideoErrorNotAuthorized.</Abstract></ReturnValue>
			<Anchor>//api/name/deleteStream:</Anchor>
            <NodeRef refid="1273"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSKinesisVideo/deleteStream:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Deletes a Kinesis video stream and the data contained in the stream. &lt;/p&gt;&lt;p&gt;This method marks the stream for deletion, and makes the data in the stream inaccessible immediately.&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt; To ensure that you have the latest version of the stream before deleting it, you can specify the stream version. Kinesis Video Streams assigns a version to each stream. When you update a stream, Kinesis Video Streams assigns a new version number. To get the latest stream version, use the &lt;code&gt;DescribeStream&lt;/code&gt; API. &lt;/p&gt;&lt;p&gt;This operation requires permission for the &lt;code&gt;KinesisVideo:DeleteStream&lt;/code&gt; action.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSKinesisVideoService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSKinesisVideoDeleteStreamInput</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSKinesisVideoDeleteStreamOutput</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)deleteStream:(AWSKinesisVideoDeleteStreamInput *)request completionHandler:(void ( ^ _Nullable ) ( AWSKinesisVideoDeleteStreamOutput *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DeleteStream service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSKinesisVideoErrorDomain domain and the following error code: AWSKinesisVideoErrorClientLimitExceeded, AWSKinesisVideoErrorInvalidArgument, AWSKinesisVideoErrorResourceNotFound, AWSKinesisVideoErrorNotAuthorized.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/deleteStream:completionHandler:</Anchor>
            <NodeRef refid="1273"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSKinesisVideo/describeStream:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Returns the most current information about the specified stream. You must specify either the &lt;code&gt;StreamName&lt;/code&gt; or the &lt;code&gt;StreamARN&lt;/code&gt;. &lt;/p&gt;</Abstract>
			<DeclaredIn>AWSKinesisVideoService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSKinesisVideoDescribeStreamInput</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSKinesisVideoDescribeStreamOutput</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSKinesisVideoDescribeStreamOutput*&gt; *)describeStream:(AWSKinesisVideoDescribeStreamInput *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DescribeStream service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSKinesisVideoDescribeStreamOutput. On failed execution, task.error may contain an NSError with AWSKinesisVideoErrorDomain domain and the following error code: AWSKinesisVideoErrorInvalidArgument, AWSKinesisVideoErrorResourceNotFound, AWSKinesisVideoErrorClientLimitExceeded, AWSKinesisVideoErrorNotAuthorized.</Abstract></ReturnValue>
			<Anchor>//api/name/describeStream:</Anchor>
            <NodeRef refid="1273"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSKinesisVideo/describeStream:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Returns the most current information about the specified stream. You must specify either the &lt;code&gt;StreamName&lt;/code&gt; or the &lt;code&gt;StreamARN&lt;/code&gt;. &lt;/p&gt;</Abstract>
			<DeclaredIn>AWSKinesisVideoService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSKinesisVideoDescribeStreamInput</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSKinesisVideoDescribeStreamOutput</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)describeStream:(AWSKinesisVideoDescribeStreamInput *)request completionHandler:(void ( ^ _Nullable ) ( AWSKinesisVideoDescribeStreamOutput *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DescribeStream service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSKinesisVideoErrorDomain domain and the following error code: AWSKinesisVideoErrorInvalidArgument, AWSKinesisVideoErrorResourceNotFound, AWSKinesisVideoErrorClientLimitExceeded, AWSKinesisVideoErrorNotAuthorized.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/describeStream:completionHandler:</Anchor>
            <NodeRef refid="1273"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSKinesisVideo/getDataEndpoint:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Gets an endpoint for a specified stream for either reading or writing. Use this endpoint in your application to read from the specified stream (using the &lt;code&gt;GetMedia&lt;/code&gt; or &lt;code&gt;GetMediaForFragmentList&lt;/code&gt; operations) or write to it (using the &lt;code&gt;PutMedia&lt;/code&gt; operation). &lt;/p&gt;&lt;note&gt;&lt;p&gt;The returned endpoint does not have the API name appended. The client needs to add the API name to the returned endpoint.&lt;/p&gt;&lt;/note&gt;&lt;p&gt;In the request, specify the stream either by &lt;code&gt;StreamName&lt;/code&gt; or &lt;code&gt;StreamARN&lt;/code&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSKinesisVideoService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSKinesisVideoGetDataEndpointInput</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSKinesisVideoGetDataEndpointOutput</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSKinesisVideoGetDataEndpointOutput*&gt; *)getDataEndpoint:(AWSKinesisVideoGetDataEndpointInput *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the GetDataEndpoint service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSKinesisVideoGetDataEndpointOutput. On failed execution, task.error may contain an NSError with AWSKinesisVideoErrorDomain domain and the following error code: AWSKinesisVideoErrorInvalidArgument, AWSKinesisVideoErrorResourceNotFound, AWSKinesisVideoErrorClientLimitExceeded, AWSKinesisVideoErrorNotAuthorized.</Abstract></ReturnValue>
			<Anchor>//api/name/getDataEndpoint:</Anchor>
            <NodeRef refid="1273"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSKinesisVideo/getDataEndpoint:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Gets an endpoint for a specified stream for either reading or writing. Use this endpoint in your application to read from the specified stream (using the &lt;code&gt;GetMedia&lt;/code&gt; or &lt;code&gt;GetMediaForFragmentList&lt;/code&gt; operations) or write to it (using the &lt;code&gt;PutMedia&lt;/code&gt; operation). &lt;/p&gt;&lt;note&gt;&lt;p&gt;The returned endpoint does not have the API name appended. The client needs to add the API name to the returned endpoint.&lt;/p&gt;&lt;/note&gt;&lt;p&gt;In the request, specify the stream either by &lt;code&gt;StreamName&lt;/code&gt; or &lt;code&gt;StreamARN&lt;/code&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSKinesisVideoService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSKinesisVideoGetDataEndpointInput</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSKinesisVideoGetDataEndpointOutput</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)getDataEndpoint:(AWSKinesisVideoGetDataEndpointInput *)request completionHandler:(void ( ^ _Nullable ) ( AWSKinesisVideoGetDataEndpointOutput *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the GetDataEndpoint service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSKinesisVideoErrorDomain domain and the following error code: AWSKinesisVideoErrorInvalidArgument, AWSKinesisVideoErrorResourceNotFound, AWSKinesisVideoErrorClientLimitExceeded, AWSKinesisVideoErrorNotAuthorized.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/getDataEndpoint:completionHandler:</Anchor>
            <NodeRef refid="1273"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSKinesisVideo/listStreams:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Returns an array of &lt;code&gt;StreamInfo&lt;/code&gt; objects. Each object describes a stream. To retrieve only streams that satisfy a specific condition, you can specify a &lt;code&gt;StreamNameCondition&lt;/code&gt;. &lt;/p&gt;</Abstract>
			<DeclaredIn>AWSKinesisVideoService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSKinesisVideoListStreamsInput</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSKinesisVideoListStreamsOutput</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSKinesisVideoListStreamsOutput*&gt; *)listStreams:(AWSKinesisVideoListStreamsInput *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the ListStreams service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSKinesisVideoListStreamsOutput. On failed execution, task.error may contain an NSError with AWSKinesisVideoErrorDomain domain and the following error code: AWSKinesisVideoErrorClientLimitExceeded, AWSKinesisVideoErrorInvalidArgument.</Abstract></ReturnValue>
			<Anchor>//api/name/listStreams:</Anchor>
            <NodeRef refid="1273"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSKinesisVideo/listStreams:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Returns an array of &lt;code&gt;StreamInfo&lt;/code&gt; objects. Each object describes a stream. To retrieve only streams that satisfy a specific condition, you can specify a &lt;code&gt;StreamNameCondition&lt;/code&gt;. &lt;/p&gt;</Abstract>
			<DeclaredIn>AWSKinesisVideoService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSKinesisVideoListStreamsInput</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSKinesisVideoListStreamsOutput</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)listStreams:(AWSKinesisVideoListStreamsInput *)request completionHandler:(void ( ^ _Nullable ) ( AWSKinesisVideoListStreamsOutput *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the ListStreams service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSKinesisVideoErrorDomain domain and the following error code: AWSKinesisVideoErrorClientLimitExceeded, AWSKinesisVideoErrorInvalidArgument.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/listStreams:completionHandler:</Anchor>
            <NodeRef refid="1273"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSKinesisVideo/listTagsForStream:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Returns a list of tags associated with the specified stream.&lt;/p&gt;&lt;p&gt;In the request, you must specify either the &lt;code&gt;StreamName&lt;/code&gt; or the &lt;code&gt;StreamARN&lt;/code&gt;. &lt;/p&gt;</Abstract>
			<DeclaredIn>AWSKinesisVideoService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSKinesisVideoListTagsForStreamInput</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSKinesisVideoListTagsForStreamOutput</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSKinesisVideoListTagsForStreamOutput*&gt; *)listTagsForStream:(AWSKinesisVideoListTagsForStreamInput *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the ListTagsForStream service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSKinesisVideoListTagsForStreamOutput. On failed execution, task.error may contain an NSError with AWSKinesisVideoErrorDomain domain and the following error code: AWSKinesisVideoErrorClientLimitExceeded, AWSKinesisVideoErrorInvalidArgument, AWSKinesisVideoErrorResourceNotFound, AWSKinesisVideoErrorNotAuthorized, AWSKinesisVideoErrorInvalidResourceFormat.</Abstract></ReturnValue>
			<Anchor>//api/name/listTagsForStream:</Anchor>
            <NodeRef refid="1273"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSKinesisVideo/listTagsForStream:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Returns a list of tags associated with the specified stream.&lt;/p&gt;&lt;p&gt;In the request, you must specify either the &lt;code&gt;StreamName&lt;/code&gt; or the &lt;code&gt;StreamARN&lt;/code&gt;. &lt;/p&gt;</Abstract>
			<DeclaredIn>AWSKinesisVideoService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSKinesisVideoListTagsForStreamInput</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSKinesisVideoListTagsForStreamOutput</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)listTagsForStream:(AWSKinesisVideoListTagsForStreamInput *)request completionHandler:(void ( ^ _Nullable ) ( AWSKinesisVideoListTagsForStreamOutput *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the ListTagsForStream service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSKinesisVideoErrorDomain domain and the following error code: AWSKinesisVideoErrorClientLimitExceeded, AWSKinesisVideoErrorInvalidArgument, AWSKinesisVideoErrorResourceNotFound, AWSKinesisVideoErrorNotAuthorized, AWSKinesisVideoErrorInvalidResourceFormat.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/listTagsForStream:completionHandler:</Anchor>
            <NodeRef refid="1273"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSKinesisVideo/tagStream:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Adds one or more tags to a stream. A &lt;i&gt;tag&lt;/i&gt; is a key-value pair (the value is optional) that you can define and assign to AWS resources. If you specify a tag that already exists, the tag value is replaced with the value that you specify in the request. For more information, see Using Cost Allocation Tags in the &lt;i&gt;AWS Billing and Cost Management User Guide&lt;/i&gt;. &lt;/p&gt;&lt;p&gt;You must provide either the &lt;code&gt;StreamName&lt;/code&gt; or the &lt;code&gt;StreamARN&lt;/code&gt;.&lt;/p&gt;&lt;p&gt;This operation requires permission for the &lt;code&gt;KinesisVideo:TagStream&lt;/code&gt; action.&lt;/p&gt;&lt;p&gt;Kinesis video streams support up to 50 tags.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSKinesisVideoService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSKinesisVideoTagStreamInput</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSKinesisVideoTagStreamOutput</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSKinesisVideoTagStreamOutput*&gt; *)tagStream:(AWSKinesisVideoTagStreamInput *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the TagStream service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSKinesisVideoTagStreamOutput. On failed execution, task.error may contain an NSError with AWSKinesisVideoErrorDomain domain and the following error code: AWSKinesisVideoErrorClientLimitExceeded, AWSKinesisVideoErrorInvalidArgument, AWSKinesisVideoErrorResourceNotFound, AWSKinesisVideoErrorNotAuthorized, AWSKinesisVideoErrorInvalidResourceFormat, AWSKinesisVideoErrorTagsPerResourceExceededLimit.</Abstract></ReturnValue>
			<Anchor>//api/name/tagStream:</Anchor>
            <NodeRef refid="1273"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSKinesisVideo/tagStream:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Adds one or more tags to a stream. A &lt;i&gt;tag&lt;/i&gt; is a key-value pair (the value is optional) that you can define and assign to AWS resources. If you specify a tag that already exists, the tag value is replaced with the value that you specify in the request. For more information, see Using Cost Allocation Tags in the &lt;i&gt;AWS Billing and Cost Management User Guide&lt;/i&gt;. &lt;/p&gt;&lt;p&gt;You must provide either the &lt;code&gt;StreamName&lt;/code&gt; or the &lt;code&gt;StreamARN&lt;/code&gt;.&lt;/p&gt;&lt;p&gt;This operation requires permission for the &lt;code&gt;KinesisVideo:TagStream&lt;/code&gt; action.&lt;/p&gt;&lt;p&gt;Kinesis video streams support up to 50 tags.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSKinesisVideoService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSKinesisVideoTagStreamInput</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSKinesisVideoTagStreamOutput</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)tagStream:(AWSKinesisVideoTagStreamInput *)request completionHandler:(void ( ^ _Nullable ) ( AWSKinesisVideoTagStreamOutput *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the TagStream service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSKinesisVideoErrorDomain domain and the following error code: AWSKinesisVideoErrorClientLimitExceeded, AWSKinesisVideoErrorInvalidArgument, AWSKinesisVideoErrorResourceNotFound, AWSKinesisVideoErrorNotAuthorized, AWSKinesisVideoErrorInvalidResourceFormat, AWSKinesisVideoErrorTagsPerResourceExceededLimit.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/tagStream:completionHandler:</Anchor>
            <NodeRef refid="1273"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSKinesisVideo/untagStream:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Removes one or more tags from a stream. In the request, specify only a tag key or keys; don&apos;t specify the value. If you specify a tag key that does not exist, it&apos;s ignored.&lt;/p&gt;&lt;p&gt;In the request, you must provide the &lt;code&gt;StreamName&lt;/code&gt; or &lt;code&gt;StreamARN&lt;/code&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSKinesisVideoService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSKinesisVideoUntagStreamInput</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSKinesisVideoUntagStreamOutput</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSKinesisVideoUntagStreamOutput*&gt; *)untagStream:(AWSKinesisVideoUntagStreamInput *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the UntagStream service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSKinesisVideoUntagStreamOutput. On failed execution, task.error may contain an NSError with AWSKinesisVideoErrorDomain domain and the following error code: AWSKinesisVideoErrorClientLimitExceeded, AWSKinesisVideoErrorInvalidArgument, AWSKinesisVideoErrorResourceNotFound, AWSKinesisVideoErrorNotAuthorized, AWSKinesisVideoErrorInvalidResourceFormat.</Abstract></ReturnValue>
			<Anchor>//api/name/untagStream:</Anchor>
            <NodeRef refid="1273"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSKinesisVideo/untagStream:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Removes one or more tags from a stream. In the request, specify only a tag key or keys; don&apos;t specify the value. If you specify a tag key that does not exist, it&apos;s ignored.&lt;/p&gt;&lt;p&gt;In the request, you must provide the &lt;code&gt;StreamName&lt;/code&gt; or &lt;code&gt;StreamARN&lt;/code&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSKinesisVideoService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSKinesisVideoUntagStreamInput</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSKinesisVideoUntagStreamOutput</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)untagStream:(AWSKinesisVideoUntagStreamInput *)request completionHandler:(void ( ^ _Nullable ) ( AWSKinesisVideoUntagStreamOutput *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the UntagStream service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSKinesisVideoErrorDomain domain and the following error code: AWSKinesisVideoErrorClientLimitExceeded, AWSKinesisVideoErrorInvalidArgument, AWSKinesisVideoErrorResourceNotFound, AWSKinesisVideoErrorNotAuthorized, AWSKinesisVideoErrorInvalidResourceFormat.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/untagStream:completionHandler:</Anchor>
            <NodeRef refid="1273"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSKinesisVideo/updateDataRetention:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt; Increases or decreases the stream&apos;s data retention period by the value that you specify. To indicate whether you want to increase or decrease the data retention period, specify the &lt;code&gt;Operation&lt;/code&gt; parameter in the request body. In the request, you must specify either the &lt;code&gt;StreamName&lt;/code&gt; or the &lt;code&gt;StreamARN&lt;/code&gt;. &lt;/p&gt;&lt;note&gt;&lt;p&gt;The retention period that you specify replaces the current value.&lt;/p&gt;&lt;/note&gt;&lt;p&gt;This operation requires permission for the &lt;code&gt;KinesisVideo:UpdateDataRetention&lt;/code&gt; action.&lt;/p&gt;&lt;p&gt;Changing the data retention period affects the data in the stream as follows:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;If the data retention period is increased, existing data is retained for the new retention period. For example, if the data retention period is increased from one hour to seven hours, all existing data is retained for seven hours.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;If the data retention period is decreased, existing data is retained for the new retention period. For example, if the data retention period is decreased from seven hours to one hour, all existing data is retained for one hour, and any data older than one hour is deleted immediately.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;</Abstract>
			<DeclaredIn>AWSKinesisVideoService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSKinesisVideoUpdateDataRetentionInput</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSKinesisVideoUpdateDataRetentionOutput</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSKinesisVideoUpdateDataRetentionOutput*&gt; *)updateDataRetention:(AWSKinesisVideoUpdateDataRetentionInput *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the UpdateDataRetention service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSKinesisVideoUpdateDataRetentionOutput. On failed execution, task.error may contain an NSError with AWSKinesisVideoErrorDomain domain and the following error code: AWSKinesisVideoErrorClientLimitExceeded, AWSKinesisVideoErrorInvalidArgument, AWSKinesisVideoErrorResourceNotFound, AWSKinesisVideoErrorResourceInUse, AWSKinesisVideoErrorNotAuthorized, AWSKinesisVideoErrorVersionMismatch.</Abstract></ReturnValue>
			<Anchor>//api/name/updateDataRetention:</Anchor>
            <NodeRef refid="1273"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSKinesisVideo/updateDataRetention:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt; Increases or decreases the stream&apos;s data retention period by the value that you specify. To indicate whether you want to increase or decrease the data retention period, specify the &lt;code&gt;Operation&lt;/code&gt; parameter in the request body. In the request, you must specify either the &lt;code&gt;StreamName&lt;/code&gt; or the &lt;code&gt;StreamARN&lt;/code&gt;. &lt;/p&gt;&lt;note&gt;&lt;p&gt;The retention period that you specify replaces the current value.&lt;/p&gt;&lt;/note&gt;&lt;p&gt;This operation requires permission for the &lt;code&gt;KinesisVideo:UpdateDataRetention&lt;/code&gt; action.&lt;/p&gt;&lt;p&gt;Changing the data retention period affects the data in the stream as follows:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;If the data retention period is increased, existing data is retained for the new retention period. For example, if the data retention period is increased from one hour to seven hours, all existing data is retained for seven hours.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;If the data retention period is decreased, existing data is retained for the new retention period. For example, if the data retention period is decreased from seven hours to one hour, all existing data is retained for one hour, and any data older than one hour is deleted immediately.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;</Abstract>
			<DeclaredIn>AWSKinesisVideoService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSKinesisVideoUpdateDataRetentionInput</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSKinesisVideoUpdateDataRetentionOutput</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)updateDataRetention:(AWSKinesisVideoUpdateDataRetentionInput *)request completionHandler:(void ( ^ _Nullable ) ( AWSKinesisVideoUpdateDataRetentionOutput *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the UpdateDataRetention service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSKinesisVideoErrorDomain domain and the following error code: AWSKinesisVideoErrorClientLimitExceeded, AWSKinesisVideoErrorInvalidArgument, AWSKinesisVideoErrorResourceNotFound, AWSKinesisVideoErrorResourceInUse, AWSKinesisVideoErrorNotAuthorized, AWSKinesisVideoErrorVersionMismatch.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/updateDataRetention:completionHandler:</Anchor>
            <NodeRef refid="1273"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSKinesisVideo/updateStream:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Updates stream metadata, such as the device name and media type.&lt;/p&gt;&lt;p&gt;You must provide the stream name or the Amazon Resource Name (ARN) of the stream.&lt;/p&gt;&lt;p&gt;To make sure that you have the latest version of the stream before updating it, you can specify the stream version. Kinesis Video Streams assigns a version to each stream. When you update a stream, Kinesis Video Streams assigns a new version number. To get the latest stream version, use the &lt;code&gt;DescribeStream&lt;/code&gt; API. &lt;/p&gt;&lt;p&gt;&lt;code&gt;UpdateStream&lt;/code&gt; is an asynchronous operation, and takes time to complete.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSKinesisVideoService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSKinesisVideoUpdateStreamInput</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSKinesisVideoUpdateStreamOutput</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSKinesisVideoUpdateStreamOutput*&gt; *)updateStream:(AWSKinesisVideoUpdateStreamInput *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the UpdateStream service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSKinesisVideoUpdateStreamOutput. On failed execution, task.error may contain an NSError with AWSKinesisVideoErrorDomain domain and the following error code: AWSKinesisVideoErrorClientLimitExceeded, AWSKinesisVideoErrorInvalidArgument, AWSKinesisVideoErrorResourceNotFound, AWSKinesisVideoErrorResourceInUse, AWSKinesisVideoErrorNotAuthorized, AWSKinesisVideoErrorVersionMismatch.</Abstract></ReturnValue>
			<Anchor>//api/name/updateStream:</Anchor>
            <NodeRef refid="1273"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSKinesisVideo/updateStream:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Updates stream metadata, such as the device name and media type.&lt;/p&gt;&lt;p&gt;You must provide the stream name or the Amazon Resource Name (ARN) of the stream.&lt;/p&gt;&lt;p&gt;To make sure that you have the latest version of the stream before updating it, you can specify the stream version. Kinesis Video Streams assigns a version to each stream. When you update a stream, Kinesis Video Streams assigns a new version number. To get the latest stream version, use the &lt;code&gt;DescribeStream&lt;/code&gt; API. &lt;/p&gt;&lt;p&gt;&lt;code&gt;UpdateStream&lt;/code&gt; is an asynchronous operation, and takes time to complete.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSKinesisVideoService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSKinesisVideoUpdateStreamInput</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSKinesisVideoUpdateStreamOutput</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)updateStream:(AWSKinesisVideoUpdateStreamInput *)request completionHandler:(void ( ^ _Nullable ) ( AWSKinesisVideoUpdateStreamOutput *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the UpdateStream service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSKinesisVideoErrorDomain domain and the following error code: AWSKinesisVideoErrorClientLimitExceeded, AWSKinesisVideoErrorInvalidArgument, AWSKinesisVideoErrorResourceNotFound, AWSKinesisVideoErrorResourceInUse, AWSKinesisVideoErrorNotAuthorized, AWSKinesisVideoErrorVersionMismatch.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/updateStream:completionHandler:</Anchor>
            <NodeRef refid="1273"/>
		</Token>
		
        
        
	</File>
</Tokens>