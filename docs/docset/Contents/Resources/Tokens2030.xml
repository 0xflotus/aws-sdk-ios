<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/AWSSES.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/AWSSES</TokenIdentifier>
			<Abstract type="html">&lt;fullname&gt;Amazon Simple Email Service&lt;/fullname&gt;&lt;p&gt; This document contains reference information for the Amazon Simple Email Service (Amazon SES) API, version 2010-12-01. This document is best used in conjunction with the Amazon SES Developer Guide.&lt;/p&gt;&lt;/note&gt;</Abstract>
			<DeclaredIn>AWSSESService.h</DeclaredIn>
            
			
			<NodeRef refid="2030"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSES/setConfiguration:</TokenIdentifier>
			<Abstract type="html">The service configuration used to instantiate this service client.</Abstract>
			<DeclaredIn>AWSSESService.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong, readonly) AWSServiceConfiguration *configuration</Declaration>
			
			
			<Anchor>//api/name/configuration</Anchor>
            <NodeRef refid="2030"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSES/configuration</TokenIdentifier>
			<Abstract type="html">The service configuration used to instantiate this service client.</Abstract>
			<DeclaredIn>AWSSESService.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong, readonly) AWSServiceConfiguration *configuration</Declaration>
			
			
			<Anchor>//api/name/configuration</Anchor>
            <NodeRef refid="2030"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSSES/configuration</TokenIdentifier>
			<Abstract type="html">The service configuration used to instantiate this service client.</Abstract>
			<DeclaredIn>AWSSESService.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong, readonly) AWSServiceConfiguration *configuration</Declaration>
			
			
			<Anchor>//api/name/configuration</Anchor>
            <NodeRef refid="2030"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/AWSSES/defaultSES</TokenIdentifier>
			<Abstract type="html">Returns the singleton service client. If the singleton object does not exist, the SDK instantiates the default service client with defaultServiceConfiguration from [AWSServiceManager defaultServiceManager]. The reference to this object is maintained by the SDK, and you do not need to retain it manually.</Abstract>
			<DeclaredIn>AWSSESService.h</DeclaredIn>
			
			<Declaration>+ (instancetype)defaultSES</Declaration>
			
			<ReturnValue><Abstract type="html">The default service client.</Abstract></ReturnValue>
			<Anchor>//api/name/defaultSES</Anchor>
            <NodeRef refid="2030"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/AWSSES/registerSESWithConfiguration:forKey:</TokenIdentifier>
			<Abstract type="html">Creates a service client with the given service configuration and registers it for the key.</Abstract>
			<DeclaredIn>AWSSESService.h</DeclaredIn>
			
			<Declaration>+ (void)registerSESWithConfiguration:(AWSServiceConfiguration *)configuration forKey:(NSString *)key</Declaration>
			<Parameters>
				<Parameter>
					<Name>configuration</Name>
					<Abstract type="html">A service configuration object.</Abstract>
				</Parameter><Parameter>
					<Name>key</Name>
					<Abstract type="html">A string to identify the service client.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/registerSESWithConfiguration:forKey:</Anchor>
            <NodeRef refid="2030"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/AWSSES/SESForKey:</TokenIdentifier>
			<Abstract type="html">Retrieves the service client associated with the key. You need to call + registerSESWithConfiguration:forKey: before invoking this method.</Abstract>
			<DeclaredIn>AWSSESService.h</DeclaredIn>
			
			<Declaration>+ (instancetype)SESForKey:(NSString *)key</Declaration>
			<Parameters>
				<Parameter>
					<Name>key</Name>
					<Abstract type="html">A string to identify the service client.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of the service client.</Abstract></ReturnValue>
			<Anchor>//api/name/SESForKey:</Anchor>
            <NodeRef refid="2030"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/AWSSES/removeSESForKey:</TokenIdentifier>
			<Abstract type="html">Removes the service client associated with the key and release it.</Abstract>
			<DeclaredIn>AWSSESService.h</DeclaredIn>
			
			<Declaration>+ (void)removeSESForKey:(NSString *)key</Declaration>
			<Parameters>
				<Parameter>
					<Name>key</Name>
					<Abstract type="html">A string to identify the service client.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/removeSESForKey:</Anchor>
            <NodeRef refid="2030"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSES/cloneReceiptRuleSet:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Creates a receipt rule set by cloning an existing one. All receipt rules and configurations are copied to the new receipt rule set and are completely independent of the source rule set.&lt;/p&gt;&lt;p&gt;For information about setting up rule sets, see the Amazon SES Developer Guide.&lt;/p&gt;&lt;p&gt;You can execute this operation no more than once per second.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSESService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESCloneReceiptRuleSetRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESCloneReceiptRuleSetResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSSESCloneReceiptRuleSetResponse*&gt; *)cloneReceiptRuleSet:(AWSSESCloneReceiptRuleSetRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the CloneReceiptRuleSet service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSSESCloneReceiptRuleSetResponse. On failed execution, task.error may contain an NSError with AWSSESErrorDomain domain and the following error code: AWSSESErrorRuleSetDoesNotExist, AWSSESErrorAlreadyExists, AWSSESErrorLimitExceeded.</Abstract></ReturnValue>
			<Anchor>//api/name/cloneReceiptRuleSet:</Anchor>
            <NodeRef refid="2030"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSES/cloneReceiptRuleSet:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Creates a receipt rule set by cloning an existing one. All receipt rules and configurations are copied to the new receipt rule set and are completely independent of the source rule set.&lt;/p&gt;&lt;p&gt;For information about setting up rule sets, see the Amazon SES Developer Guide.&lt;/p&gt;&lt;p&gt;You can execute this operation no more than once per second.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSESService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESCloneReceiptRuleSetRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESCloneReceiptRuleSetResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)cloneReceiptRuleSet:(AWSSESCloneReceiptRuleSetRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSSESCloneReceiptRuleSetResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the CloneReceiptRuleSet service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSSESErrorDomain domain and the following error code: AWSSESErrorRuleSetDoesNotExist, AWSSESErrorAlreadyExists, AWSSESErrorLimitExceeded.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/cloneReceiptRuleSet:completionHandler:</Anchor>
            <NodeRef refid="2030"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSES/createConfigurationSet:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Creates a configuration set.&lt;/p&gt;&lt;p&gt;Configuration sets enable you to publish email sending events. For information about using configuration sets, see the Amazon SES Developer Guide.&lt;/p&gt;&lt;p&gt;You can execute this operation no more than once per second.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSESService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESCreateConfigurationSetRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESCreateConfigurationSetResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSSESCreateConfigurationSetResponse*&gt; *)createConfigurationSet:(AWSSESCreateConfigurationSetRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the CreateConfigurationSet service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSSESCreateConfigurationSetResponse. On failed execution, task.error may contain an NSError with AWSSESErrorDomain domain and the following error code: AWSSESErrorConfigurationSetAlreadyExists, AWSSESErrorInvalidConfigurationSet, AWSSESErrorLimitExceeded.</Abstract></ReturnValue>
			<Anchor>//api/name/createConfigurationSet:</Anchor>
            <NodeRef refid="2030"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSES/createConfigurationSet:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Creates a configuration set.&lt;/p&gt;&lt;p&gt;Configuration sets enable you to publish email sending events. For information about using configuration sets, see the Amazon SES Developer Guide.&lt;/p&gt;&lt;p&gt;You can execute this operation no more than once per second.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSESService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESCreateConfigurationSetRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESCreateConfigurationSetResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)createConfigurationSet:(AWSSESCreateConfigurationSetRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSSESCreateConfigurationSetResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the CreateConfigurationSet service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSSESErrorDomain domain and the following error code: AWSSESErrorConfigurationSetAlreadyExists, AWSSESErrorInvalidConfigurationSet, AWSSESErrorLimitExceeded.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/createConfigurationSet:completionHandler:</Anchor>
            <NodeRef refid="2030"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSES/createConfigurationSetEventDestination:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Creates a configuration set event destination.&lt;/p&gt;&lt;note&gt;&lt;p&gt;When you create or update an event destination, you must provide one, and only one, destination. The destination can be CloudWatch, Amazon Kinesis Firehose, or Amazon Simple Notification Service (Amazon SNS).&lt;/p&gt;&lt;/note&gt;&lt;p&gt;An event destination is the AWS service to which Amazon SES publishes the email sending events associated with a configuration set. For information about using configuration sets, see the Amazon SES Developer Guide.&lt;/p&gt;&lt;p&gt;You can execute this operation no more than once per second.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSESService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESCreateConfigurationSetEventDestinationRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESCreateConfigurationSetEventDestinationResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSSESCreateConfigurationSetEventDestinationResponse*&gt; *)createConfigurationSetEventDestination:(AWSSESCreateConfigurationSetEventDestinationRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the CreateConfigurationSetEventDestination service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSSESCreateConfigurationSetEventDestinationResponse. On failed execution, task.error may contain an NSError with AWSSESErrorDomain domain and the following error code: AWSSESErrorConfigurationSetDoesNotExist, AWSSESErrorEventDestinationAlreadyExists, AWSSESErrorInvalidCloudWatchDestination, AWSSESErrorInvalidFirehoseDestination, AWSSESErrorInvalidSNSDestination, AWSSESErrorLimitExceeded.</Abstract></ReturnValue>
			<Anchor>//api/name/createConfigurationSetEventDestination:</Anchor>
            <NodeRef refid="2030"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSES/createConfigurationSetEventDestination:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Creates a configuration set event destination.&lt;/p&gt;&lt;note&gt;&lt;p&gt;When you create or update an event destination, you must provide one, and only one, destination. The destination can be CloudWatch, Amazon Kinesis Firehose, or Amazon Simple Notification Service (Amazon SNS).&lt;/p&gt;&lt;/note&gt;&lt;p&gt;An event destination is the AWS service to which Amazon SES publishes the email sending events associated with a configuration set. For information about using configuration sets, see the Amazon SES Developer Guide.&lt;/p&gt;&lt;p&gt;You can execute this operation no more than once per second.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSESService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESCreateConfigurationSetEventDestinationRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESCreateConfigurationSetEventDestinationResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)createConfigurationSetEventDestination:(AWSSESCreateConfigurationSetEventDestinationRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSSESCreateConfigurationSetEventDestinationResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the CreateConfigurationSetEventDestination service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSSESErrorDomain domain and the following error code: AWSSESErrorConfigurationSetDoesNotExist, AWSSESErrorEventDestinationAlreadyExists, AWSSESErrorInvalidCloudWatchDestination, AWSSESErrorInvalidFirehoseDestination, AWSSESErrorInvalidSNSDestination, AWSSESErrorLimitExceeded.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/createConfigurationSetEventDestination:completionHandler:</Anchor>
            <NodeRef refid="2030"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSES/createConfigurationSetTrackingOptions:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Creates an association between a configuration set and a custom domain for open and click event tracking. &lt;/p&gt;&lt;p&gt;By default, images and links used for tracking open and click events are hosted on domains operated by Amazon SES. You can configure a subdomain of your own to handle these events. For information about using custom domains, see the Amazon SES Developer Guide.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSESService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESCreateConfigurationSetTrackingOptionsRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESCreateConfigurationSetTrackingOptionsResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSSESCreateConfigurationSetTrackingOptionsResponse*&gt; *)createConfigurationSetTrackingOptions:(AWSSESCreateConfigurationSetTrackingOptionsRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the CreateConfigurationSetTrackingOptions service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSSESCreateConfigurationSetTrackingOptionsResponse. On failed execution, task.error may contain an NSError with AWSSESErrorDomain domain and the following error code: AWSSESErrorConfigurationSetDoesNotExist, AWSSESErrorTrackingOptionsAlreadyExists, AWSSESErrorInvalidTrackingOptions.</Abstract></ReturnValue>
			<Anchor>//api/name/createConfigurationSetTrackingOptions:</Anchor>
            <NodeRef refid="2030"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSES/createConfigurationSetTrackingOptions:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Creates an association between a configuration set and a custom domain for open and click event tracking. &lt;/p&gt;&lt;p&gt;By default, images and links used for tracking open and click events are hosted on domains operated by Amazon SES. You can configure a subdomain of your own to handle these events. For information about using custom domains, see the Amazon SES Developer Guide.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSESService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESCreateConfigurationSetTrackingOptionsRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESCreateConfigurationSetTrackingOptionsResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)createConfigurationSetTrackingOptions:(AWSSESCreateConfigurationSetTrackingOptionsRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSSESCreateConfigurationSetTrackingOptionsResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the CreateConfigurationSetTrackingOptions service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSSESErrorDomain domain and the following error code: AWSSESErrorConfigurationSetDoesNotExist, AWSSESErrorTrackingOptionsAlreadyExists, AWSSESErrorInvalidTrackingOptions.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/createConfigurationSetTrackingOptions:completionHandler:</Anchor>
            <NodeRef refid="2030"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSES/createCustomVerificationEmailTemplate:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Creates a new custom verification email template.&lt;/p&gt;&lt;p&gt;For more information about custom verification email templates, see Using Custom Verification Email Templates in the &lt;i&gt;Amazon SES Developer Guide&lt;/i&gt;.&lt;/p&gt;&lt;p&gt;You can execute this operation no more than once per second.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSESService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESCreateCustomVerificationEmailTemplateRequest</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask *)createCustomVerificationEmailTemplate:(AWSSESCreateCustomVerificationEmailTemplateRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the CreateCustomVerificationEmailTemplate service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will be nil. On failed execution, task.error may contain an NSError with AWSSESErrorDomain domain and the following error code: AWSSESErrorCustomVerificationEmailTemplateAlreadyExists, AWSSESErrorFromEmailAddressNotVerified, AWSSESErrorCustomVerificationEmailInvalidContent, AWSSESErrorLimitExceeded.</Abstract></ReturnValue>
			<Anchor>//api/name/createCustomVerificationEmailTemplate:</Anchor>
            <NodeRef refid="2030"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSES/createCustomVerificationEmailTemplate:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Creates a new custom verification email template.&lt;/p&gt;&lt;p&gt;For more information about custom verification email templates, see Using Custom Verification Email Templates in the &lt;i&gt;Amazon SES Developer Guide&lt;/i&gt;.&lt;/p&gt;&lt;p&gt;You can execute this operation no more than once per second.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSESService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESCreateCustomVerificationEmailTemplateRequest</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)createCustomVerificationEmailTemplate:(AWSSESCreateCustomVerificationEmailTemplateRequest *)request completionHandler:(void ( ^ _Nullable ) ( NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the CreateCustomVerificationEmailTemplate service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSSESErrorDomain domain and the following error code: AWSSESErrorCustomVerificationEmailTemplateAlreadyExists, AWSSESErrorFromEmailAddressNotVerified, AWSSESErrorCustomVerificationEmailInvalidContent, AWSSESErrorLimitExceeded.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/createCustomVerificationEmailTemplate:completionHandler:</Anchor>
            <NodeRef refid="2030"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSES/createReceiptFilter:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Creates a new IP address filter.&lt;/p&gt;&lt;p&gt;For information about setting up IP address filters, see the Amazon SES Developer Guide.&lt;/p&gt;&lt;p&gt;You can execute this operation no more than once per second.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSESService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESCreateReceiptFilterRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESCreateReceiptFilterResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSSESCreateReceiptFilterResponse*&gt; *)createReceiptFilter:(AWSSESCreateReceiptFilterRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the CreateReceiptFilter service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSSESCreateReceiptFilterResponse. On failed execution, task.error may contain an NSError with AWSSESErrorDomain domain and the following error code: AWSSESErrorLimitExceeded, AWSSESErrorAlreadyExists.</Abstract></ReturnValue>
			<Anchor>//api/name/createReceiptFilter:</Anchor>
            <NodeRef refid="2030"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSES/createReceiptFilter:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Creates a new IP address filter.&lt;/p&gt;&lt;p&gt;For information about setting up IP address filters, see the Amazon SES Developer Guide.&lt;/p&gt;&lt;p&gt;You can execute this operation no more than once per second.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSESService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESCreateReceiptFilterRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESCreateReceiptFilterResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)createReceiptFilter:(AWSSESCreateReceiptFilterRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSSESCreateReceiptFilterResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the CreateReceiptFilter service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSSESErrorDomain domain and the following error code: AWSSESErrorLimitExceeded, AWSSESErrorAlreadyExists.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/createReceiptFilter:completionHandler:</Anchor>
            <NodeRef refid="2030"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSES/createReceiptRule:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Creates a receipt rule.&lt;/p&gt;&lt;p&gt;For information about setting up receipt rules, see the Amazon SES Developer Guide.&lt;/p&gt;&lt;p&gt;You can execute this operation no more than once per second.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSESService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESCreateReceiptRuleRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESCreateReceiptRuleResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSSESCreateReceiptRuleResponse*&gt; *)createReceiptRule:(AWSSESCreateReceiptRuleRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the CreateReceiptRule service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSSESCreateReceiptRuleResponse. On failed execution, task.error may contain an NSError with AWSSESErrorDomain domain and the following error code: AWSSESErrorInvalidSnsTopic, AWSSESErrorInvalidS3Configuration, AWSSESErrorInvalidLambdaFunction, AWSSESErrorAlreadyExists, AWSSESErrorRuleDoesNotExist, AWSSESErrorRuleSetDoesNotExist, AWSSESErrorLimitExceeded.</Abstract></ReturnValue>
			<Anchor>//api/name/createReceiptRule:</Anchor>
            <NodeRef refid="2030"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSES/createReceiptRule:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Creates a receipt rule.&lt;/p&gt;&lt;p&gt;For information about setting up receipt rules, see the Amazon SES Developer Guide.&lt;/p&gt;&lt;p&gt;You can execute this operation no more than once per second.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSESService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESCreateReceiptRuleRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESCreateReceiptRuleResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)createReceiptRule:(AWSSESCreateReceiptRuleRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSSESCreateReceiptRuleResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the CreateReceiptRule service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSSESErrorDomain domain and the following error code: AWSSESErrorInvalidSnsTopic, AWSSESErrorInvalidS3Configuration, AWSSESErrorInvalidLambdaFunction, AWSSESErrorAlreadyExists, AWSSESErrorRuleDoesNotExist, AWSSESErrorRuleSetDoesNotExist, AWSSESErrorLimitExceeded.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/createReceiptRule:completionHandler:</Anchor>
            <NodeRef refid="2030"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSES/createReceiptRuleSet:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Creates an empty receipt rule set.&lt;/p&gt;&lt;p&gt;For information about setting up receipt rule sets, see the Amazon SES Developer Guide.&lt;/p&gt;&lt;p&gt;You can execute this operation no more than once per second.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSESService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESCreateReceiptRuleSetRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESCreateReceiptRuleSetResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSSESCreateReceiptRuleSetResponse*&gt; *)createReceiptRuleSet:(AWSSESCreateReceiptRuleSetRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the CreateReceiptRuleSet service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSSESCreateReceiptRuleSetResponse. On failed execution, task.error may contain an NSError with AWSSESErrorDomain domain and the following error code: AWSSESErrorAlreadyExists, AWSSESErrorLimitExceeded.</Abstract></ReturnValue>
			<Anchor>//api/name/createReceiptRuleSet:</Anchor>
            <NodeRef refid="2030"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSES/createReceiptRuleSet:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Creates an empty receipt rule set.&lt;/p&gt;&lt;p&gt;For information about setting up receipt rule sets, see the Amazon SES Developer Guide.&lt;/p&gt;&lt;p&gt;You can execute this operation no more than once per second.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSESService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESCreateReceiptRuleSetRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESCreateReceiptRuleSetResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)createReceiptRuleSet:(AWSSESCreateReceiptRuleSetRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSSESCreateReceiptRuleSetResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the CreateReceiptRuleSet service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSSESErrorDomain domain and the following error code: AWSSESErrorAlreadyExists, AWSSESErrorLimitExceeded.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/createReceiptRuleSet:completionHandler:</Anchor>
            <NodeRef refid="2030"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSES/createTemplate:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Creates an email template. Email templates enable you to send personalized email to one or more destinations in a single API operation. For more information, see the Amazon SES Developer Guide.&lt;/p&gt;&lt;p&gt;You can execute this operation no more than once per second.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSESService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESCreateTemplateRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESCreateTemplateResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSSESCreateTemplateResponse*&gt; *)createTemplate:(AWSSESCreateTemplateRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the CreateTemplate service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSSESCreateTemplateResponse. On failed execution, task.error may contain an NSError with AWSSESErrorDomain domain and the following error code: AWSSESErrorAlreadyExists, AWSSESErrorInvalidTemplate, AWSSESErrorLimitExceeded.</Abstract></ReturnValue>
			<Anchor>//api/name/createTemplate:</Anchor>
            <NodeRef refid="2030"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSES/createTemplate:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Creates an email template. Email templates enable you to send personalized email to one or more destinations in a single API operation. For more information, see the Amazon SES Developer Guide.&lt;/p&gt;&lt;p&gt;You can execute this operation no more than once per second.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSESService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESCreateTemplateRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESCreateTemplateResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)createTemplate:(AWSSESCreateTemplateRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSSESCreateTemplateResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the CreateTemplate service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSSESErrorDomain domain and the following error code: AWSSESErrorAlreadyExists, AWSSESErrorInvalidTemplate, AWSSESErrorLimitExceeded.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/createTemplate:completionHandler:</Anchor>
            <NodeRef refid="2030"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSES/deleteConfigurationSet:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Deletes a configuration set. Configuration sets enable you to publish email sending events. For information about using configuration sets, see the Amazon SES Developer Guide.&lt;/p&gt;&lt;p&gt;You can execute this operation no more than once per second.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSESService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESDeleteConfigurationSetRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESDeleteConfigurationSetResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSSESDeleteConfigurationSetResponse*&gt; *)deleteConfigurationSet:(AWSSESDeleteConfigurationSetRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DeleteConfigurationSet service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSSESDeleteConfigurationSetResponse. On failed execution, task.error may contain an NSError with AWSSESErrorDomain domain and the following error code: AWSSESErrorConfigurationSetDoesNotExist.</Abstract></ReturnValue>
			<Anchor>//api/name/deleteConfigurationSet:</Anchor>
            <NodeRef refid="2030"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSES/deleteConfigurationSet:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Deletes a configuration set. Configuration sets enable you to publish email sending events. For information about using configuration sets, see the Amazon SES Developer Guide.&lt;/p&gt;&lt;p&gt;You can execute this operation no more than once per second.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSESService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESDeleteConfigurationSetRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESDeleteConfigurationSetResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)deleteConfigurationSet:(AWSSESDeleteConfigurationSetRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSSESDeleteConfigurationSetResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DeleteConfigurationSet service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSSESErrorDomain domain and the following error code: AWSSESErrorConfigurationSetDoesNotExist.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/deleteConfigurationSet:completionHandler:</Anchor>
            <NodeRef refid="2030"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSES/deleteConfigurationSetEventDestination:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Deletes a configuration set event destination. Configuration set event destinations are associated with configuration sets, which enable you to publish email sending events. For information about using configuration sets, see the Amazon SES Developer Guide.&lt;/p&gt;&lt;p&gt;You can execute this operation no more than once per second.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSESService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESDeleteConfigurationSetEventDestinationRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESDeleteConfigurationSetEventDestinationResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSSESDeleteConfigurationSetEventDestinationResponse*&gt; *)deleteConfigurationSetEventDestination:(AWSSESDeleteConfigurationSetEventDestinationRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DeleteConfigurationSetEventDestination service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSSESDeleteConfigurationSetEventDestinationResponse. On failed execution, task.error may contain an NSError with AWSSESErrorDomain domain and the following error code: AWSSESErrorConfigurationSetDoesNotExist, AWSSESErrorEventDestinationDoesNotExist.</Abstract></ReturnValue>
			<Anchor>//api/name/deleteConfigurationSetEventDestination:</Anchor>
            <NodeRef refid="2030"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSES/deleteConfigurationSetEventDestination:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Deletes a configuration set event destination. Configuration set event destinations are associated with configuration sets, which enable you to publish email sending events. For information about using configuration sets, see the Amazon SES Developer Guide.&lt;/p&gt;&lt;p&gt;You can execute this operation no more than once per second.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSESService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESDeleteConfigurationSetEventDestinationRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESDeleteConfigurationSetEventDestinationResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)deleteConfigurationSetEventDestination:(AWSSESDeleteConfigurationSetEventDestinationRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSSESDeleteConfigurationSetEventDestinationResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DeleteConfigurationSetEventDestination service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSSESErrorDomain domain and the following error code: AWSSESErrorConfigurationSetDoesNotExist, AWSSESErrorEventDestinationDoesNotExist.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/deleteConfigurationSetEventDestination:completionHandler:</Anchor>
            <NodeRef refid="2030"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSES/deleteConfigurationSetTrackingOptions:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Deletes an association between a configuration set and a custom domain for open and click event tracking.&lt;/p&gt;&lt;p&gt;By default, images and links used for tracking open and click events are hosted on domains operated by Amazon SES. You can configure a subdomain of your own to handle these events. For information about using custom domains, see the Amazon SES Developer Guide.&lt;/p&gt;&lt;note&gt;&lt;p&gt;Deleting this kind of association will result in emails sent using the specified configuration set to capture open and click events using the standard, Amazon SES-operated domains.&lt;/p&gt;&lt;/note&gt;</Abstract>
			<DeclaredIn>AWSSESService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESDeleteConfigurationSetTrackingOptionsRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESDeleteConfigurationSetTrackingOptionsResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSSESDeleteConfigurationSetTrackingOptionsResponse*&gt; *)deleteConfigurationSetTrackingOptions:(AWSSESDeleteConfigurationSetTrackingOptionsRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DeleteConfigurationSetTrackingOptions service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSSESDeleteConfigurationSetTrackingOptionsResponse. On failed execution, task.error may contain an NSError with AWSSESErrorDomain domain and the following error code: AWSSESErrorConfigurationSetDoesNotExist, AWSSESErrorTrackingOptionsDoesNotExist.</Abstract></ReturnValue>
			<Anchor>//api/name/deleteConfigurationSetTrackingOptions:</Anchor>
            <NodeRef refid="2030"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSES/deleteConfigurationSetTrackingOptions:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Deletes an association between a configuration set and a custom domain for open and click event tracking.&lt;/p&gt;&lt;p&gt;By default, images and links used for tracking open and click events are hosted on domains operated by Amazon SES. You can configure a subdomain of your own to handle these events. For information about using custom domains, see the Amazon SES Developer Guide.&lt;/p&gt;&lt;note&gt;&lt;p&gt;Deleting this kind of association will result in emails sent using the specified configuration set to capture open and click events using the standard, Amazon SES-operated domains.&lt;/p&gt;&lt;/note&gt;</Abstract>
			<DeclaredIn>AWSSESService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESDeleteConfigurationSetTrackingOptionsRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESDeleteConfigurationSetTrackingOptionsResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)deleteConfigurationSetTrackingOptions:(AWSSESDeleteConfigurationSetTrackingOptionsRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSSESDeleteConfigurationSetTrackingOptionsResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DeleteConfigurationSetTrackingOptions service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSSESErrorDomain domain and the following error code: AWSSESErrorConfigurationSetDoesNotExist, AWSSESErrorTrackingOptionsDoesNotExist.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/deleteConfigurationSetTrackingOptions:completionHandler:</Anchor>
            <NodeRef refid="2030"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSES/deleteCustomVerificationEmailTemplate:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Deletes an existing custom verification email template. &lt;/p&gt;&lt;p&gt;For more information about custom verification email templates, see Using Custom Verification Email Templates in the &lt;i&gt;Amazon SES Developer Guide&lt;/i&gt;.&lt;/p&gt;&lt;p&gt;You can execute this operation no more than once per second.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSESService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESDeleteCustomVerificationEmailTemplateRequest</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask *)deleteCustomVerificationEmailTemplate:(AWSSESDeleteCustomVerificationEmailTemplateRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DeleteCustomVerificationEmailTemplate service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will be nil.</Abstract></ReturnValue>
			<Anchor>//api/name/deleteCustomVerificationEmailTemplate:</Anchor>
            <NodeRef refid="2030"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSES/deleteCustomVerificationEmailTemplate:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Deletes an existing custom verification email template. &lt;/p&gt;&lt;p&gt;For more information about custom verification email templates, see Using Custom Verification Email Templates in the &lt;i&gt;Amazon SES Developer Guide&lt;/i&gt;.&lt;/p&gt;&lt;p&gt;You can execute this operation no more than once per second.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSESService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESDeleteCustomVerificationEmailTemplateRequest</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)deleteCustomVerificationEmailTemplate:(AWSSESDeleteCustomVerificationEmailTemplateRequest *)request completionHandler:(void ( ^ _Nullable ) ( NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DeleteCustomVerificationEmailTemplate service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          error - An error object that indicates why the request failed, or nil if the request was successful.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/deleteCustomVerificationEmailTemplate:completionHandler:</Anchor>
            <NodeRef refid="2030"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSES/deleteIdentity:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Deletes the specified identity (an email address or a domain) from the list of verified identities.&lt;/p&gt;&lt;p&gt;You can execute this operation no more than once per second.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSESService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESDeleteIdentityRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESDeleteIdentityResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSSESDeleteIdentityResponse*&gt; *)deleteIdentity:(AWSSESDeleteIdentityRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DeleteIdentity service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSSESDeleteIdentityResponse.</Abstract></ReturnValue>
			<Anchor>//api/name/deleteIdentity:</Anchor>
            <NodeRef refid="2030"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSES/deleteIdentity:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Deletes the specified identity (an email address or a domain) from the list of verified identities.&lt;/p&gt;&lt;p&gt;You can execute this operation no more than once per second.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSESService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESDeleteIdentityRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESDeleteIdentityResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)deleteIdentity:(AWSSESDeleteIdentityRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSSESDeleteIdentityResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DeleteIdentity service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/deleteIdentity:completionHandler:</Anchor>
            <NodeRef refid="2030"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSES/deleteIdentityPolicy:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Deletes the specified sending authorization policy for the given identity (an email address or a domain). This API returns successfully even if a policy with the specified name does not exist.&lt;/p&gt;&lt;note&gt;&lt;p&gt;This API is for the identity owner only. If you have not verified the identity, this API will return an error.&lt;/p&gt;&lt;/note&gt;&lt;p&gt;Sending authorization is a feature that enables an identity owner to authorize other senders to use its identities. For information about using sending authorization, see the Amazon SES Developer Guide.&lt;/p&gt;&lt;p&gt;You can execute this operation no more than once per second.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSESService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESDeleteIdentityPolicyRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESDeleteIdentityPolicyResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSSESDeleteIdentityPolicyResponse*&gt; *)deleteIdentityPolicy:(AWSSESDeleteIdentityPolicyRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DeleteIdentityPolicy service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSSESDeleteIdentityPolicyResponse.</Abstract></ReturnValue>
			<Anchor>//api/name/deleteIdentityPolicy:</Anchor>
            <NodeRef refid="2030"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSES/deleteIdentityPolicy:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Deletes the specified sending authorization policy for the given identity (an email address or a domain). This API returns successfully even if a policy with the specified name does not exist.&lt;/p&gt;&lt;note&gt;&lt;p&gt;This API is for the identity owner only. If you have not verified the identity, this API will return an error.&lt;/p&gt;&lt;/note&gt;&lt;p&gt;Sending authorization is a feature that enables an identity owner to authorize other senders to use its identities. For information about using sending authorization, see the Amazon SES Developer Guide.&lt;/p&gt;&lt;p&gt;You can execute this operation no more than once per second.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSESService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESDeleteIdentityPolicyRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESDeleteIdentityPolicyResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)deleteIdentityPolicy:(AWSSESDeleteIdentityPolicyRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSSESDeleteIdentityPolicyResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DeleteIdentityPolicy service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/deleteIdentityPolicy:completionHandler:</Anchor>
            <NodeRef refid="2030"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSES/deleteReceiptFilter:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Deletes the specified IP address filter.&lt;/p&gt;&lt;p&gt;For information about managing IP address filters, see the Amazon SES Developer Guide.&lt;/p&gt;&lt;p&gt;You can execute this operation no more than once per second.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSESService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESDeleteReceiptFilterRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESDeleteReceiptFilterResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSSESDeleteReceiptFilterResponse*&gt; *)deleteReceiptFilter:(AWSSESDeleteReceiptFilterRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DeleteReceiptFilter service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSSESDeleteReceiptFilterResponse.</Abstract></ReturnValue>
			<Anchor>//api/name/deleteReceiptFilter:</Anchor>
            <NodeRef refid="2030"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSES/deleteReceiptFilter:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Deletes the specified IP address filter.&lt;/p&gt;&lt;p&gt;For information about managing IP address filters, see the Amazon SES Developer Guide.&lt;/p&gt;&lt;p&gt;You can execute this operation no more than once per second.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSESService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESDeleteReceiptFilterRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESDeleteReceiptFilterResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)deleteReceiptFilter:(AWSSESDeleteReceiptFilterRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSSESDeleteReceiptFilterResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DeleteReceiptFilter service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/deleteReceiptFilter:completionHandler:</Anchor>
            <NodeRef refid="2030"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSES/deleteReceiptRule:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Deletes the specified receipt rule.&lt;/p&gt;&lt;p&gt;For information about managing receipt rules, see the Amazon SES Developer Guide.&lt;/p&gt;&lt;p&gt;You can execute this operation no more than once per second.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSESService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESDeleteReceiptRuleRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESDeleteReceiptRuleResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSSESDeleteReceiptRuleResponse*&gt; *)deleteReceiptRule:(AWSSESDeleteReceiptRuleRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DeleteReceiptRule service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSSESDeleteReceiptRuleResponse. On failed execution, task.error may contain an NSError with AWSSESErrorDomain domain and the following error code: AWSSESErrorRuleSetDoesNotExist.</Abstract></ReturnValue>
			<Anchor>//api/name/deleteReceiptRule:</Anchor>
            <NodeRef refid="2030"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSES/deleteReceiptRule:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Deletes the specified receipt rule.&lt;/p&gt;&lt;p&gt;For information about managing receipt rules, see the Amazon SES Developer Guide.&lt;/p&gt;&lt;p&gt;You can execute this operation no more than once per second.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSESService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESDeleteReceiptRuleRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESDeleteReceiptRuleResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)deleteReceiptRule:(AWSSESDeleteReceiptRuleRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSSESDeleteReceiptRuleResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DeleteReceiptRule service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSSESErrorDomain domain and the following error code: AWSSESErrorRuleSetDoesNotExist.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/deleteReceiptRule:completionHandler:</Anchor>
            <NodeRef refid="2030"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSES/deleteReceiptRuleSet:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Deletes the specified receipt rule set and all of the receipt rules it contains.&lt;/p&gt;&lt;note&gt;&lt;p&gt;The currently active rule set cannot be deleted.&lt;/p&gt;&lt;/note&gt;&lt;p&gt;For information about managing receipt rule sets, see the Amazon SES Developer Guide.&lt;/p&gt;&lt;p&gt;You can execute this operation no more than once per second.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSESService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESDeleteReceiptRuleSetRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESDeleteReceiptRuleSetResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSSESDeleteReceiptRuleSetResponse*&gt; *)deleteReceiptRuleSet:(AWSSESDeleteReceiptRuleSetRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DeleteReceiptRuleSet service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSSESDeleteReceiptRuleSetResponse. On failed execution, task.error may contain an NSError with AWSSESErrorDomain domain and the following error code: AWSSESErrorCannotDelete.</Abstract></ReturnValue>
			<Anchor>//api/name/deleteReceiptRuleSet:</Anchor>
            <NodeRef refid="2030"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSES/deleteReceiptRuleSet:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Deletes the specified receipt rule set and all of the receipt rules it contains.&lt;/p&gt;&lt;note&gt;&lt;p&gt;The currently active rule set cannot be deleted.&lt;/p&gt;&lt;/note&gt;&lt;p&gt;For information about managing receipt rule sets, see the Amazon SES Developer Guide.&lt;/p&gt;&lt;p&gt;You can execute this operation no more than once per second.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSESService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESDeleteReceiptRuleSetRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESDeleteReceiptRuleSetResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)deleteReceiptRuleSet:(AWSSESDeleteReceiptRuleSetRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSSESDeleteReceiptRuleSetResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DeleteReceiptRuleSet service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSSESErrorDomain domain and the following error code: AWSSESErrorCannotDelete.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/deleteReceiptRuleSet:completionHandler:</Anchor>
            <NodeRef refid="2030"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSES/deleteTemplate:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Deletes an email template.&lt;/p&gt;&lt;p&gt;You can execute this operation no more than once per second.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSESService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESDeleteTemplateRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESDeleteTemplateResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSSESDeleteTemplateResponse*&gt; *)deleteTemplate:(AWSSESDeleteTemplateRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DeleteTemplate service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSSESDeleteTemplateResponse.</Abstract></ReturnValue>
			<Anchor>//api/name/deleteTemplate:</Anchor>
            <NodeRef refid="2030"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSES/deleteTemplate:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Deletes an email template.&lt;/p&gt;&lt;p&gt;You can execute this operation no more than once per second.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSESService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESDeleteTemplateRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESDeleteTemplateResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)deleteTemplate:(AWSSESDeleteTemplateRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSSESDeleteTemplateResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DeleteTemplate service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/deleteTemplate:completionHandler:</Anchor>
            <NodeRef refid="2030"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSES/deleteVerifiedEmailAddress:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Deprecated. Use the &lt;code&gt;DeleteIdentity&lt;/code&gt; operation to delete email addresses and domains.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSESService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESDeleteVerifiedEmailAddressRequest</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask *)deleteVerifiedEmailAddress:(AWSSESDeleteVerifiedEmailAddressRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DeleteVerifiedEmailAddress service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will be nil.</Abstract></ReturnValue>
			<Anchor>//api/name/deleteVerifiedEmailAddress:</Anchor>
            <NodeRef refid="2030"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSES/deleteVerifiedEmailAddress:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Deprecated. Use the &lt;code&gt;DeleteIdentity&lt;/code&gt; operation to delete email addresses and domains.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSESService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESDeleteVerifiedEmailAddressRequest</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)deleteVerifiedEmailAddress:(AWSSESDeleteVerifiedEmailAddressRequest *)request completionHandler:(void ( ^ _Nullable ) ( NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DeleteVerifiedEmailAddress service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          error - An error object that indicates why the request failed, or nil if the request was successful.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/deleteVerifiedEmailAddress:completionHandler:</Anchor>
            <NodeRef refid="2030"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSES/describeActiveReceiptRuleSet:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Returns the metadata and receipt rules for the receipt rule set that is currently active.&lt;/p&gt;&lt;p&gt;For information about setting up receipt rule sets, see the Amazon SES Developer Guide.&lt;/p&gt;&lt;p&gt;You can execute this operation no more than once per second.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSESService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESDescribeActiveReceiptRuleSetRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESDescribeActiveReceiptRuleSetResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSSESDescribeActiveReceiptRuleSetResponse*&gt; *)describeActiveReceiptRuleSet:(AWSSESDescribeActiveReceiptRuleSetRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DescribeActiveReceiptRuleSet service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSSESDescribeActiveReceiptRuleSetResponse.</Abstract></ReturnValue>
			<Anchor>//api/name/describeActiveReceiptRuleSet:</Anchor>
            <NodeRef refid="2030"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSES/describeActiveReceiptRuleSet:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Returns the metadata and receipt rules for the receipt rule set that is currently active.&lt;/p&gt;&lt;p&gt;For information about setting up receipt rule sets, see the Amazon SES Developer Guide.&lt;/p&gt;&lt;p&gt;You can execute this operation no more than once per second.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSESService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESDescribeActiveReceiptRuleSetRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESDescribeActiveReceiptRuleSetResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)describeActiveReceiptRuleSet:(AWSSESDescribeActiveReceiptRuleSetRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSSESDescribeActiveReceiptRuleSetResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DescribeActiveReceiptRuleSet service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/describeActiveReceiptRuleSet:completionHandler:</Anchor>
            <NodeRef refid="2030"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSES/describeConfigurationSet:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Returns the details of the specified configuration set. For information about using configuration sets, see the Amazon SES Developer Guide.&lt;/p&gt;&lt;p&gt;You can execute this operation no more than once per second.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSESService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESDescribeConfigurationSetRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESDescribeConfigurationSetResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSSESDescribeConfigurationSetResponse*&gt; *)describeConfigurationSet:(AWSSESDescribeConfigurationSetRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DescribeConfigurationSet service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSSESDescribeConfigurationSetResponse. On failed execution, task.error may contain an NSError with AWSSESErrorDomain domain and the following error code: AWSSESErrorConfigurationSetDoesNotExist.</Abstract></ReturnValue>
			<Anchor>//api/name/describeConfigurationSet:</Anchor>
            <NodeRef refid="2030"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSES/describeConfigurationSet:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Returns the details of the specified configuration set. For information about using configuration sets, see the Amazon SES Developer Guide.&lt;/p&gt;&lt;p&gt;You can execute this operation no more than once per second.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSESService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESDescribeConfigurationSetRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESDescribeConfigurationSetResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)describeConfigurationSet:(AWSSESDescribeConfigurationSetRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSSESDescribeConfigurationSetResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DescribeConfigurationSet service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSSESErrorDomain domain and the following error code: AWSSESErrorConfigurationSetDoesNotExist.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/describeConfigurationSet:completionHandler:</Anchor>
            <NodeRef refid="2030"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSES/describeReceiptRule:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Returns the details of the specified receipt rule.&lt;/p&gt;&lt;p&gt;For information about setting up receipt rules, see the Amazon SES Developer Guide.&lt;/p&gt;&lt;p&gt;You can execute this operation no more than once per second.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSESService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESDescribeReceiptRuleRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESDescribeReceiptRuleResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSSESDescribeReceiptRuleResponse*&gt; *)describeReceiptRule:(AWSSESDescribeReceiptRuleRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DescribeReceiptRule service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSSESDescribeReceiptRuleResponse. On failed execution, task.error may contain an NSError with AWSSESErrorDomain domain and the following error code: AWSSESErrorRuleDoesNotExist, AWSSESErrorRuleSetDoesNotExist.</Abstract></ReturnValue>
			<Anchor>//api/name/describeReceiptRule:</Anchor>
            <NodeRef refid="2030"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSES/describeReceiptRule:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Returns the details of the specified receipt rule.&lt;/p&gt;&lt;p&gt;For information about setting up receipt rules, see the Amazon SES Developer Guide.&lt;/p&gt;&lt;p&gt;You can execute this operation no more than once per second.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSESService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESDescribeReceiptRuleRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESDescribeReceiptRuleResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)describeReceiptRule:(AWSSESDescribeReceiptRuleRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSSESDescribeReceiptRuleResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DescribeReceiptRule service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSSESErrorDomain domain and the following error code: AWSSESErrorRuleDoesNotExist, AWSSESErrorRuleSetDoesNotExist.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/describeReceiptRule:completionHandler:</Anchor>
            <NodeRef refid="2030"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSES/describeReceiptRuleSet:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Returns the details of the specified receipt rule set.&lt;/p&gt;&lt;p&gt;For information about managing receipt rule sets, see the Amazon SES Developer Guide.&lt;/p&gt;&lt;p&gt;You can execute this operation no more than once per second.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSESService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESDescribeReceiptRuleSetRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESDescribeReceiptRuleSetResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSSESDescribeReceiptRuleSetResponse*&gt; *)describeReceiptRuleSet:(AWSSESDescribeReceiptRuleSetRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DescribeReceiptRuleSet service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSSESDescribeReceiptRuleSetResponse. On failed execution, task.error may contain an NSError with AWSSESErrorDomain domain and the following error code: AWSSESErrorRuleSetDoesNotExist.</Abstract></ReturnValue>
			<Anchor>//api/name/describeReceiptRuleSet:</Anchor>
            <NodeRef refid="2030"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSES/describeReceiptRuleSet:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Returns the details of the specified receipt rule set.&lt;/p&gt;&lt;p&gt;For information about managing receipt rule sets, see the Amazon SES Developer Guide.&lt;/p&gt;&lt;p&gt;You can execute this operation no more than once per second.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSESService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESDescribeReceiptRuleSetRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESDescribeReceiptRuleSetResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)describeReceiptRuleSet:(AWSSESDescribeReceiptRuleSetRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSSESDescribeReceiptRuleSetResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DescribeReceiptRuleSet service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSSESErrorDomain domain and the following error code: AWSSESErrorRuleSetDoesNotExist.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/describeReceiptRuleSet:completionHandler:</Anchor>
            <NodeRef refid="2030"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSES/getAccountSendingEnabled:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Returns the email sending status of the Amazon SES account for the current region.&lt;/p&gt;&lt;p&gt;You can execute this operation no more than once per second.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSESService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESGetAccountSendingEnabledResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSSESGetAccountSendingEnabledResponse*&gt; *)getAccountSendingEnabled:(AWSRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the GetAccountSendingEnabled service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSSESGetAccountSendingEnabledResponse.</Abstract></ReturnValue>
			<Anchor>//api/name/getAccountSendingEnabled:</Anchor>
            <NodeRef refid="2030"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSES/getAccountSendingEnabled:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Returns the email sending status of the Amazon SES account for the current region.&lt;/p&gt;&lt;p&gt;You can execute this operation no more than once per second.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSESService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESGetAccountSendingEnabledResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)getAccountSendingEnabled:(AWSRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSSESGetAccountSendingEnabledResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the GetAccountSendingEnabled service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/getAccountSendingEnabled:completionHandler:</Anchor>
            <NodeRef refid="2030"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSES/getCustomVerificationEmailTemplate:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Returns the custom email verification template for the template name you specify.&lt;/p&gt;&lt;p&gt;For more information about custom verification email templates, see Using Custom Verification Email Templates in the &lt;i&gt;Amazon SES Developer Guide&lt;/i&gt;.&lt;/p&gt;&lt;p&gt;You can execute this operation no more than once per second.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSESService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESGetCustomVerificationEmailTemplateRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESGetCustomVerificationEmailTemplateResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSSESGetCustomVerificationEmailTemplateResponse*&gt; *)getCustomVerificationEmailTemplate:(AWSSESGetCustomVerificationEmailTemplateRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the GetCustomVerificationEmailTemplate service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSSESGetCustomVerificationEmailTemplateResponse. On failed execution, task.error may contain an NSError with AWSSESErrorDomain domain and the following error code: AWSSESErrorCustomVerificationEmailTemplateDoesNotExist.</Abstract></ReturnValue>
			<Anchor>//api/name/getCustomVerificationEmailTemplate:</Anchor>
            <NodeRef refid="2030"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSES/getCustomVerificationEmailTemplate:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Returns the custom email verification template for the template name you specify.&lt;/p&gt;&lt;p&gt;For more information about custom verification email templates, see Using Custom Verification Email Templates in the &lt;i&gt;Amazon SES Developer Guide&lt;/i&gt;.&lt;/p&gt;&lt;p&gt;You can execute this operation no more than once per second.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSESService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESGetCustomVerificationEmailTemplateRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESGetCustomVerificationEmailTemplateResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)getCustomVerificationEmailTemplate:(AWSSESGetCustomVerificationEmailTemplateRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSSESGetCustomVerificationEmailTemplateResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the GetCustomVerificationEmailTemplate service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSSESErrorDomain domain and the following error code: AWSSESErrorCustomVerificationEmailTemplateDoesNotExist.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/getCustomVerificationEmailTemplate:completionHandler:</Anchor>
            <NodeRef refid="2030"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSES/getIdentityDkimAttributes:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Returns the current status of Easy DKIM signing for an entity. For domain name identities, this operation also returns the DKIM tokens that are required for Easy DKIM signing, and whether Amazon SES has successfully verified that these tokens have been published.&lt;/p&gt;&lt;p&gt;This operation takes a list of identities as input and returns the following information for each:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;Whether Easy DKIM signing is enabled or disabled.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;A set of DKIM tokens that represent the identity. If the identity is an email address, the tokens represent the domain of that address.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Whether Amazon SES has successfully verified the DKIM tokens published in the domain&apos;s DNS. This information is only returned for domain name identities, not for email addresses.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;This operation is throttled at one request per second and can only get DKIM attributes for up to 100 identities at a time.&lt;/p&gt;&lt;p&gt;For more information about creating DNS records using DKIM tokens, go to the Amazon SES Developer Guide.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSESService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESGetIdentityDkimAttributesRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESGetIdentityDkimAttributesResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSSESGetIdentityDkimAttributesResponse*&gt; *)getIdentityDkimAttributes:(AWSSESGetIdentityDkimAttributesRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the GetIdentityDkimAttributes service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSSESGetIdentityDkimAttributesResponse.</Abstract></ReturnValue>
			<Anchor>//api/name/getIdentityDkimAttributes:</Anchor>
            <NodeRef refid="2030"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSES/getIdentityDkimAttributes:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Returns the current status of Easy DKIM signing for an entity. For domain name identities, this operation also returns the DKIM tokens that are required for Easy DKIM signing, and whether Amazon SES has successfully verified that these tokens have been published.&lt;/p&gt;&lt;p&gt;This operation takes a list of identities as input and returns the following information for each:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;Whether Easy DKIM signing is enabled or disabled.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;A set of DKIM tokens that represent the identity. If the identity is an email address, the tokens represent the domain of that address.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Whether Amazon SES has successfully verified the DKIM tokens published in the domain&apos;s DNS. This information is only returned for domain name identities, not for email addresses.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;This operation is throttled at one request per second and can only get DKIM attributes for up to 100 identities at a time.&lt;/p&gt;&lt;p&gt;For more information about creating DNS records using DKIM tokens, go to the Amazon SES Developer Guide.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSESService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESGetIdentityDkimAttributesRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESGetIdentityDkimAttributesResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)getIdentityDkimAttributes:(AWSSESGetIdentityDkimAttributesRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSSESGetIdentityDkimAttributesResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the GetIdentityDkimAttributes service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/getIdentityDkimAttributes:completionHandler:</Anchor>
            <NodeRef refid="2030"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSES/getIdentityMailFromDomainAttributes:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Returns the custom MAIL FROM attributes for a list of identities (email addresses : domains).&lt;/p&gt;&lt;p&gt;This operation is throttled at one request per second and can only get custom MAIL FROM attributes for up to 100 identities at a time.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSESService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESGetIdentityMailFromDomainAttributesRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESGetIdentityMailFromDomainAttributesResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSSESGetIdentityMailFromDomainAttributesResponse*&gt; *)getIdentityMailFromDomainAttributes:(AWSSESGetIdentityMailFromDomainAttributesRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the GetIdentityMailFromDomainAttributes service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSSESGetIdentityMailFromDomainAttributesResponse.</Abstract></ReturnValue>
			<Anchor>//api/name/getIdentityMailFromDomainAttributes:</Anchor>
            <NodeRef refid="2030"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSES/getIdentityMailFromDomainAttributes:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Returns the custom MAIL FROM attributes for a list of identities (email addresses : domains).&lt;/p&gt;&lt;p&gt;This operation is throttled at one request per second and can only get custom MAIL FROM attributes for up to 100 identities at a time.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSESService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESGetIdentityMailFromDomainAttributesRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESGetIdentityMailFromDomainAttributesResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)getIdentityMailFromDomainAttributes:(AWSSESGetIdentityMailFromDomainAttributesRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSSESGetIdentityMailFromDomainAttributesResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the GetIdentityMailFromDomainAttributes service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/getIdentityMailFromDomainAttributes:completionHandler:</Anchor>
            <NodeRef refid="2030"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSES/getIdentityNotificationAttributes:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Given a list of verified identities (email addresses and/or domains), returns a structure describing identity notification attributes.&lt;/p&gt;&lt;p&gt;This operation is throttled at one request per second and can only get notification attributes for up to 100 identities at a time.&lt;/p&gt;&lt;p&gt;For more information about using notifications with Amazon SES, see the Amazon SES Developer Guide.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSESService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESGetIdentityNotificationAttributesRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESGetIdentityNotificationAttributesResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSSESGetIdentityNotificationAttributesResponse*&gt; *)getIdentityNotificationAttributes:(AWSSESGetIdentityNotificationAttributesRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the GetIdentityNotificationAttributes service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSSESGetIdentityNotificationAttributesResponse.</Abstract></ReturnValue>
			<Anchor>//api/name/getIdentityNotificationAttributes:</Anchor>
            <NodeRef refid="2030"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSES/getIdentityNotificationAttributes:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Given a list of verified identities (email addresses and/or domains), returns a structure describing identity notification attributes.&lt;/p&gt;&lt;p&gt;This operation is throttled at one request per second and can only get notification attributes for up to 100 identities at a time.&lt;/p&gt;&lt;p&gt;For more information about using notifications with Amazon SES, see the Amazon SES Developer Guide.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSESService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESGetIdentityNotificationAttributesRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESGetIdentityNotificationAttributesResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)getIdentityNotificationAttributes:(AWSSESGetIdentityNotificationAttributesRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSSESGetIdentityNotificationAttributesResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the GetIdentityNotificationAttributes service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/getIdentityNotificationAttributes:completionHandler:</Anchor>
            <NodeRef refid="2030"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSES/getIdentityPolicies:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Returns the requested sending authorization policies for the given identity (an email address or a domain). The policies are returned as a map of policy names to policy contents. You can retrieve a maximum of 20 policies at a time.&lt;/p&gt;&lt;note&gt;&lt;p&gt;This API is for the identity owner only. If you have not verified the identity, this API will return an error.&lt;/p&gt;&lt;/note&gt;&lt;p&gt;Sending authorization is a feature that enables an identity owner to authorize other senders to use its identities. For information about using sending authorization, see the Amazon SES Developer Guide.&lt;/p&gt;&lt;p&gt;You can execute this operation no more than once per second.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSESService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESGetIdentityPoliciesRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESGetIdentityPoliciesResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSSESGetIdentityPoliciesResponse*&gt; *)getIdentityPolicies:(AWSSESGetIdentityPoliciesRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the GetIdentityPolicies service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSSESGetIdentityPoliciesResponse.</Abstract></ReturnValue>
			<Anchor>//api/name/getIdentityPolicies:</Anchor>
            <NodeRef refid="2030"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSES/getIdentityPolicies:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Returns the requested sending authorization policies for the given identity (an email address or a domain). The policies are returned as a map of policy names to policy contents. You can retrieve a maximum of 20 policies at a time.&lt;/p&gt;&lt;note&gt;&lt;p&gt;This API is for the identity owner only. If you have not verified the identity, this API will return an error.&lt;/p&gt;&lt;/note&gt;&lt;p&gt;Sending authorization is a feature that enables an identity owner to authorize other senders to use its identities. For information about using sending authorization, see the Amazon SES Developer Guide.&lt;/p&gt;&lt;p&gt;You can execute this operation no more than once per second.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSESService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESGetIdentityPoliciesRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESGetIdentityPoliciesResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)getIdentityPolicies:(AWSSESGetIdentityPoliciesRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSSESGetIdentityPoliciesResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the GetIdentityPolicies service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/getIdentityPolicies:completionHandler:</Anchor>
            <NodeRef refid="2030"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSES/getIdentityVerificationAttributes:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Given a list of identities (email addresses and/or domains), returns the verification status and (for domain identities) the verification token for each identity.&lt;/p&gt;&lt;p&gt;The verification status of an email address is &quot;Pending&quot; until the email address owner clicks the link within the verification email that Amazon SES sent to that address. If the email address owner clicks the link within 24 hours, the verification status of the email address changes to &quot;Success&quot;. If the link is not clicked within 24 hours, the verification status changes to &quot;Failed.&quot; In that case, if you still want to verify the email address, you must restart the verification process from the beginning.&lt;/p&gt;&lt;p&gt;For domain identities, the domain&apos;s verification status is &quot;Pending&quot; as Amazon SES searches for the required TXT record in the DNS settings of the domain. When Amazon SES detects the record, the domain&apos;s verification status changes to &quot;Success&quot;. If Amazon SES is unable to detect the record within 72 hours, the domain&apos;s verification status changes to &quot;Failed.&quot; In that case, if you still want to verify the domain, you must restart the verification process from the beginning.&lt;/p&gt;&lt;p&gt;This operation is throttled at one request per second and can only get verification attributes for up to 100 identities at a time.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSESService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESGetIdentityVerificationAttributesRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESGetIdentityVerificationAttributesResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSSESGetIdentityVerificationAttributesResponse*&gt; *)getIdentityVerificationAttributes:(AWSSESGetIdentityVerificationAttributesRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the GetIdentityVerificationAttributes service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSSESGetIdentityVerificationAttributesResponse.</Abstract></ReturnValue>
			<Anchor>//api/name/getIdentityVerificationAttributes:</Anchor>
            <NodeRef refid="2030"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSES/getIdentityVerificationAttributes:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Given a list of identities (email addresses and/or domains), returns the verification status and (for domain identities) the verification token for each identity.&lt;/p&gt;&lt;p&gt;The verification status of an email address is &quot;Pending&quot; until the email address owner clicks the link within the verification email that Amazon SES sent to that address. If the email address owner clicks the link within 24 hours, the verification status of the email address changes to &quot;Success&quot;. If the link is not clicked within 24 hours, the verification status changes to &quot;Failed.&quot; In that case, if you still want to verify the email address, you must restart the verification process from the beginning.&lt;/p&gt;&lt;p&gt;For domain identities, the domain&apos;s verification status is &quot;Pending&quot; as Amazon SES searches for the required TXT record in the DNS settings of the domain. When Amazon SES detects the record, the domain&apos;s verification status changes to &quot;Success&quot;. If Amazon SES is unable to detect the record within 72 hours, the domain&apos;s verification status changes to &quot;Failed.&quot; In that case, if you still want to verify the domain, you must restart the verification process from the beginning.&lt;/p&gt;&lt;p&gt;This operation is throttled at one request per second and can only get verification attributes for up to 100 identities at a time.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSESService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESGetIdentityVerificationAttributesRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESGetIdentityVerificationAttributesResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)getIdentityVerificationAttributes:(AWSSESGetIdentityVerificationAttributesRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSSESGetIdentityVerificationAttributesResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the GetIdentityVerificationAttributes service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/getIdentityVerificationAttributes:completionHandler:</Anchor>
            <NodeRef refid="2030"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSES/getSendQuota:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Provides the sending limits for the Amazon SES account. &lt;/p&gt;&lt;p&gt;You can execute this operation no more than once per second.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSESService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESGetSendQuotaResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSSESGetSendQuotaResponse*&gt; *)getSendQuota:(AWSRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the GetSendQuota service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSSESGetSendQuotaResponse.</Abstract></ReturnValue>
			<Anchor>//api/name/getSendQuota:</Anchor>
            <NodeRef refid="2030"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSES/getSendQuota:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Provides the sending limits for the Amazon SES account. &lt;/p&gt;&lt;p&gt;You can execute this operation no more than once per second.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSESService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESGetSendQuotaResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)getSendQuota:(AWSRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSSESGetSendQuotaResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the GetSendQuota service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/getSendQuota:completionHandler:</Anchor>
            <NodeRef refid="2030"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSES/getSendStatistics:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Provides sending statistics for the current AWS Region. The result is a list of data points, representing the last two weeks of sending activity. Each data point in the list contains statistics for a 15-minute period of time.&lt;/p&gt;&lt;p&gt;You can execute this operation no more than once per second.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSESService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESGetSendStatisticsResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSSESGetSendStatisticsResponse*&gt; *)getSendStatistics:(AWSRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the GetSendStatistics service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSSESGetSendStatisticsResponse.</Abstract></ReturnValue>
			<Anchor>//api/name/getSendStatistics:</Anchor>
            <NodeRef refid="2030"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSES/getSendStatistics:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Provides sending statistics for the current AWS Region. The result is a list of data points, representing the last two weeks of sending activity. Each data point in the list contains statistics for a 15-minute period of time.&lt;/p&gt;&lt;p&gt;You can execute this operation no more than once per second.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSESService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESGetSendStatisticsResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)getSendStatistics:(AWSRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSSESGetSendStatisticsResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the GetSendStatistics service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/getSendStatistics:completionHandler:</Anchor>
            <NodeRef refid="2030"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSES/getTemplate:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Displays the template object (which includes the Subject line, HTML part and text part) for the template you specify.&lt;/p&gt;&lt;p&gt;You can execute this operation no more than once per second.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSESService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESGetTemplateRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESGetTemplateResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSSESGetTemplateResponse*&gt; *)getTemplate:(AWSSESGetTemplateRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the GetTemplate service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSSESGetTemplateResponse. On failed execution, task.error may contain an NSError with AWSSESErrorDomain domain and the following error code: AWSSESErrorTemplateDoesNotExist.</Abstract></ReturnValue>
			<Anchor>//api/name/getTemplate:</Anchor>
            <NodeRef refid="2030"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSES/getTemplate:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Displays the template object (which includes the Subject line, HTML part and text part) for the template you specify.&lt;/p&gt;&lt;p&gt;You can execute this operation no more than once per second.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSESService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESGetTemplateRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESGetTemplateResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)getTemplate:(AWSSESGetTemplateRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSSESGetTemplateResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the GetTemplate service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSSESErrorDomain domain and the following error code: AWSSESErrorTemplateDoesNotExist.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/getTemplate:completionHandler:</Anchor>
            <NodeRef refid="2030"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSES/listConfigurationSets:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Provides a list of the configuration sets associated with your Amazon SES account in the current AWS Region. For information about using configuration sets, see Monitoring Your Amazon SES Sending Activity in the &lt;i&gt;Amazon SES Developer Guide.&lt;/i&gt;&lt;/p&gt;&lt;p&gt;You can execute this operation no more than once per second. This operation will return up to 1,000 configuration sets each time it is run. If your Amazon SES account has more than 1,000 configuration sets, this operation will also return a NextToken element. You can then execute the &lt;code&gt;ListConfigurationSets&lt;/code&gt; operation again, passing the &lt;code&gt;NextToken&lt;/code&gt; parameter and the value of the NextToken element to retrieve additional results.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSESService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESListConfigurationSetsRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESListConfigurationSetsResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSSESListConfigurationSetsResponse*&gt; *)listConfigurationSets:(AWSSESListConfigurationSetsRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the ListConfigurationSets service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSSESListConfigurationSetsResponse.</Abstract></ReturnValue>
			<Anchor>//api/name/listConfigurationSets:</Anchor>
            <NodeRef refid="2030"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSES/listConfigurationSets:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Provides a list of the configuration sets associated with your Amazon SES account in the current AWS Region. For information about using configuration sets, see Monitoring Your Amazon SES Sending Activity in the &lt;i&gt;Amazon SES Developer Guide.&lt;/i&gt;&lt;/p&gt;&lt;p&gt;You can execute this operation no more than once per second. This operation will return up to 1,000 configuration sets each time it is run. If your Amazon SES account has more than 1,000 configuration sets, this operation will also return a NextToken element. You can then execute the &lt;code&gt;ListConfigurationSets&lt;/code&gt; operation again, passing the &lt;code&gt;NextToken&lt;/code&gt; parameter and the value of the NextToken element to retrieve additional results.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSESService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESListConfigurationSetsRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESListConfigurationSetsResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)listConfigurationSets:(AWSSESListConfigurationSetsRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSSESListConfigurationSetsResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the ListConfigurationSets service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/listConfigurationSets:completionHandler:</Anchor>
            <NodeRef refid="2030"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSES/listCustomVerificationEmailTemplates:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Lists the existing custom verification email templates for your account in the current AWS Region.&lt;/p&gt;&lt;p&gt;For more information about custom verification email templates, see Using Custom Verification Email Templates in the &lt;i&gt;Amazon SES Developer Guide&lt;/i&gt;.&lt;/p&gt;&lt;p&gt;You can execute this operation no more than once per second.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSESService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESListCustomVerificationEmailTemplatesRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESListCustomVerificationEmailTemplatesResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSSESListCustomVerificationEmailTemplatesResponse*&gt; *)listCustomVerificationEmailTemplates:(AWSSESListCustomVerificationEmailTemplatesRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the ListCustomVerificationEmailTemplates service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSSESListCustomVerificationEmailTemplatesResponse.</Abstract></ReturnValue>
			<Anchor>//api/name/listCustomVerificationEmailTemplates:</Anchor>
            <NodeRef refid="2030"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSES/listCustomVerificationEmailTemplates:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Lists the existing custom verification email templates for your account in the current AWS Region.&lt;/p&gt;&lt;p&gt;For more information about custom verification email templates, see Using Custom Verification Email Templates in the &lt;i&gt;Amazon SES Developer Guide&lt;/i&gt;.&lt;/p&gt;&lt;p&gt;You can execute this operation no more than once per second.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSESService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESListCustomVerificationEmailTemplatesRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESListCustomVerificationEmailTemplatesResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)listCustomVerificationEmailTemplates:(AWSSESListCustomVerificationEmailTemplatesRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSSESListCustomVerificationEmailTemplatesResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the ListCustomVerificationEmailTemplates service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/listCustomVerificationEmailTemplates:completionHandler:</Anchor>
            <NodeRef refid="2030"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSES/listIdentities:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Returns a list containing all of the identities (email addresses and domains) for your AWS account in the current AWS Region, regardless of verification status.&lt;/p&gt;&lt;p&gt;You can execute this operation no more than once per second.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSESService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESListIdentitiesRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESListIdentitiesResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSSESListIdentitiesResponse*&gt; *)listIdentities:(AWSSESListIdentitiesRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the ListIdentities service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSSESListIdentitiesResponse.</Abstract></ReturnValue>
			<Anchor>//api/name/listIdentities:</Anchor>
            <NodeRef refid="2030"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSES/listIdentities:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Returns a list containing all of the identities (email addresses and domains) for your AWS account in the current AWS Region, regardless of verification status.&lt;/p&gt;&lt;p&gt;You can execute this operation no more than once per second.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSESService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESListIdentitiesRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESListIdentitiesResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)listIdentities:(AWSSESListIdentitiesRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSSESListIdentitiesResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the ListIdentities service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/listIdentities:completionHandler:</Anchor>
            <NodeRef refid="2030"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSES/listIdentityPolicies:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Returns a list of sending authorization policies that are attached to the given identity (an email address or a domain). This API returns only a list. If you want the actual policy content, you can use &lt;code&gt;GetIdentityPolicies&lt;/code&gt;.&lt;/p&gt;&lt;note&gt;&lt;p&gt;This API is for the identity owner only. If you have not verified the identity, this API will return an error.&lt;/p&gt;&lt;/note&gt;&lt;p&gt;Sending authorization is a feature that enables an identity owner to authorize other senders to use its identities. For information about using sending authorization, see the Amazon SES Developer Guide.&lt;/p&gt;&lt;p&gt;You can execute this operation no more than once per second.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSESService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESListIdentityPoliciesRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESListIdentityPoliciesResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSSESListIdentityPoliciesResponse*&gt; *)listIdentityPolicies:(AWSSESListIdentityPoliciesRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the ListIdentityPolicies service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSSESListIdentityPoliciesResponse.</Abstract></ReturnValue>
			<Anchor>//api/name/listIdentityPolicies:</Anchor>
            <NodeRef refid="2030"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSES/listIdentityPolicies:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Returns a list of sending authorization policies that are attached to the given identity (an email address or a domain). This API returns only a list. If you want the actual policy content, you can use &lt;code&gt;GetIdentityPolicies&lt;/code&gt;.&lt;/p&gt;&lt;note&gt;&lt;p&gt;This API is for the identity owner only. If you have not verified the identity, this API will return an error.&lt;/p&gt;&lt;/note&gt;&lt;p&gt;Sending authorization is a feature that enables an identity owner to authorize other senders to use its identities. For information about using sending authorization, see the Amazon SES Developer Guide.&lt;/p&gt;&lt;p&gt;You can execute this operation no more than once per second.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSESService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESListIdentityPoliciesRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESListIdentityPoliciesResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)listIdentityPolicies:(AWSSESListIdentityPoliciesRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSSESListIdentityPoliciesResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the ListIdentityPolicies service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/listIdentityPolicies:completionHandler:</Anchor>
            <NodeRef refid="2030"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSES/listReceiptFilters:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Lists the IP address filters associated with your AWS account in the current AWS Region.&lt;/p&gt;&lt;p&gt;For information about managing IP address filters, see the Amazon SES Developer Guide.&lt;/p&gt;&lt;p&gt;You can execute this operation no more than once per second.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSESService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESListReceiptFiltersRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESListReceiptFiltersResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSSESListReceiptFiltersResponse*&gt; *)listReceiptFilters:(AWSSESListReceiptFiltersRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the ListReceiptFilters service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSSESListReceiptFiltersResponse.</Abstract></ReturnValue>
			<Anchor>//api/name/listReceiptFilters:</Anchor>
            <NodeRef refid="2030"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSES/listReceiptFilters:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Lists the IP address filters associated with your AWS account in the current AWS Region.&lt;/p&gt;&lt;p&gt;For information about managing IP address filters, see the Amazon SES Developer Guide.&lt;/p&gt;&lt;p&gt;You can execute this operation no more than once per second.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSESService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESListReceiptFiltersRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESListReceiptFiltersResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)listReceiptFilters:(AWSSESListReceiptFiltersRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSSESListReceiptFiltersResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the ListReceiptFilters service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/listReceiptFilters:completionHandler:</Anchor>
            <NodeRef refid="2030"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSES/listReceiptRuleSets:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Lists the receipt rule sets that exist under your AWS account in the current AWS Region. If there are additional receipt rule sets to be retrieved, you will receive a &lt;code&gt;NextToken&lt;/code&gt; that you can provide to the next call to &lt;code&gt;ListReceiptRuleSets&lt;/code&gt; to retrieve the additional entries.&lt;/p&gt;&lt;p&gt;For information about managing receipt rule sets, see the Amazon SES Developer Guide.&lt;/p&gt;&lt;p&gt;You can execute this operation no more than once per second.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSESService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESListReceiptRuleSetsRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESListReceiptRuleSetsResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSSESListReceiptRuleSetsResponse*&gt; *)listReceiptRuleSets:(AWSSESListReceiptRuleSetsRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the ListReceiptRuleSets service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSSESListReceiptRuleSetsResponse.</Abstract></ReturnValue>
			<Anchor>//api/name/listReceiptRuleSets:</Anchor>
            <NodeRef refid="2030"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSES/listReceiptRuleSets:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Lists the receipt rule sets that exist under your AWS account in the current AWS Region. If there are additional receipt rule sets to be retrieved, you will receive a &lt;code&gt;NextToken&lt;/code&gt; that you can provide to the next call to &lt;code&gt;ListReceiptRuleSets&lt;/code&gt; to retrieve the additional entries.&lt;/p&gt;&lt;p&gt;For information about managing receipt rule sets, see the Amazon SES Developer Guide.&lt;/p&gt;&lt;p&gt;You can execute this operation no more than once per second.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSESService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESListReceiptRuleSetsRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESListReceiptRuleSetsResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)listReceiptRuleSets:(AWSSESListReceiptRuleSetsRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSSESListReceiptRuleSetsResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the ListReceiptRuleSets service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/listReceiptRuleSets:completionHandler:</Anchor>
            <NodeRef refid="2030"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSES/listTemplates:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Lists the email templates present in your Amazon SES account in the current AWS Region.&lt;/p&gt;&lt;p&gt;You can execute this operation no more than once per second.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSESService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESListTemplatesRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESListTemplatesResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSSESListTemplatesResponse*&gt; *)listTemplates:(AWSSESListTemplatesRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the ListTemplates service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSSESListTemplatesResponse.</Abstract></ReturnValue>
			<Anchor>//api/name/listTemplates:</Anchor>
            <NodeRef refid="2030"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSES/listTemplates:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Lists the email templates present in your Amazon SES account in the current AWS Region.&lt;/p&gt;&lt;p&gt;You can execute this operation no more than once per second.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSESService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESListTemplatesRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESListTemplatesResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)listTemplates:(AWSSESListTemplatesRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSSESListTemplatesResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the ListTemplates service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/listTemplates:completionHandler:</Anchor>
            <NodeRef refid="2030"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSES/listVerifiedEmailAddresses:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Deprecated. Use the &lt;code&gt;ListIdentities&lt;/code&gt; operation to list the email addresses and domains associated with your account.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSESService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESListVerifiedEmailAddressesResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSSESListVerifiedEmailAddressesResponse*&gt; *)listVerifiedEmailAddresses:(AWSRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the ListVerifiedEmailAddresses service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSSESListVerifiedEmailAddressesResponse.</Abstract></ReturnValue>
			<Anchor>//api/name/listVerifiedEmailAddresses:</Anchor>
            <NodeRef refid="2030"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSES/listVerifiedEmailAddresses:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Deprecated. Use the &lt;code&gt;ListIdentities&lt;/code&gt; operation to list the email addresses and domains associated with your account.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSESService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESListVerifiedEmailAddressesResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)listVerifiedEmailAddresses:(AWSRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSSESListVerifiedEmailAddressesResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the ListVerifiedEmailAddresses service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/listVerifiedEmailAddresses:completionHandler:</Anchor>
            <NodeRef refid="2030"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSES/putIdentityPolicy:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Adds or updates a sending authorization policy for the specified identity (an email address or a domain).&lt;/p&gt;&lt;note&gt;&lt;p&gt;This API is for the identity owner only. If you have not verified the identity, this API will return an error.&lt;/p&gt;&lt;/note&gt;&lt;p&gt;Sending authorization is a feature that enables an identity owner to authorize other senders to use its identities. For information about using sending authorization, see the Amazon SES Developer Guide.&lt;/p&gt;&lt;p&gt;You can execute this operation no more than once per second.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSESService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESPutIdentityPolicyRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESPutIdentityPolicyResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSSESPutIdentityPolicyResponse*&gt; *)putIdentityPolicy:(AWSSESPutIdentityPolicyRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the PutIdentityPolicy service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSSESPutIdentityPolicyResponse. On failed execution, task.error may contain an NSError with AWSSESErrorDomain domain and the following error code: AWSSESErrorInvalidPolicy.</Abstract></ReturnValue>
			<Anchor>//api/name/putIdentityPolicy:</Anchor>
            <NodeRef refid="2030"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSES/putIdentityPolicy:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Adds or updates a sending authorization policy for the specified identity (an email address or a domain).&lt;/p&gt;&lt;note&gt;&lt;p&gt;This API is for the identity owner only. If you have not verified the identity, this API will return an error.&lt;/p&gt;&lt;/note&gt;&lt;p&gt;Sending authorization is a feature that enables an identity owner to authorize other senders to use its identities. For information about using sending authorization, see the Amazon SES Developer Guide.&lt;/p&gt;&lt;p&gt;You can execute this operation no more than once per second.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSESService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESPutIdentityPolicyRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESPutIdentityPolicyResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)putIdentityPolicy:(AWSSESPutIdentityPolicyRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSSESPutIdentityPolicyResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the PutIdentityPolicy service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSSESErrorDomain domain and the following error code: AWSSESErrorInvalidPolicy.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/putIdentityPolicy:completionHandler:</Anchor>
            <NodeRef refid="2030"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSES/reorderReceiptRuleSet:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Reorders the receipt rules within a receipt rule set.&lt;/p&gt;&lt;note&gt;&lt;p&gt;All of the rules in the rule set must be represented in this request. That is, this API will return an error if the reorder request doesn&apos;t explicitly position all of the rules.&lt;/p&gt;&lt;/note&gt;&lt;p&gt;For information about managing receipt rule sets, see the Amazon SES Developer Guide.&lt;/p&gt;&lt;p&gt;You can execute this operation no more than once per second.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSESService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESReorderReceiptRuleSetRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESReorderReceiptRuleSetResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSSESReorderReceiptRuleSetResponse*&gt; *)reorderReceiptRuleSet:(AWSSESReorderReceiptRuleSetRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the ReorderReceiptRuleSet service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSSESReorderReceiptRuleSetResponse. On failed execution, task.error may contain an NSError with AWSSESErrorDomain domain and the following error code: AWSSESErrorRuleSetDoesNotExist, AWSSESErrorRuleDoesNotExist.</Abstract></ReturnValue>
			<Anchor>//api/name/reorderReceiptRuleSet:</Anchor>
            <NodeRef refid="2030"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSES/reorderReceiptRuleSet:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Reorders the receipt rules within a receipt rule set.&lt;/p&gt;&lt;note&gt;&lt;p&gt;All of the rules in the rule set must be represented in this request. That is, this API will return an error if the reorder request doesn&apos;t explicitly position all of the rules.&lt;/p&gt;&lt;/note&gt;&lt;p&gt;For information about managing receipt rule sets, see the Amazon SES Developer Guide.&lt;/p&gt;&lt;p&gt;You can execute this operation no more than once per second.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSESService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESReorderReceiptRuleSetRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESReorderReceiptRuleSetResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)reorderReceiptRuleSet:(AWSSESReorderReceiptRuleSetRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSSESReorderReceiptRuleSetResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the ReorderReceiptRuleSet service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSSESErrorDomain domain and the following error code: AWSSESErrorRuleSetDoesNotExist, AWSSESErrorRuleDoesNotExist.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/reorderReceiptRuleSet:completionHandler:</Anchor>
            <NodeRef refid="2030"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSES/sendBounce:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Generates and sends a bounce message to the sender of an email you received through Amazon SES. You can only use this API on an email up to 24 hours after you receive it.&lt;/p&gt;&lt;note&gt;&lt;p&gt;You cannot use this API to send generic bounces for mail that was not received by Amazon SES.&lt;/p&gt;&lt;/note&gt;&lt;p&gt;For information about receiving email through Amazon SES, see the Amazon SES Developer Guide.&lt;/p&gt;&lt;p&gt;You can execute this operation no more than once per second.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSESService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESSendBounceRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESSendBounceResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSSESSendBounceResponse*&gt; *)sendBounce:(AWSSESSendBounceRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the SendBounce service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSSESSendBounceResponse. On failed execution, task.error may contain an NSError with AWSSESErrorDomain domain and the following error code: AWSSESErrorMessageRejected.</Abstract></ReturnValue>
			<Anchor>//api/name/sendBounce:</Anchor>
            <NodeRef refid="2030"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSES/sendBounce:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Generates and sends a bounce message to the sender of an email you received through Amazon SES. You can only use this API on an email up to 24 hours after you receive it.&lt;/p&gt;&lt;note&gt;&lt;p&gt;You cannot use this API to send generic bounces for mail that was not received by Amazon SES.&lt;/p&gt;&lt;/note&gt;&lt;p&gt;For information about receiving email through Amazon SES, see the Amazon SES Developer Guide.&lt;/p&gt;&lt;p&gt;You can execute this operation no more than once per second.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSESService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESSendBounceRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESSendBounceResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)sendBounce:(AWSSESSendBounceRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSSESSendBounceResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the SendBounce service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSSESErrorDomain domain and the following error code: AWSSESErrorMessageRejected.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/sendBounce:completionHandler:</Anchor>
            <NodeRef refid="2030"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSES/sendBulkTemplatedEmail:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Composes an email message to multiple destinations. The message body is created using an email template.&lt;/p&gt;&lt;p&gt;In order to send email using the &lt;code&gt;SendBulkTemplatedEmail&lt;/code&gt; operation, your call to the API must meet the following requirements:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;The call must refer to an existing email template. You can create email templates using the &lt;a&gt;CreateTemplate&lt;/a&gt; operation.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;The message must be sent from a verified email address or domain.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;If your account is still in the Amazon SES sandbox, you may only send to verified addresses or domains, or to email addresses associated with the Amazon SES Mailbox Simulator. For more information, see Verifying Email Addresses and Domains in the &lt;i&gt;Amazon SES Developer Guide.&lt;/i&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;The maximum message size is 10 MB.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Each &lt;code&gt;Destination&lt;/code&gt; parameter must include at least one recipient email address. The recipient address can be a To: address, a CC: address, or a BCC: address. If a recipient email address is invalid (that is, it is not in the format &lt;i&gt;UserName@[SubDomain.]Domain.TopLevelDomain&lt;/i&gt;), the entire message will be rejected, even if the message contains other recipients that are valid.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;The message may not include more than 50 recipients, across the To:, CC: and BCC: fields. If you need to send an email message to a larger audience, you can divide your recipient list into groups of 50 or fewer, and then call the &lt;code&gt;SendBulkTemplatedEmail&lt;/code&gt; operation several times to send the message to each group.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;The number of destinations you can contact in a single call to the API may be limited by your account&apos;s maximum sending rate.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;</Abstract>
			<DeclaredIn>AWSSESService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESSendBulkTemplatedEmailRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESSendBulkTemplatedEmailResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSSESSendBulkTemplatedEmailResponse*&gt; *)sendBulkTemplatedEmail:(AWSSESSendBulkTemplatedEmailRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the SendBulkTemplatedEmail service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSSESSendBulkTemplatedEmailResponse. On failed execution, task.error may contain an NSError with AWSSESErrorDomain domain and the following error code: AWSSESErrorMessageRejected, AWSSESErrorMailFromDomainNotVerified, AWSSESErrorConfigurationSetDoesNotExist, AWSSESErrorTemplateDoesNotExist, AWSSESErrorConfigurationSetSendingPaused, AWSSESErrorAccountSendingPaused.</Abstract></ReturnValue>
			<Anchor>//api/name/sendBulkTemplatedEmail:</Anchor>
            <NodeRef refid="2030"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSES/sendBulkTemplatedEmail:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Composes an email message to multiple destinations. The message body is created using an email template.&lt;/p&gt;&lt;p&gt;In order to send email using the &lt;code&gt;SendBulkTemplatedEmail&lt;/code&gt; operation, your call to the API must meet the following requirements:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;The call must refer to an existing email template. You can create email templates using the &lt;a&gt;CreateTemplate&lt;/a&gt; operation.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;The message must be sent from a verified email address or domain.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;If your account is still in the Amazon SES sandbox, you may only send to verified addresses or domains, or to email addresses associated with the Amazon SES Mailbox Simulator. For more information, see Verifying Email Addresses and Domains in the &lt;i&gt;Amazon SES Developer Guide.&lt;/i&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;The maximum message size is 10 MB.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Each &lt;code&gt;Destination&lt;/code&gt; parameter must include at least one recipient email address. The recipient address can be a To: address, a CC: address, or a BCC: address. If a recipient email address is invalid (that is, it is not in the format &lt;i&gt;UserName@[SubDomain.]Domain.TopLevelDomain&lt;/i&gt;), the entire message will be rejected, even if the message contains other recipients that are valid.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;The message may not include more than 50 recipients, across the To:, CC: and BCC: fields. If you need to send an email message to a larger audience, you can divide your recipient list into groups of 50 or fewer, and then call the &lt;code&gt;SendBulkTemplatedEmail&lt;/code&gt; operation several times to send the message to each group.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;The number of destinations you can contact in a single call to the API may be limited by your account&apos;s maximum sending rate.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;</Abstract>
			<DeclaredIn>AWSSESService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESSendBulkTemplatedEmailRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESSendBulkTemplatedEmailResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)sendBulkTemplatedEmail:(AWSSESSendBulkTemplatedEmailRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSSESSendBulkTemplatedEmailResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the SendBulkTemplatedEmail service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSSESErrorDomain domain and the following error code: AWSSESErrorMessageRejected, AWSSESErrorMailFromDomainNotVerified, AWSSESErrorConfigurationSetDoesNotExist, AWSSESErrorTemplateDoesNotExist, AWSSESErrorConfigurationSetSendingPaused, AWSSESErrorAccountSendingPaused.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/sendBulkTemplatedEmail:completionHandler:</Anchor>
            <NodeRef refid="2030"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSES/sendCustomVerificationEmail:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Adds an email address to the list of identities for your Amazon SES account in the current AWS Region and attempts to verify it. As a result of executing this operation, a customized verification email is sent to the specified address.&lt;/p&gt;&lt;p&gt;To use this operation, you must first create a custom verification email template. For more information about creating and using custom verification email templates, see Using Custom Verification Email Templates in the &lt;i&gt;Amazon SES Developer Guide&lt;/i&gt;.&lt;/p&gt;&lt;p&gt;You can execute this operation no more than once per second.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSESService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESSendCustomVerificationEmailRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESSendCustomVerificationEmailResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSSESSendCustomVerificationEmailResponse*&gt; *)sendCustomVerificationEmail:(AWSSESSendCustomVerificationEmailRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the SendCustomVerificationEmail service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSSESSendCustomVerificationEmailResponse. On failed execution, task.error may contain an NSError with AWSSESErrorDomain domain and the following error code: AWSSESErrorMessageRejected, AWSSESErrorConfigurationSetDoesNotExist, AWSSESErrorCustomVerificationEmailTemplateDoesNotExist, AWSSESErrorFromEmailAddressNotVerified, AWSSESErrorProductionAccessNotGranted.</Abstract></ReturnValue>
			<Anchor>//api/name/sendCustomVerificationEmail:</Anchor>
            <NodeRef refid="2030"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSES/sendCustomVerificationEmail:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Adds an email address to the list of identities for your Amazon SES account in the current AWS Region and attempts to verify it. As a result of executing this operation, a customized verification email is sent to the specified address.&lt;/p&gt;&lt;p&gt;To use this operation, you must first create a custom verification email template. For more information about creating and using custom verification email templates, see Using Custom Verification Email Templates in the &lt;i&gt;Amazon SES Developer Guide&lt;/i&gt;.&lt;/p&gt;&lt;p&gt;You can execute this operation no more than once per second.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSESService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESSendCustomVerificationEmailRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESSendCustomVerificationEmailResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)sendCustomVerificationEmail:(AWSSESSendCustomVerificationEmailRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSSESSendCustomVerificationEmailResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the SendCustomVerificationEmail service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSSESErrorDomain domain and the following error code: AWSSESErrorMessageRejected, AWSSESErrorConfigurationSetDoesNotExist, AWSSESErrorCustomVerificationEmailTemplateDoesNotExist, AWSSESErrorFromEmailAddressNotVerified, AWSSESErrorProductionAccessNotGranted.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/sendCustomVerificationEmail:completionHandler:</Anchor>
            <NodeRef refid="2030"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSES/sendEmail:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Composes an email message and immediately queues it for sending. In order to send email using the &lt;code&gt;SendEmail&lt;/code&gt; operation, your message must meet the following requirements:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;The message must be sent from a verified email address or domain. If you attempt to send email using a non-verified address or domain, the operation will result in an &quot;Email address not verified&quot; error. &lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;If your account is still in the Amazon SES sandbox, you may only send to verified addresses or domains, or to email addresses associated with the Amazon SES Mailbox Simulator. For more information, see Verifying Email Addresses and Domains in the &lt;i&gt;Amazon SES Developer Guide.&lt;/i&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;The maximum message size is 10 MB.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;The message must include at least one recipient email address. The recipient address can be a To: address, a CC: address, or a BCC: address. If a recipient email address is invalid (that is, it is not in the format &lt;i&gt;UserName@[SubDomain.]Domain.TopLevelDomain&lt;/i&gt;), the entire message will be rejected, even if the message contains other recipients that are valid.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;The message may not include more than 50 recipients, across the To:, CC: and BCC: fields. If you need to send an email message to a larger audience, you can divide your recipient list into groups of 50 or fewer, and then call the &lt;code&gt;SendEmail&lt;/code&gt; operation several times to send the message to each group.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;important&gt;&lt;p&gt;For every message that you send, the total number of recipients (including each recipient in the To:, CC: and BCC: fields) is counted against the maximum number of emails you can send in a 24-hour period (your &lt;i&gt;sending quota&lt;/i&gt;). For more information about sending quotas in Amazon SES, see Managing Your Amazon SES Sending Limits in the &lt;i&gt;Amazon SES Developer Guide.&lt;/i&gt;&lt;/p&gt;&lt;/important&gt;</Abstract>
			<DeclaredIn>AWSSESService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESSendEmailRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESSendEmailResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSSESSendEmailResponse*&gt; *)sendEmail:(AWSSESSendEmailRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the SendEmail service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSSESSendEmailResponse. On failed execution, task.error may contain an NSError with AWSSESErrorDomain domain and the following error code: AWSSESErrorMessageRejected, AWSSESErrorMailFromDomainNotVerified, AWSSESErrorConfigurationSetDoesNotExist, AWSSESErrorConfigurationSetSendingPaused, AWSSESErrorAccountSendingPaused.</Abstract></ReturnValue>
			<Anchor>//api/name/sendEmail:</Anchor>
            <NodeRef refid="2030"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSES/sendEmail:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Composes an email message and immediately queues it for sending. In order to send email using the &lt;code&gt;SendEmail&lt;/code&gt; operation, your message must meet the following requirements:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;The message must be sent from a verified email address or domain. If you attempt to send email using a non-verified address or domain, the operation will result in an &quot;Email address not verified&quot; error. &lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;If your account is still in the Amazon SES sandbox, you may only send to verified addresses or domains, or to email addresses associated with the Amazon SES Mailbox Simulator. For more information, see Verifying Email Addresses and Domains in the &lt;i&gt;Amazon SES Developer Guide.&lt;/i&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;The maximum message size is 10 MB.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;The message must include at least one recipient email address. The recipient address can be a To: address, a CC: address, or a BCC: address. If a recipient email address is invalid (that is, it is not in the format &lt;i&gt;UserName@[SubDomain.]Domain.TopLevelDomain&lt;/i&gt;), the entire message will be rejected, even if the message contains other recipients that are valid.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;The message may not include more than 50 recipients, across the To:, CC: and BCC: fields. If you need to send an email message to a larger audience, you can divide your recipient list into groups of 50 or fewer, and then call the &lt;code&gt;SendEmail&lt;/code&gt; operation several times to send the message to each group.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;important&gt;&lt;p&gt;For every message that you send, the total number of recipients (including each recipient in the To:, CC: and BCC: fields) is counted against the maximum number of emails you can send in a 24-hour period (your &lt;i&gt;sending quota&lt;/i&gt;). For more information about sending quotas in Amazon SES, see Managing Your Amazon SES Sending Limits in the &lt;i&gt;Amazon SES Developer Guide.&lt;/i&gt;&lt;/p&gt;&lt;/important&gt;</Abstract>
			<DeclaredIn>AWSSESService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESSendEmailRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESSendEmailResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)sendEmail:(AWSSESSendEmailRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSSESSendEmailResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the SendEmail service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSSESErrorDomain domain and the following error code: AWSSESErrorMessageRejected, AWSSESErrorMailFromDomainNotVerified, AWSSESErrorConfigurationSetDoesNotExist, AWSSESErrorConfigurationSetSendingPaused, AWSSESErrorAccountSendingPaused.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/sendEmail:completionHandler:</Anchor>
            <NodeRef refid="2030"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSES/sendRawEmail:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Composes an email message and immediately queues it for sending.&lt;/p&gt;&lt;p&gt;This operation is more flexible than the &lt;code&gt;SendEmail&lt;/code&gt; API operation. When you use the &lt;code&gt;SendRawEmail&lt;/code&gt; operation, you can specify the headers of the message as well as its content. This flexibility is useful, for example, when you want to send a multipart MIME email (such a message that contains both a text and an HTML version). You can also use this operation to send messages that include attachments.&lt;/p&gt;&lt;p&gt;The &lt;code&gt;SendRawEmail&lt;/code&gt; operation has the following requirements:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;You can only send email from Amazon SES mailbox simulator.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;The maximum message size, including attachments, is 10 MB.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Each message has to include at least one recipient address. A recipient address includes any address on the To:, CC:, or BCC: lines.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;If you send a single message to more than one recipient address, and one of the recipient addresses isn&apos;t in a valid format (that is, it&apos;s not in the format &lt;i&gt;UserName@[SubDomain.]Domain.TopLevelDomain&lt;/i&gt;), Amazon SES rejects the entire message, even if the other addresses are valid.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Each message can include up to 50 recipient addresses across the To:, CC:, or BCC: lines. If you need to send a single message to more than 50 recipients, you have to split the list of recipient addresses into groups of less than 50 recipients, and send separate messages to each group.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Amazon SES allows you to specify 8-bit Content-Transfer-Encoding for MIME message parts. However, if Amazon SES has to modify the contents of your message (for example, if you use open and click tracking), 8-bit content isn&apos;t preserved. For this reason, we highly recommend that you encode all content that isn&apos;t 7-bit ASCII. For more information, see Managing Your Amazon SES Sending Limits in the &lt;i&gt;Amazon SES Developer Guide.&lt;/i&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;</Abstract>
			<DeclaredIn>AWSSESService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESSendRawEmailRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESSendRawEmailResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSSESSendRawEmailResponse*&gt; *)sendRawEmail:(AWSSESSendRawEmailRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the SendRawEmail service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSSESSendRawEmailResponse. On failed execution, task.error may contain an NSError with AWSSESErrorDomain domain and the following error code: AWSSESErrorMessageRejected, AWSSESErrorMailFromDomainNotVerified, AWSSESErrorConfigurationSetDoesNotExist, AWSSESErrorConfigurationSetSendingPaused, AWSSESErrorAccountSendingPaused.</Abstract></ReturnValue>
			<Anchor>//api/name/sendRawEmail:</Anchor>
            <NodeRef refid="2030"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSES/sendRawEmail:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Composes an email message and immediately queues it for sending.&lt;/p&gt;&lt;p&gt;This operation is more flexible than the &lt;code&gt;SendEmail&lt;/code&gt; API operation. When you use the &lt;code&gt;SendRawEmail&lt;/code&gt; operation, you can specify the headers of the message as well as its content. This flexibility is useful, for example, when you want to send a multipart MIME email (such a message that contains both a text and an HTML version). You can also use this operation to send messages that include attachments.&lt;/p&gt;&lt;p&gt;The &lt;code&gt;SendRawEmail&lt;/code&gt; operation has the following requirements:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;You can only send email from Amazon SES mailbox simulator.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;The maximum message size, including attachments, is 10 MB.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Each message has to include at least one recipient address. A recipient address includes any address on the To:, CC:, or BCC: lines.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;If you send a single message to more than one recipient address, and one of the recipient addresses isn&apos;t in a valid format (that is, it&apos;s not in the format &lt;i&gt;UserName@[SubDomain.]Domain.TopLevelDomain&lt;/i&gt;), Amazon SES rejects the entire message, even if the other addresses are valid.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Each message can include up to 50 recipient addresses across the To:, CC:, or BCC: lines. If you need to send a single message to more than 50 recipients, you have to split the list of recipient addresses into groups of less than 50 recipients, and send separate messages to each group.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Amazon SES allows you to specify 8-bit Content-Transfer-Encoding for MIME message parts. However, if Amazon SES has to modify the contents of your message (for example, if you use open and click tracking), 8-bit content isn&apos;t preserved. For this reason, we highly recommend that you encode all content that isn&apos;t 7-bit ASCII. For more information, see Managing Your Amazon SES Sending Limits in the &lt;i&gt;Amazon SES Developer Guide.&lt;/i&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;</Abstract>
			<DeclaredIn>AWSSESService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESSendRawEmailRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESSendRawEmailResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)sendRawEmail:(AWSSESSendRawEmailRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSSESSendRawEmailResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the SendRawEmail service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSSESErrorDomain domain and the following error code: AWSSESErrorMessageRejected, AWSSESErrorMailFromDomainNotVerified, AWSSESErrorConfigurationSetDoesNotExist, AWSSESErrorConfigurationSetSendingPaused, AWSSESErrorAccountSendingPaused.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/sendRawEmail:completionHandler:</Anchor>
            <NodeRef refid="2030"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSES/sendTemplatedEmail:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Composes an email message using an email template and immediately queues it for sending.&lt;/p&gt;&lt;p&gt;In order to send email using the &lt;code&gt;SendTemplatedEmail&lt;/code&gt; operation, your call to the API must meet the following requirements:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;The call must refer to an existing email template. You can create email templates using the &lt;a&gt;CreateTemplate&lt;/a&gt; operation.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;The message must be sent from a verified email address or domain.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;If your account is still in the Amazon SES sandbox, you may only send to verified addresses or domains, or to email addresses associated with the Amazon SES Mailbox Simulator. For more information, see Verifying Email Addresses and Domains in the &lt;i&gt;Amazon SES Developer Guide.&lt;/i&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;The maximum message size is 10 MB.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Calls to the &lt;code&gt;SendTemplatedEmail&lt;/code&gt; operation may only include one &lt;code&gt;Destination&lt;/code&gt; parameter. A destination is a set of recipients who will receive the same version of the email. The &lt;code&gt;Destination&lt;/code&gt; parameter can include up to 50 recipients, across the To:, CC: and BCC: fields.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;The &lt;code&gt;Destination&lt;/code&gt; parameter must include at least one recipient email address. The recipient address can be a To: address, a CC: address, or a BCC: address. If a recipient email address is invalid (that is, it is not in the format &lt;i&gt;UserName@[SubDomain.]Domain.TopLevelDomain&lt;/i&gt;), the entire message will be rejected, even if the message contains other recipients that are valid.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;important&gt;&lt;p&gt;If your call to the &lt;code&gt;SendTemplatedEmail&lt;/code&gt; operation includes all of the required parameters, Amazon SES accepts it and returns a Message ID. However, if Amazon SES can&apos;t render the email because the template contains errors, it doesn&apos;t send the email. Additionally, because it already accepted the message, Amazon SES doesn&apos;t return a message stating that it was unable to send the email.&lt;/p&gt;&lt;p&gt;For these reasons, we highly recommend that you set up Amazon SES to send you notifications when Rendering Failure events occur. For more information, see Sending Personalized Email Using the Amazon SES API in the &lt;i&gt;Amazon Simple Email Service Developer Guide&lt;/i&gt;.&lt;/p&gt;&lt;/important&gt;</Abstract>
			<DeclaredIn>AWSSESService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESSendTemplatedEmailRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESSendTemplatedEmailResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSSESSendTemplatedEmailResponse*&gt; *)sendTemplatedEmail:(AWSSESSendTemplatedEmailRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the SendTemplatedEmail service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSSESSendTemplatedEmailResponse. On failed execution, task.error may contain an NSError with AWSSESErrorDomain domain and the following error code: AWSSESErrorMessageRejected, AWSSESErrorMailFromDomainNotVerified, AWSSESErrorConfigurationSetDoesNotExist, AWSSESErrorTemplateDoesNotExist, AWSSESErrorConfigurationSetSendingPaused, AWSSESErrorAccountSendingPaused.</Abstract></ReturnValue>
			<Anchor>//api/name/sendTemplatedEmail:</Anchor>
            <NodeRef refid="2030"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSES/sendTemplatedEmail:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Composes an email message using an email template and immediately queues it for sending.&lt;/p&gt;&lt;p&gt;In order to send email using the &lt;code&gt;SendTemplatedEmail&lt;/code&gt; operation, your call to the API must meet the following requirements:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;The call must refer to an existing email template. You can create email templates using the &lt;a&gt;CreateTemplate&lt;/a&gt; operation.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;The message must be sent from a verified email address or domain.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;If your account is still in the Amazon SES sandbox, you may only send to verified addresses or domains, or to email addresses associated with the Amazon SES Mailbox Simulator. For more information, see Verifying Email Addresses and Domains in the &lt;i&gt;Amazon SES Developer Guide.&lt;/i&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;The maximum message size is 10 MB.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Calls to the &lt;code&gt;SendTemplatedEmail&lt;/code&gt; operation may only include one &lt;code&gt;Destination&lt;/code&gt; parameter. A destination is a set of recipients who will receive the same version of the email. The &lt;code&gt;Destination&lt;/code&gt; parameter can include up to 50 recipients, across the To:, CC: and BCC: fields.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;The &lt;code&gt;Destination&lt;/code&gt; parameter must include at least one recipient email address. The recipient address can be a To: address, a CC: address, or a BCC: address. If a recipient email address is invalid (that is, it is not in the format &lt;i&gt;UserName@[SubDomain.]Domain.TopLevelDomain&lt;/i&gt;), the entire message will be rejected, even if the message contains other recipients that are valid.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;important&gt;&lt;p&gt;If your call to the &lt;code&gt;SendTemplatedEmail&lt;/code&gt; operation includes all of the required parameters, Amazon SES accepts it and returns a Message ID. However, if Amazon SES can&apos;t render the email because the template contains errors, it doesn&apos;t send the email. Additionally, because it already accepted the message, Amazon SES doesn&apos;t return a message stating that it was unable to send the email.&lt;/p&gt;&lt;p&gt;For these reasons, we highly recommend that you set up Amazon SES to send you notifications when Rendering Failure events occur. For more information, see Sending Personalized Email Using the Amazon SES API in the &lt;i&gt;Amazon Simple Email Service Developer Guide&lt;/i&gt;.&lt;/p&gt;&lt;/important&gt;</Abstract>
			<DeclaredIn>AWSSESService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESSendTemplatedEmailRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESSendTemplatedEmailResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)sendTemplatedEmail:(AWSSESSendTemplatedEmailRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSSESSendTemplatedEmailResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the SendTemplatedEmail service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSSESErrorDomain domain and the following error code: AWSSESErrorMessageRejected, AWSSESErrorMailFromDomainNotVerified, AWSSESErrorConfigurationSetDoesNotExist, AWSSESErrorTemplateDoesNotExist, AWSSESErrorConfigurationSetSendingPaused, AWSSESErrorAccountSendingPaused.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/sendTemplatedEmail:completionHandler:</Anchor>
            <NodeRef refid="2030"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSES/setActiveReceiptRuleSet:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Sets the specified receipt rule set as the active receipt rule set.&lt;/p&gt;&lt;note&gt;&lt;p&gt;To disable your email-receiving through Amazon SES completely, you can call this API with RuleSetName set to null.&lt;/p&gt;&lt;/note&gt;&lt;p&gt;For information about managing receipt rule sets, see the Amazon SES Developer Guide.&lt;/p&gt;&lt;p&gt;You can execute this operation no more than once per second.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSESService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESSetActiveReceiptRuleSetRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESSetActiveReceiptRuleSetResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSSESSetActiveReceiptRuleSetResponse*&gt; *)setActiveReceiptRuleSet:(AWSSESSetActiveReceiptRuleSetRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the SetActiveReceiptRuleSet service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSSESSetActiveReceiptRuleSetResponse. On failed execution, task.error may contain an NSError with AWSSESErrorDomain domain and the following error code: AWSSESErrorRuleSetDoesNotExist.</Abstract></ReturnValue>
			<Anchor>//api/name/setActiveReceiptRuleSet:</Anchor>
            <NodeRef refid="2030"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSES/setActiveReceiptRuleSet:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Sets the specified receipt rule set as the active receipt rule set.&lt;/p&gt;&lt;note&gt;&lt;p&gt;To disable your email-receiving through Amazon SES completely, you can call this API with RuleSetName set to null.&lt;/p&gt;&lt;/note&gt;&lt;p&gt;For information about managing receipt rule sets, see the Amazon SES Developer Guide.&lt;/p&gt;&lt;p&gt;You can execute this operation no more than once per second.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSESService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESSetActiveReceiptRuleSetRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESSetActiveReceiptRuleSetResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)setActiveReceiptRuleSet:(AWSSESSetActiveReceiptRuleSetRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSSESSetActiveReceiptRuleSetResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the SetActiveReceiptRuleSet service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSSESErrorDomain domain and the following error code: AWSSESErrorRuleSetDoesNotExist.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setActiveReceiptRuleSet:completionHandler:</Anchor>
            <NodeRef refid="2030"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSES/setIdentityDkimEnabled:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Enables or disables Easy DKIM signing of email sent from an identity:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;If Easy DKIM signing is enabled for a domain name identity (such as &lt;code&gt;example.com&lt;/code&gt;), then Amazon SES will DKIM-sign all email sent by addresses under that domain name (for example, &lt;code&gt;user@example.com&lt;/code&gt;).&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;If Easy DKIM signing is enabled for an email address, then Amazon SES will DKIM-sign all email sent by that email address.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;For email addresses (for example, &lt;code&gt;user@example.com&lt;/code&gt;), you can only enable Easy DKIM signing if the corresponding domain (in this case, &lt;code&gt;example.com&lt;/code&gt;) has been set up for Easy DKIM using the AWS Console or the &lt;code&gt;VerifyDomainDkim&lt;/code&gt; operation.&lt;/p&gt;&lt;p&gt;You can execute this operation no more than once per second.&lt;/p&gt;&lt;p&gt;For more information about Easy DKIM signing, go to the Amazon SES Developer Guide.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSESService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESSetIdentityDkimEnabledRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESSetIdentityDkimEnabledResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSSESSetIdentityDkimEnabledResponse*&gt; *)setIdentityDkimEnabled:(AWSSESSetIdentityDkimEnabledRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the SetIdentityDkimEnabled service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSSESSetIdentityDkimEnabledResponse.</Abstract></ReturnValue>
			<Anchor>//api/name/setIdentityDkimEnabled:</Anchor>
            <NodeRef refid="2030"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSES/setIdentityDkimEnabled:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Enables or disables Easy DKIM signing of email sent from an identity:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;If Easy DKIM signing is enabled for a domain name identity (such as &lt;code&gt;example.com&lt;/code&gt;), then Amazon SES will DKIM-sign all email sent by addresses under that domain name (for example, &lt;code&gt;user@example.com&lt;/code&gt;).&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;If Easy DKIM signing is enabled for an email address, then Amazon SES will DKIM-sign all email sent by that email address.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;For email addresses (for example, &lt;code&gt;user@example.com&lt;/code&gt;), you can only enable Easy DKIM signing if the corresponding domain (in this case, &lt;code&gt;example.com&lt;/code&gt;) has been set up for Easy DKIM using the AWS Console or the &lt;code&gt;VerifyDomainDkim&lt;/code&gt; operation.&lt;/p&gt;&lt;p&gt;You can execute this operation no more than once per second.&lt;/p&gt;&lt;p&gt;For more information about Easy DKIM signing, go to the Amazon SES Developer Guide.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSESService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESSetIdentityDkimEnabledRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESSetIdentityDkimEnabledResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)setIdentityDkimEnabled:(AWSSESSetIdentityDkimEnabledRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSSESSetIdentityDkimEnabledResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the SetIdentityDkimEnabled service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setIdentityDkimEnabled:completionHandler:</Anchor>
            <NodeRef refid="2030"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSES/setIdentityFeedbackForwardingEnabled:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Given an identity (an email address or a domain), enables or disables whether Amazon SES forwards bounce and complaint notifications as email. Feedback forwarding can only be disabled when Amazon Simple Notification Service (Amazon SNS) topics are specified for both bounces and complaints.&lt;/p&gt;&lt;note&gt;&lt;p&gt;Feedback forwarding does not apply to delivery notifications. Delivery notifications are only available through Amazon SNS.&lt;/p&gt;&lt;/note&gt;&lt;p&gt;You can execute this operation no more than once per second.&lt;/p&gt;&lt;p&gt;For more information about using notifications with Amazon SES, see the Amazon SES Developer Guide.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSESService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESSetIdentityFeedbackForwardingEnabledRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESSetIdentityFeedbackForwardingEnabledResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSSESSetIdentityFeedbackForwardingEnabledResponse*&gt; *)setIdentityFeedbackForwardingEnabled:(AWSSESSetIdentityFeedbackForwardingEnabledRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the SetIdentityFeedbackForwardingEnabled service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSSESSetIdentityFeedbackForwardingEnabledResponse.</Abstract></ReturnValue>
			<Anchor>//api/name/setIdentityFeedbackForwardingEnabled:</Anchor>
            <NodeRef refid="2030"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSES/setIdentityFeedbackForwardingEnabled:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Given an identity (an email address or a domain), enables or disables whether Amazon SES forwards bounce and complaint notifications as email. Feedback forwarding can only be disabled when Amazon Simple Notification Service (Amazon SNS) topics are specified for both bounces and complaints.&lt;/p&gt;&lt;note&gt;&lt;p&gt;Feedback forwarding does not apply to delivery notifications. Delivery notifications are only available through Amazon SNS.&lt;/p&gt;&lt;/note&gt;&lt;p&gt;You can execute this operation no more than once per second.&lt;/p&gt;&lt;p&gt;For more information about using notifications with Amazon SES, see the Amazon SES Developer Guide.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSESService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESSetIdentityFeedbackForwardingEnabledRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESSetIdentityFeedbackForwardingEnabledResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)setIdentityFeedbackForwardingEnabled:(AWSSESSetIdentityFeedbackForwardingEnabledRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSSESSetIdentityFeedbackForwardingEnabledResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the SetIdentityFeedbackForwardingEnabled service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setIdentityFeedbackForwardingEnabled:completionHandler:</Anchor>
            <NodeRef refid="2030"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSES/setIdentityHeadersInNotificationsEnabled:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Given an identity (an email address or a domain), sets whether Amazon SES includes the original email headers in the Amazon Simple Notification Service (Amazon SNS) notifications of a specified type.&lt;/p&gt;&lt;p&gt;You can execute this operation no more than once per second.&lt;/p&gt;&lt;p&gt;For more information about using notifications with Amazon SES, see the Amazon SES Developer Guide.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSESService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESSetIdentityHeadersInNotificationsEnabledRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESSetIdentityHeadersInNotificationsEnabledResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSSESSetIdentityHeadersInNotificationsEnabledResponse*&gt; *)setIdentityHeadersInNotificationsEnabled:(AWSSESSetIdentityHeadersInNotificationsEnabledRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the SetIdentityHeadersInNotificationsEnabled service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSSESSetIdentityHeadersInNotificationsEnabledResponse.</Abstract></ReturnValue>
			<Anchor>//api/name/setIdentityHeadersInNotificationsEnabled:</Anchor>
            <NodeRef refid="2030"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSES/setIdentityHeadersInNotificationsEnabled:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Given an identity (an email address or a domain), sets whether Amazon SES includes the original email headers in the Amazon Simple Notification Service (Amazon SNS) notifications of a specified type.&lt;/p&gt;&lt;p&gt;You can execute this operation no more than once per second.&lt;/p&gt;&lt;p&gt;For more information about using notifications with Amazon SES, see the Amazon SES Developer Guide.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSESService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESSetIdentityHeadersInNotificationsEnabledRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESSetIdentityHeadersInNotificationsEnabledResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)setIdentityHeadersInNotificationsEnabled:(AWSSESSetIdentityHeadersInNotificationsEnabledRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSSESSetIdentityHeadersInNotificationsEnabledResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the SetIdentityHeadersInNotificationsEnabled service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setIdentityHeadersInNotificationsEnabled:completionHandler:</Anchor>
            <NodeRef refid="2030"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSES/setIdentityMailFromDomain:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Enables or disables the custom MAIL FROM domain setup for a verified identity (an email address or a domain).&lt;/p&gt;&lt;important&gt;&lt;p&gt;To send emails using the specified MAIL FROM domain, you must add an MX record to your MAIL FROM domain&apos;s DNS settings. If you want your emails to pass Sender Policy Framework (SPF) checks, you must also add or update an SPF record. For more information, see the Amazon SES Developer Guide.&lt;/p&gt;&lt;/important&gt;&lt;p&gt;You can execute this operation no more than once per second.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSESService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESSetIdentityMailFromDomainRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESSetIdentityMailFromDomainResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSSESSetIdentityMailFromDomainResponse*&gt; *)setIdentityMailFromDomain:(AWSSESSetIdentityMailFromDomainRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the SetIdentityMailFromDomain service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSSESSetIdentityMailFromDomainResponse.</Abstract></ReturnValue>
			<Anchor>//api/name/setIdentityMailFromDomain:</Anchor>
            <NodeRef refid="2030"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSES/setIdentityMailFromDomain:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Enables or disables the custom MAIL FROM domain setup for a verified identity (an email address or a domain).&lt;/p&gt;&lt;important&gt;&lt;p&gt;To send emails using the specified MAIL FROM domain, you must add an MX record to your MAIL FROM domain&apos;s DNS settings. If you want your emails to pass Sender Policy Framework (SPF) checks, you must also add or update an SPF record. For more information, see the Amazon SES Developer Guide.&lt;/p&gt;&lt;/important&gt;&lt;p&gt;You can execute this operation no more than once per second.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSESService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESSetIdentityMailFromDomainRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESSetIdentityMailFromDomainResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)setIdentityMailFromDomain:(AWSSESSetIdentityMailFromDomainRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSSESSetIdentityMailFromDomainResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the SetIdentityMailFromDomain service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setIdentityMailFromDomain:completionHandler:</Anchor>
            <NodeRef refid="2030"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSES/setIdentityNotificationTopic:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Sets an Amazon Simple Notification Service (Amazon SNS) topic to use when delivering notifications. When you use this operation, you specify a verified identity, such as an email address or domain. When you send an email that uses the chosen identity in the Source field, Amazon SES sends notifications to the topic you specified. You can send bounce, complaint, or delivery notifications (or any combination of the three) to the Amazon SNS topic that you specify.&lt;/p&gt;&lt;p&gt;You can execute this operation no more than once per second.&lt;/p&gt;&lt;p&gt;For more information about feedback notification, see the Amazon SES Developer Guide.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSESService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESSetIdentityNotificationTopicRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESSetIdentityNotificationTopicResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSSESSetIdentityNotificationTopicResponse*&gt; *)setIdentityNotificationTopic:(AWSSESSetIdentityNotificationTopicRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the SetIdentityNotificationTopic service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSSESSetIdentityNotificationTopicResponse.</Abstract></ReturnValue>
			<Anchor>//api/name/setIdentityNotificationTopic:</Anchor>
            <NodeRef refid="2030"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSES/setIdentityNotificationTopic:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Sets an Amazon Simple Notification Service (Amazon SNS) topic to use when delivering notifications. When you use this operation, you specify a verified identity, such as an email address or domain. When you send an email that uses the chosen identity in the Source field, Amazon SES sends notifications to the topic you specified. You can send bounce, complaint, or delivery notifications (or any combination of the three) to the Amazon SNS topic that you specify.&lt;/p&gt;&lt;p&gt;You can execute this operation no more than once per second.&lt;/p&gt;&lt;p&gt;For more information about feedback notification, see the Amazon SES Developer Guide.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSESService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESSetIdentityNotificationTopicRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESSetIdentityNotificationTopicResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)setIdentityNotificationTopic:(AWSSESSetIdentityNotificationTopicRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSSESSetIdentityNotificationTopicResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the SetIdentityNotificationTopic service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setIdentityNotificationTopic:completionHandler:</Anchor>
            <NodeRef refid="2030"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSES/setReceiptRulePosition:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Sets the position of the specified receipt rule in the receipt rule set.&lt;/p&gt;&lt;p&gt;For information about managing receipt rules, see the Amazon SES Developer Guide.&lt;/p&gt;&lt;p&gt;You can execute this operation no more than once per second.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSESService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESSetReceiptRulePositionRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESSetReceiptRulePositionResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSSESSetReceiptRulePositionResponse*&gt; *)setReceiptRulePosition:(AWSSESSetReceiptRulePositionRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the SetReceiptRulePosition service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSSESSetReceiptRulePositionResponse. On failed execution, task.error may contain an NSError with AWSSESErrorDomain domain and the following error code: AWSSESErrorRuleSetDoesNotExist, AWSSESErrorRuleDoesNotExist.</Abstract></ReturnValue>
			<Anchor>//api/name/setReceiptRulePosition:</Anchor>
            <NodeRef refid="2030"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSES/setReceiptRulePosition:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Sets the position of the specified receipt rule in the receipt rule set.&lt;/p&gt;&lt;p&gt;For information about managing receipt rules, see the Amazon SES Developer Guide.&lt;/p&gt;&lt;p&gt;You can execute this operation no more than once per second.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSESService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESSetReceiptRulePositionRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESSetReceiptRulePositionResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)setReceiptRulePosition:(AWSSESSetReceiptRulePositionRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSSESSetReceiptRulePositionResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the SetReceiptRulePosition service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSSESErrorDomain domain and the following error code: AWSSESErrorRuleSetDoesNotExist, AWSSESErrorRuleDoesNotExist.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setReceiptRulePosition:completionHandler:</Anchor>
            <NodeRef refid="2030"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSES/testRenderTemplate:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Creates a preview of the MIME content of an email when provided with a template and a set of replacement data.&lt;/p&gt;&lt;p&gt;You can execute this operation no more than once per second.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSESService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESTestRenderTemplateRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESTestRenderTemplateResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSSESTestRenderTemplateResponse*&gt; *)testRenderTemplate:(AWSSESTestRenderTemplateRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the TestRenderTemplate service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSSESTestRenderTemplateResponse. On failed execution, task.error may contain an NSError with AWSSESErrorDomain domain and the following error code: AWSSESErrorTemplateDoesNotExist, AWSSESErrorInvalidRenderingParameter, AWSSESErrorMissingRenderingAttribute.</Abstract></ReturnValue>
			<Anchor>//api/name/testRenderTemplate:</Anchor>
            <NodeRef refid="2030"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSES/testRenderTemplate:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Creates a preview of the MIME content of an email when provided with a template and a set of replacement data.&lt;/p&gt;&lt;p&gt;You can execute this operation no more than once per second.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSESService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESTestRenderTemplateRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESTestRenderTemplateResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)testRenderTemplate:(AWSSESTestRenderTemplateRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSSESTestRenderTemplateResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the TestRenderTemplate service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSSESErrorDomain domain and the following error code: AWSSESErrorTemplateDoesNotExist, AWSSESErrorInvalidRenderingParameter, AWSSESErrorMissingRenderingAttribute.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/testRenderTemplate:completionHandler:</Anchor>
            <NodeRef refid="2030"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSES/updateAccountSendingEnabled:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Enables or disables email sending across your entire Amazon SES account in the current AWS Region. You can use this operation in conjunction with Amazon CloudWatch alarms to temporarily pause email sending across your Amazon SES account in a given AWS Region when reputation metrics (such as your bounce or complaint rates) reach certain thresholds.&lt;/p&gt;&lt;p&gt;You can execute this operation no more than once per second.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSESService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESUpdateAccountSendingEnabledRequest</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask *)updateAccountSendingEnabled:(AWSSESUpdateAccountSendingEnabledRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the UpdateAccountSendingEnabled service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will be nil.</Abstract></ReturnValue>
			<Anchor>//api/name/updateAccountSendingEnabled:</Anchor>
            <NodeRef refid="2030"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSES/updateAccountSendingEnabled:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Enables or disables email sending across your entire Amazon SES account in the current AWS Region. You can use this operation in conjunction with Amazon CloudWatch alarms to temporarily pause email sending across your Amazon SES account in a given AWS Region when reputation metrics (such as your bounce or complaint rates) reach certain thresholds.&lt;/p&gt;&lt;p&gt;You can execute this operation no more than once per second.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSESService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESUpdateAccountSendingEnabledRequest</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)updateAccountSendingEnabled:(AWSSESUpdateAccountSendingEnabledRequest *)request completionHandler:(void ( ^ _Nullable ) ( NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the UpdateAccountSendingEnabled service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          error - An error object that indicates why the request failed, or nil if the request was successful.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/updateAccountSendingEnabled:completionHandler:</Anchor>
            <NodeRef refid="2030"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSES/updateConfigurationSetEventDestination:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Updates the event destination of a configuration set. Event destinations are associated with configuration sets, which enable you to publish email sending events to Amazon CloudWatch, Amazon Kinesis Firehose, or Amazon Simple Notification Service (Amazon SNS). For information about using configuration sets, see Monitoring Your Amazon SES Sending Activity in the &lt;i&gt;Amazon SES Developer Guide.&lt;/i&gt;&lt;/p&gt;&lt;note&gt;&lt;p&gt;When you create or update an event destination, you must provide one, and only one, destination. The destination can be Amazon CloudWatch, Amazon Kinesis Firehose, or Amazon Simple Notification Service (Amazon SNS).&lt;/p&gt;&lt;/note&gt;&lt;p&gt;You can execute this operation no more than once per second.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSESService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESUpdateConfigurationSetEventDestinationRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESUpdateConfigurationSetEventDestinationResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSSESUpdateConfigurationSetEventDestinationResponse*&gt; *)updateConfigurationSetEventDestination:(AWSSESUpdateConfigurationSetEventDestinationRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the UpdateConfigurationSetEventDestination service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSSESUpdateConfigurationSetEventDestinationResponse. On failed execution, task.error may contain an NSError with AWSSESErrorDomain domain and the following error code: AWSSESErrorConfigurationSetDoesNotExist, AWSSESErrorEventDestinationDoesNotExist, AWSSESErrorInvalidCloudWatchDestination, AWSSESErrorInvalidFirehoseDestination, AWSSESErrorInvalidSNSDestination.</Abstract></ReturnValue>
			<Anchor>//api/name/updateConfigurationSetEventDestination:</Anchor>
            <NodeRef refid="2030"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSES/updateConfigurationSetEventDestination:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Updates the event destination of a configuration set. Event destinations are associated with configuration sets, which enable you to publish email sending events to Amazon CloudWatch, Amazon Kinesis Firehose, or Amazon Simple Notification Service (Amazon SNS). For information about using configuration sets, see Monitoring Your Amazon SES Sending Activity in the &lt;i&gt;Amazon SES Developer Guide.&lt;/i&gt;&lt;/p&gt;&lt;note&gt;&lt;p&gt;When you create or update an event destination, you must provide one, and only one, destination. The destination can be Amazon CloudWatch, Amazon Kinesis Firehose, or Amazon Simple Notification Service (Amazon SNS).&lt;/p&gt;&lt;/note&gt;&lt;p&gt;You can execute this operation no more than once per second.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSESService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESUpdateConfigurationSetEventDestinationRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESUpdateConfigurationSetEventDestinationResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)updateConfigurationSetEventDestination:(AWSSESUpdateConfigurationSetEventDestinationRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSSESUpdateConfigurationSetEventDestinationResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the UpdateConfigurationSetEventDestination service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSSESErrorDomain domain and the following error code: AWSSESErrorConfigurationSetDoesNotExist, AWSSESErrorEventDestinationDoesNotExist, AWSSESErrorInvalidCloudWatchDestination, AWSSESErrorInvalidFirehoseDestination, AWSSESErrorInvalidSNSDestination.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/updateConfigurationSetEventDestination:completionHandler:</Anchor>
            <NodeRef refid="2030"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSES/updateConfigurationSetReputationMetricsEnabled:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Enables or disables the publishing of reputation metrics for emails sent using a specific configuration set in a given AWS Region. Reputation metrics include bounce and complaint rates. These metrics are published to Amazon CloudWatch. By using CloudWatch, you can create alarms when bounce or complaint rates exceed certain thresholds.&lt;/p&gt;&lt;p&gt;You can execute this operation no more than once per second.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSESService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESUpdateConfigurationSetReputationMetricsEnabledRequest</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask *)updateConfigurationSetReputationMetricsEnabled:(AWSSESUpdateConfigurationSetReputationMetricsEnabledRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the UpdateConfigurationSetReputationMetricsEnabled service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will be nil. On failed execution, task.error may contain an NSError with AWSSESErrorDomain domain and the following error code: AWSSESErrorConfigurationSetDoesNotExist.</Abstract></ReturnValue>
			<Anchor>//api/name/updateConfigurationSetReputationMetricsEnabled:</Anchor>
            <NodeRef refid="2030"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSES/updateConfigurationSetReputationMetricsEnabled:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Enables or disables the publishing of reputation metrics for emails sent using a specific configuration set in a given AWS Region. Reputation metrics include bounce and complaint rates. These metrics are published to Amazon CloudWatch. By using CloudWatch, you can create alarms when bounce or complaint rates exceed certain thresholds.&lt;/p&gt;&lt;p&gt;You can execute this operation no more than once per second.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSESService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESUpdateConfigurationSetReputationMetricsEnabledRequest</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)updateConfigurationSetReputationMetricsEnabled:(AWSSESUpdateConfigurationSetReputationMetricsEnabledRequest *)request completionHandler:(void ( ^ _Nullable ) ( NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the UpdateConfigurationSetReputationMetricsEnabled service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSSESErrorDomain domain and the following error code: AWSSESErrorConfigurationSetDoesNotExist.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/updateConfigurationSetReputationMetricsEnabled:completionHandler:</Anchor>
            <NodeRef refid="2030"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSES/updateConfigurationSetSendingEnabled:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Enables or disables email sending for messages sent using a specific configuration set in a given AWS Region. You can use this operation in conjunction with Amazon CloudWatch alarms to temporarily pause email sending for a configuration set when the reputation metrics for that configuration set (such as your bounce on complaint rate) exceed certain thresholds.&lt;/p&gt;&lt;p&gt;You can execute this operation no more than once per second.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSESService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESUpdateConfigurationSetSendingEnabledRequest</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask *)updateConfigurationSetSendingEnabled:(AWSSESUpdateConfigurationSetSendingEnabledRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the UpdateConfigurationSetSendingEnabled service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will be nil. On failed execution, task.error may contain an NSError with AWSSESErrorDomain domain and the following error code: AWSSESErrorConfigurationSetDoesNotExist.</Abstract></ReturnValue>
			<Anchor>//api/name/updateConfigurationSetSendingEnabled:</Anchor>
            <NodeRef refid="2030"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSES/updateConfigurationSetSendingEnabled:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Enables or disables email sending for messages sent using a specific configuration set in a given AWS Region. You can use this operation in conjunction with Amazon CloudWatch alarms to temporarily pause email sending for a configuration set when the reputation metrics for that configuration set (such as your bounce on complaint rate) exceed certain thresholds.&lt;/p&gt;&lt;p&gt;You can execute this operation no more than once per second.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSESService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESUpdateConfigurationSetSendingEnabledRequest</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)updateConfigurationSetSendingEnabled:(AWSSESUpdateConfigurationSetSendingEnabledRequest *)request completionHandler:(void ( ^ _Nullable ) ( NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the UpdateConfigurationSetSendingEnabled service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSSESErrorDomain domain and the following error code: AWSSESErrorConfigurationSetDoesNotExist.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/updateConfigurationSetSendingEnabled:completionHandler:</Anchor>
            <NodeRef refid="2030"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSES/updateConfigurationSetTrackingOptions:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Modifies an association between a configuration set and a custom domain for open and click event tracking. &lt;/p&gt;&lt;p&gt;By default, images and links used for tracking open and click events are hosted on domains operated by Amazon SES. You can configure a subdomain of your own to handle these events. For information about using custom domains, see the Amazon SES Developer Guide.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSESService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESUpdateConfigurationSetTrackingOptionsRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESUpdateConfigurationSetTrackingOptionsResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSSESUpdateConfigurationSetTrackingOptionsResponse*&gt; *)updateConfigurationSetTrackingOptions:(AWSSESUpdateConfigurationSetTrackingOptionsRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the UpdateConfigurationSetTrackingOptions service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSSESUpdateConfigurationSetTrackingOptionsResponse. On failed execution, task.error may contain an NSError with AWSSESErrorDomain domain and the following error code: AWSSESErrorConfigurationSetDoesNotExist, AWSSESErrorTrackingOptionsDoesNotExist, AWSSESErrorInvalidTrackingOptions.</Abstract></ReturnValue>
			<Anchor>//api/name/updateConfigurationSetTrackingOptions:</Anchor>
            <NodeRef refid="2030"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSES/updateConfigurationSetTrackingOptions:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Modifies an association between a configuration set and a custom domain for open and click event tracking. &lt;/p&gt;&lt;p&gt;By default, images and links used for tracking open and click events are hosted on domains operated by Amazon SES. You can configure a subdomain of your own to handle these events. For information about using custom domains, see the Amazon SES Developer Guide.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSESService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESUpdateConfigurationSetTrackingOptionsRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESUpdateConfigurationSetTrackingOptionsResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)updateConfigurationSetTrackingOptions:(AWSSESUpdateConfigurationSetTrackingOptionsRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSSESUpdateConfigurationSetTrackingOptionsResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the UpdateConfigurationSetTrackingOptions service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSSESErrorDomain domain and the following error code: AWSSESErrorConfigurationSetDoesNotExist, AWSSESErrorTrackingOptionsDoesNotExist, AWSSESErrorInvalidTrackingOptions.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/updateConfigurationSetTrackingOptions:completionHandler:</Anchor>
            <NodeRef refid="2030"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSES/updateCustomVerificationEmailTemplate:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Updates an existing custom verification email template.&lt;/p&gt;&lt;p&gt;For more information about custom verification email templates, see Using Custom Verification Email Templates in the &lt;i&gt;Amazon SES Developer Guide&lt;/i&gt;.&lt;/p&gt;&lt;p&gt;You can execute this operation no more than once per second.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSESService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESUpdateCustomVerificationEmailTemplateRequest</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask *)updateCustomVerificationEmailTemplate:(AWSSESUpdateCustomVerificationEmailTemplateRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the UpdateCustomVerificationEmailTemplate service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will be nil. On failed execution, task.error may contain an NSError with AWSSESErrorDomain domain and the following error code: AWSSESErrorCustomVerificationEmailTemplateDoesNotExist, AWSSESErrorFromEmailAddressNotVerified, AWSSESErrorCustomVerificationEmailInvalidContent.</Abstract></ReturnValue>
			<Anchor>//api/name/updateCustomVerificationEmailTemplate:</Anchor>
            <NodeRef refid="2030"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSES/updateCustomVerificationEmailTemplate:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Updates an existing custom verification email template.&lt;/p&gt;&lt;p&gt;For more information about custom verification email templates, see Using Custom Verification Email Templates in the &lt;i&gt;Amazon SES Developer Guide&lt;/i&gt;.&lt;/p&gt;&lt;p&gt;You can execute this operation no more than once per second.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSESService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESUpdateCustomVerificationEmailTemplateRequest</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)updateCustomVerificationEmailTemplate:(AWSSESUpdateCustomVerificationEmailTemplateRequest *)request completionHandler:(void ( ^ _Nullable ) ( NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the UpdateCustomVerificationEmailTemplate service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSSESErrorDomain domain and the following error code: AWSSESErrorCustomVerificationEmailTemplateDoesNotExist, AWSSESErrorFromEmailAddressNotVerified, AWSSESErrorCustomVerificationEmailInvalidContent.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/updateCustomVerificationEmailTemplate:completionHandler:</Anchor>
            <NodeRef refid="2030"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSES/updateReceiptRule:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Updates a receipt rule.&lt;/p&gt;&lt;p&gt;For information about managing receipt rules, see the Amazon SES Developer Guide.&lt;/p&gt;&lt;p&gt;You can execute this operation no more than once per second.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSESService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESUpdateReceiptRuleRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESUpdateReceiptRuleResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSSESUpdateReceiptRuleResponse*&gt; *)updateReceiptRule:(AWSSESUpdateReceiptRuleRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the UpdateReceiptRule service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSSESUpdateReceiptRuleResponse. On failed execution, task.error may contain an NSError with AWSSESErrorDomain domain and the following error code: AWSSESErrorInvalidSnsTopic, AWSSESErrorInvalidS3Configuration, AWSSESErrorInvalidLambdaFunction, AWSSESErrorRuleSetDoesNotExist, AWSSESErrorRuleDoesNotExist, AWSSESErrorLimitExceeded.</Abstract></ReturnValue>
			<Anchor>//api/name/updateReceiptRule:</Anchor>
            <NodeRef refid="2030"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSES/updateReceiptRule:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Updates a receipt rule.&lt;/p&gt;&lt;p&gt;For information about managing receipt rules, see the Amazon SES Developer Guide.&lt;/p&gt;&lt;p&gt;You can execute this operation no more than once per second.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSESService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESUpdateReceiptRuleRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESUpdateReceiptRuleResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)updateReceiptRule:(AWSSESUpdateReceiptRuleRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSSESUpdateReceiptRuleResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the UpdateReceiptRule service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSSESErrorDomain domain and the following error code: AWSSESErrorInvalidSnsTopic, AWSSESErrorInvalidS3Configuration, AWSSESErrorInvalidLambdaFunction, AWSSESErrorRuleSetDoesNotExist, AWSSESErrorRuleDoesNotExist, AWSSESErrorLimitExceeded.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/updateReceiptRule:completionHandler:</Anchor>
            <NodeRef refid="2030"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSES/updateTemplate:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Updates an email template. Email templates enable you to send personalized email to one or more destinations in a single API operation. For more information, see the Amazon SES Developer Guide.&lt;/p&gt;&lt;p&gt;You can execute this operation no more than once per second.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSESService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESUpdateTemplateRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESUpdateTemplateResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSSESUpdateTemplateResponse*&gt; *)updateTemplate:(AWSSESUpdateTemplateRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the UpdateTemplate service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSSESUpdateTemplateResponse. On failed execution, task.error may contain an NSError with AWSSESErrorDomain domain and the following error code: AWSSESErrorTemplateDoesNotExist, AWSSESErrorInvalidTemplate.</Abstract></ReturnValue>
			<Anchor>//api/name/updateTemplate:</Anchor>
            <NodeRef refid="2030"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSES/updateTemplate:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Updates an email template. Email templates enable you to send personalized email to one or more destinations in a single API operation. For more information, see the Amazon SES Developer Guide.&lt;/p&gt;&lt;p&gt;You can execute this operation no more than once per second.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSESService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESUpdateTemplateRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESUpdateTemplateResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)updateTemplate:(AWSSESUpdateTemplateRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSSESUpdateTemplateResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the UpdateTemplate service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSSESErrorDomain domain and the following error code: AWSSESErrorTemplateDoesNotExist, AWSSESErrorInvalidTemplate.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/updateTemplate:completionHandler:</Anchor>
            <NodeRef refid="2030"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSES/verifyDomainDkim:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Returns a set of DKIM tokens for a domain. DKIM &lt;i&gt;tokens&lt;/i&gt; are character strings that represent your domain&apos;s identity. Using these tokens, you will need to create DNS CNAME records that point to DKIM public keys hosted by Amazon SES. Amazon Web Services will eventually detect that you have updated your DNS records; this detection process may take up to 72 hours. Upon successful detection, Amazon SES will be able to DKIM-sign email originating from that domain.&lt;/p&gt;&lt;p&gt;You can execute this operation no more than once per second.&lt;/p&gt;&lt;p&gt;To enable or disable Easy DKIM signing for a domain, use the &lt;code&gt;SetIdentityDkimEnabled&lt;/code&gt; operation.&lt;/p&gt;&lt;p&gt;For more information about creating DNS records using DKIM tokens, go to the Amazon SES Developer Guide.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSESService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESVerifyDomainDkimRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESVerifyDomainDkimResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSSESVerifyDomainDkimResponse*&gt; *)verifyDomainDkim:(AWSSESVerifyDomainDkimRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the VerifyDomainDkim service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSSESVerifyDomainDkimResponse.</Abstract></ReturnValue>
			<Anchor>//api/name/verifyDomainDkim:</Anchor>
            <NodeRef refid="2030"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSES/verifyDomainDkim:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Returns a set of DKIM tokens for a domain. DKIM &lt;i&gt;tokens&lt;/i&gt; are character strings that represent your domain&apos;s identity. Using these tokens, you will need to create DNS CNAME records that point to DKIM public keys hosted by Amazon SES. Amazon Web Services will eventually detect that you have updated your DNS records; this detection process may take up to 72 hours. Upon successful detection, Amazon SES will be able to DKIM-sign email originating from that domain.&lt;/p&gt;&lt;p&gt;You can execute this operation no more than once per second.&lt;/p&gt;&lt;p&gt;To enable or disable Easy DKIM signing for a domain, use the &lt;code&gt;SetIdentityDkimEnabled&lt;/code&gt; operation.&lt;/p&gt;&lt;p&gt;For more information about creating DNS records using DKIM tokens, go to the Amazon SES Developer Guide.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSESService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESVerifyDomainDkimRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESVerifyDomainDkimResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)verifyDomainDkim:(AWSSESVerifyDomainDkimRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSSESVerifyDomainDkimResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the VerifyDomainDkim service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/verifyDomainDkim:completionHandler:</Anchor>
            <NodeRef refid="2030"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSES/verifyDomainIdentity:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Adds a domain to the list of identities for your Amazon SES account in the current AWS Region and attempts to verify it. For more information about verifying domains, see Verifying Email Addresses and Domains in the &lt;i&gt;Amazon SES Developer Guide.&lt;/i&gt;&lt;/p&gt;&lt;p&gt;You can execute this operation no more than once per second.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSESService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESVerifyDomainIdentityRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESVerifyDomainIdentityResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSSESVerifyDomainIdentityResponse*&gt; *)verifyDomainIdentity:(AWSSESVerifyDomainIdentityRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the VerifyDomainIdentity service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSSESVerifyDomainIdentityResponse.</Abstract></ReturnValue>
			<Anchor>//api/name/verifyDomainIdentity:</Anchor>
            <NodeRef refid="2030"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSES/verifyDomainIdentity:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Adds a domain to the list of identities for your Amazon SES account in the current AWS Region and attempts to verify it. For more information about verifying domains, see Verifying Email Addresses and Domains in the &lt;i&gt;Amazon SES Developer Guide.&lt;/i&gt;&lt;/p&gt;&lt;p&gt;You can execute this operation no more than once per second.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSESService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESVerifyDomainIdentityRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESVerifyDomainIdentityResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)verifyDomainIdentity:(AWSSESVerifyDomainIdentityRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSSESVerifyDomainIdentityResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the VerifyDomainIdentity service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/verifyDomainIdentity:completionHandler:</Anchor>
            <NodeRef refid="2030"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSES/verifyEmailAddress:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Deprecated. Use the &lt;code&gt;VerifyEmailIdentity&lt;/code&gt; operation to verify a new email address.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSESService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESVerifyEmailAddressRequest</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask *)verifyEmailAddress:(AWSSESVerifyEmailAddressRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the VerifyEmailAddress service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will be nil.</Abstract></ReturnValue>
			<Anchor>//api/name/verifyEmailAddress:</Anchor>
            <NodeRef refid="2030"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSES/verifyEmailAddress:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Deprecated. Use the &lt;code&gt;VerifyEmailIdentity&lt;/code&gt; operation to verify a new email address.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSESService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESVerifyEmailAddressRequest</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)verifyEmailAddress:(AWSSESVerifyEmailAddressRequest *)request completionHandler:(void ( ^ _Nullable ) ( NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the VerifyEmailAddress service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          error - An error object that indicates why the request failed, or nil if the request was successful.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/verifyEmailAddress:completionHandler:</Anchor>
            <NodeRef refid="2030"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSES/verifyEmailIdentity:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Adds an email address to the list of identities for your Amazon SES account in the current AWS region and attempts to verify it. As a result of executing this operation, a verification email is sent to the specified address.&lt;/p&gt;&lt;p&gt;You can execute this operation no more than once per second.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSESService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESVerifyEmailIdentityRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESVerifyEmailIdentityResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSSESVerifyEmailIdentityResponse*&gt; *)verifyEmailIdentity:(AWSSESVerifyEmailIdentityRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the VerifyEmailIdentity service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSSESVerifyEmailIdentityResponse.</Abstract></ReturnValue>
			<Anchor>//api/name/verifyEmailIdentity:</Anchor>
            <NodeRef refid="2030"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSES/verifyEmailIdentity:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Adds an email address to the list of identities for your Amazon SES account in the current AWS region and attempts to verify it. As a result of executing this operation, a verification email is sent to the specified address.&lt;/p&gt;&lt;p&gt;You can execute this operation no more than once per second.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSESService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESVerifyEmailIdentityRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSSESVerifyEmailIdentityResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)verifyEmailIdentity:(AWSSESVerifyEmailIdentityRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSSESVerifyEmailIdentityResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the VerifyEmailIdentity service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/verifyEmailIdentity:completionHandler:</Anchor>
            <NodeRef refid="2030"/>
		</Token>
		
        
        
	</File>
</Tokens>